{"version":3,"sources":["components/Accordion/styles.ts","components/Accordion/Accordion.tsx","pages/AssetDetails/styles.ts","features/cards/MetaCard/styles.ts","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledAccordionWrapper","styled","div","$expanded","md","StyledAccordionHeader","StyledAccordionTitle","h3","StyledAccordionToggleButton","button","StyledAccordiomToggleIcon","img","Accordion","title","children","enableToggle","useState","expand","setExpand","onClick","src","AccordionToggleIcon","alt","StyledAssetDetailsContentWrappar","StyledCardError","h1","StyledLoadingHolder","StyledLoader","Puff","StyledAssetDetailContent","xl","StyledExplorerIcon","pulseAnimate","StyledCardMainDetails","p","StyledMediaWrapper","BgMetaCard","StyledMedia","StyledMintControls","StyledMintSkipButton","StyledMintSkipButtonImg","StyledMintSliderIndex","StyledCardInfoWrapper","StyledCardPriceWrapper","StyledCardPriceWrapperHeader","StyledCardPriceLabel","StyledQuickActions","StyledReloadPriceAction","StyledActionIcon","StyledCardPriceValueWrapper","StyledTokenIcon","StyledCardPriceValue","StyledActionsButtonWrapper","StyledBuyButton","StyledMakeOfferButton","StyledCardInfoAccordion","StyledCardInfo","StyledCardInfoContainer","StyledCardInfoLabel","StyledCardInfoValue","StyledCardPropertiesAccordion","StyledCardProperties","sm","lg","StyledCardPropertyContainer","StyledCardPropertyIconWrapper","StyledCardPropertyIcon","StyledCardProperty","StyledCardPropertyLabel","StyledCardPropertyValue","StyledMarketAccordion","StyledHoldersAccordion","keyframes","StyledCardWrappar","StyledMediaWrappar","StyledMetaCardImg","StyledCardDetail","StyledCardName","StyledCardFullName","StyledBlockScoutIcon","StyledUniversalProfileIcon","StyledTransferButton","StyledTransferIcon","AssetDetails","params","useParams","explorer","getChainExplorer","network","wasActiveProfile","useSelector","state","userData","me","activeUser","selectUserById","asset","selectCardById","add","owner","ownerStatus","status","cardError","cards","error","cardStatus","metaDataStatus","currentIndex","setCurrentIndex","ownedTokenIds","useMemo","ownedAssets","find","item","assetAddress","toLowerCase","tokenIds","dispatch","useAppDispatch","STATUS","LOADING","fetchProfileByAddress","address","id","ls8MetaData","fetchMetaDataForTokenId","tokenId","length","toString","useEffect","fetchCard","window","scrollTo","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","label","value","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","cardInfo","valueType","totalSupply","renderCardProperties","attributes","map","trait_type","color","image","href","exploreUrl","target","rel","previousIndex","BackwardsIcon","nextIndex","ForwardsIcon","ReloadIcon","ShareIcon","OptionIcon","WethIcon","slice"],"mappings":"wqDAGaA,GAAyBC,KAAOC,IAAV,6YAIvB,qBAAGC,UAA6B,OAAS,SAG1CC,MAYEC,GAAwBJ,KAAOC,IAAV,oKAKvBE,MACU,qBAAGD,UACN,qCAAuC,UAI5CG,GAAuBL,KAAOM,GAAV,+CAIpBC,GAA8BP,KAAOQ,OAAV,yDAI3BC,GAA4BT,KAAOU,IAAV,+CACvB,qBAAGR,UACF,eAAiB,oB,SC3BpBS,GAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,aAEA,EAA4BC,qBAAkB,GAA9C,oBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,gBAAClB,GAAD,CAAwBG,UAAWc,EAAnC,UACE,gBAACZ,GAAD,CAAuBF,UAAWc,EAAlC,UACE,eAACX,GAAD,UAAuBO,IACtBE,GACC,eAACP,GAAD,CAA6BW,QAAS,kBAAMD,GAAWD,IAAvD,SACE,eAACP,GAAD,CACEP,UAAWc,EACXG,IAAKC,KACLC,IAAI,UAKXL,GAAUH,M,WC9BJS,GAAmCtB,KAAOC,IAAV,0FAMhCsB,GAAkBvB,KAAOwB,GAAV,6EAKfC,GAAsBzB,KAAOC,IAAV,6CAInByB,GAAe1B,aAAO2B,IAAP3B,CAAH,wEAKZ4B,GAA2B5B,KAAOC,IAAV,oTAM1BE,KAQA0B,MA2EEC,GAAqB9B,KAAOU,IAAV,kLAOhBqB,MAoLFC,IArIchC,KAAOiC,EAAV,gDAqIajC,KAAOC,IAAV,oLAKvBE,OAOE+B,GAAqBlC,KAAOC,IAAV,kWAGXkC,KAOThC,MAQEiC,GAAcpC,KAAOU,IAAV,8DAKX2B,GAAqBrC,KAAOC,IAAV,sKAUlBqC,GAAuBtC,KAAOQ,OAAV,iJAQpB+B,GAA0BvC,KAAOU,IAAV,6CAIvB8B,GAAwBxC,KAAOiC,EAAV,+CAIrBQ,GAAwBzC,KAAOC,IAAV,oJAKvBE,MAMEuC,GAAyB1C,KAAOC,IAAV,wXAMxBE,MAYEwC,GAA+B3C,KAAOC,IAAV,8CAI5B2C,GAAuB5C,KAAOiC,EAAV,0BAEpBY,GAAqB7C,KAAOC,IAAV,uNAUlB6C,GAA0B9C,KAAOQ,OAAV,oGAWvBuC,IANwB/C,aAAO8C,GAAP9C,CAAH,0BAEAA,aAAO8C,GAAP9C,CAAH,mDAICA,KAAOU,IAAV,8CAIhBsC,GAA8BhD,KAAOC,IAAV,8CAI3BgD,GAAkBjD,KAAOU,IAAV,0BAEfwC,GAAuBlD,KAAOiC,EAAV,+CAIpBkB,GAA6BnD,KAAOC,IAAV,kKAK5BE,MAMEiD,GAAkBpD,KAAOQ,OAAV,kKAMjBL,MAKEkD,GAAwBrD,aAAOoD,GAAPpD,CAAH,qEAIrBsD,GAA0BtD,aAAOW,GAAPX,CAAH,0BAEvBuD,GAAiBvD,KAAOC,IAAV,0FAMduD,GAA0BxD,KAAOC,IAAV,iFAMvBwD,GAAsBzD,KAAOiC,EAAV,6EAMnByB,GAAsB1D,KAAOiC,EAAV,2CAInB0B,GAAgC3D,aAAOW,GAAPX,CAAH,0BAE7B4D,GAAuB5D,KAAOC,IAAV,6VAMtB4D,KAKA1D,KAIA2D,MAKEC,GAA8B/D,KAAOC,IAAV,2JAQ3B+D,GAAgChE,KAAOC,IAAV,+IAQ7BgE,GAAyBjE,KAAOU,IAAV,6CAItBwD,GAAqBlE,KAAOC,IAAV,0BAElBkE,GAA0BnE,KAAOiC,EAAV,8DAKvBmC,GAA0BpE,KAAOiC,EAAV,0BAEvBoC,GAAwBrE,aAAOW,GAAPX,CAAH,0BAErBsE,GAAyBtE,aAAOW,GAAPX,CAAH,2B,mdCrhBtB+B,EAAewC,YAAH,mIASZC,EAAoBxE,IAAOC,IAAV,qLAMnB4D,KAKEY,EAAqBzE,IAAOC,IAAV,qPAILkC,IAKf0B,KAKEa,EAAoB1E,IAAOU,IAAV,6IAKnBmD,KAMEc,EAAmB3E,IAAOC,IAAV,uOAWhB2E,EAAiB5E,IAAOM,GAAV,iHAIhBuD,KAKEgB,EAAqB7E,IAAOiC,EAAV,kOAWlB6C,EAAuB9E,IAAOU,IAAV,oPAMlBqB,EAEJ8B,KAOEkB,EAA6B/E,IAAOU,IAAV,iPAMxBqB,EAEJ8B,KAOEmB,EAAuBhF,IAAOQ,OAAV,uUAOlBuB,EAIJ8B,KAQEoB,EAAqBjF,IAAOU,IAAV,gD,4ICgehBwE,UA5gBgB,WAAO,IAAD,EAC7BC,EAASC,cAETC,EAAWC,YAAiBH,EAAOI,SAEnCC,EAAmBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,SAASC,MAEpEC,EAAaJ,aACjB,SAACC,GAAD,OACEF,GACAM,YAAeJ,EAAMC,SAASR,EAAOI,SAAUC,MAO7CO,EAAQN,aAAY,SAACC,GAAD,OACxBM,YAAeN,EAAOP,EAAOc,QAGzBC,EAAQT,aAAY,SAACC,GAAD,OACxBI,YACEJ,EAAMC,SAASR,EAAOI,UACjB,OAALQ,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQH,EAAMG,MAAQ,OAI3BC,EAAcV,aAClB,SAACC,GAAD,OAAsBA,EAAMC,SAASR,EAAOI,SAASa,UAWjDC,EAAYZ,aAAY,SAACC,GAAD,OAAsBA,EAAMY,MAAMC,SAE1DC,EAAaf,aAAY,SAACC,GAAD,OAAsBA,EAAMY,MAAMF,UAE3DK,EAAiBhB,aACrB,SAACC,GAAD,OAAsBA,EAAMY,MAAMG,kBAEpC,EAAwC1F,mBAAiB,GAAzD,mBAAO2F,EAAP,KAAqBC,EAArB,KAEMC,EAAgBC,mBACpB,wBACEhB,IAAU,UACVA,EAAWiB,YAAYC,MACrB,SAACC,GAAD,OAAUA,EAAKC,aAAaC,gBAAkB/B,EAAOc,IAAIiB,wBAFjD,aACV,EAEGC,YACL,CAACtB,EAAYV,EAAOc,MAGhBmB,EAAWC,cAajBR,mBAAQ,WACDd,IAASG,GAASC,IAAgBmB,IAAOC,SAE9CH,EACEI,YAAsB,CACpBC,QAAS1B,EAAMG,MACfX,QAASJ,EAAOI,aAGnB,CAACQ,EAAOqB,EAAUlB,EAAOC,EAAahB,EAAOI,UAEhDsB,mBAAQ,WAEHd,GACAZ,EAAOuC,MACR,UAAGvC,EAAOuC,MAAQ3B,EAAM4B,cACxBlB,IAAmBa,IAAOC,SAG5BH,EACEQ,YAAwB,CACtBX,aAAc9B,EAAOc,IACrBV,QAASJ,EAAOI,QAChBsC,QAAS1C,EAAOuC,QAGnB,CAAC3B,EAAOqB,EAAUX,EAAgBtB,EAAOc,IAAKd,EAAOuC,GAAIvC,EAAOI,UAEnEsB,mBAAQ,YAEH1B,EAAOuC,IACRlC,GACAoB,GACAA,EAAckB,OAAS,GACvB/B,KACE,UAAGa,EAAcF,GAAcqB,cAAgBhC,EAAM4B,cACvDlB,IAAmBa,IAAOC,SAE1BH,EACEQ,YAAwB,CACtBX,aAAc9B,EAAOc,IACrBV,QAASJ,EAAOI,QAChBsC,QAASjB,EAAcF,QAI5B,CACDX,EACAW,EACAU,EACAX,EACAG,EACAzB,EAAOc,IACPd,EAAOuC,GACPvC,EAAOI,QACPC,IA+BFwC,qBAAU,WACHjC,GAASS,IAAec,IAAOC,SAClCH,EAASa,YAAU,CAAER,QAAStC,EAAOc,IAAKV,QAASJ,EAAOI,WAE5D2C,OAAOC,SAAS,EAAG,KAClB,CAACpC,EAAOS,EAAYY,EAAUjC,EAAOc,IAAKd,EAAOI,UAEpD,IAAM6C,EAA8CvB,mBAClD,iBAAO,CACLwB,KAAMC,IACNC,QAASC,IACT,mBAAoBC,IACpB,cAAeC,IACfC,OAAQC,IACRC,KAAMC,IACNC,OAAQC,IACRC,KAAMC,OAER,IAGIC,EAAiBtC,mBACrB,qCAAM,CACJ,CACEuC,MAAO,OACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACI4C,KACNC,KAAMjB,KAER,CACEc,MAAO,UACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACI8C,QACND,KAAMf,KAER,CACEY,MAAO,WACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACI+C,gBACNF,KAAMd,KAER,CACEW,MAAO,MACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACIgD,WACNH,KAAMb,KAER,CACEU,MAAO,SACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACIiD,OACNJ,KAAMX,KAER,CACEQ,MAAO,OACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACIkD,UACNL,KAAMT,KAER,CACEM,MAAO,SACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACImD,YACNN,KAAMP,KAER,CACEI,MAAO,OACPC,MAAK,OACHtD,QADG,IACHA,GADG,UACHA,EAAO4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD9D,aACH,EACIoD,UACNP,KAAML,QAGV,CAACnD,EAAOW,EAAcE,IAGlBmD,EAIA,CACJ,CACEX,MAAO,mBACPC,MAAOtD,EAAQA,EAAM0B,QAAU,GAC/BuC,UAAW,WAEb,CACEZ,MAAO,OACPC,MAAOzC,EAAgBA,EAAcF,GAAcqB,WAAa,IAElE,CACEqB,MAAO,yBACPC,MAAOtD,EAAQA,EAAMkE,YAAYlC,WAAa,IAEhD,CAAEqB,MAAO,iBAAkBC,MAAO,IAClC,CAAED,MAAO,UAAWC,MAAOtD,EAAQA,EAAMR,QAAU,IACnD,CAAE6D,MAAO,QAASC,MAAO,IACzB,CAAED,MAAO,gBAAiBC,MAAO,GAAIW,UAAW,YAoE5CE,EAAuBrD,mBAAQ,WAAO,IAAD,EACzC,OACEd,IAAK,UACLA,EAAM4B,YAAYf,EAAgBA,EAAcF,GAAgB,UAD3D,aACL,EACIyD,aACJpE,EAAM4B,YAAYf,EAAgBA,EAAcF,GAAgB,GAC7DyD,WAAWrC,OAAS,EAEvB,OAAO/B,QAAP,IAAOA,OAAP,EAAOA,EAAO4B,YACZf,EAAgBA,EAAcF,GAAgB,GAC9CyD,WAAWC,KAAI,SAACpD,GAChB,MAAI,eAAgBA,EAEhB,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE7F,IAAKiH,EAAiBpB,EAAKqD,YAC3BhJ,IAAI,OAGR,eAAC,IAAD,WACE,cAAC,IAAD,UACG2F,EAAKqD,aAER,cAAC,IAAD,UAA0BrD,EAAKqC,aAXDrC,EAAKqD,YAgBpC,QAGFlB,EAAeiB,KAAI,SAACpD,GAAD,OACxB,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAwB7F,IAAK6F,EAAKuC,KAAMlI,IAAI,OAE9C,eAAC,IAAD,WACE,cAAC,IAAD,UAA0B2F,EAAKoC,QAC/B,cAAC,IAAD,UAA0BpC,EAAKqC,aANDrC,EAAKoC,YAW1C,CAACrD,EAAOoD,EAAgBzC,EAAcE,EAAewB,IAExD,OACE,cAAC,IAAD,UACkB,YAAf5B,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAc8D,MAAM,cAGtB,mCACGjE,GAA4B,WAAfG,EACZ,mCACE,cAAC,IAAD,gCAGF,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CACErF,IAAG,OAAE4E,QAAF,IAAEA,GAAF,UAAEA,EAAO4B,YAAYjB,UAArB,aAAE,EAAkC6D,MACvClJ,IAAI,KAEN,mBACEmJ,KAAMnF,GAAYA,EAASoF,YAAT,OAAsB1E,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAO0B,SAC/CiD,OAAO,SACPC,IAAI,aAHN,SAKE,cAAC,IAAD,CAAoBxJ,IAAG,OAAEkE,QAAF,IAAEA,OAAF,EAAEA,EAAUkE,KAAMlI,IAAI,OAE9CmE,GAAoBoB,GACnB,eAAC,IAAD,WACE,cAAC,IAAD,CAAsB1F,QAtIrB,WACnB,IAAM0J,EAAgBlE,EAAe,GAChCE,GAAiBgE,EAAgB,GACtCjE,EAAgBiE,IAmIE,SACE,cAAC,IAAD,CAAyBzJ,IAAK0J,IAAexJ,IAAI,OAEnD,eAAC,IAAD,WACGqF,EAAe,EADlB,WACsBE,QADtB,IACsBA,OADtB,EACsBA,EAAekB,UAErC,cAAC,IAAD,CAAsB5G,QAlJzB,WACf,IAAM4J,EAAYpE,EAAe,GAC5BE,GAAiBkE,GAAalE,EAAckB,QACjDnB,EAAgBmE,IA+IE,SACE,cAAC,IAAD,CAAyB3J,IAAK4J,IAAc1J,IAAI,aAKxD,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAkBF,IAAK6J,QAEzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAkB7J,IAAK8J,QAEzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAkB9J,IAAK+J,cAI7B,eAAC,IAAD,WACE,cAAC,IAAD,CAAiB/J,IAAKgK,IAAU9J,IAAI,KACpC,cAAC,IAAD,mBAEF,eAAC,IAAD,WACE,cAAC,IAAD,sBACA,cAAC,IAAD,+BAGJ,cAAC,IAAD,CAAyBT,MAAM,YAAYE,cAAY,EAAvD,SACE,cAAC,IAAD,UACGiJ,EAASK,KAAI,SAACpD,GAAD,OACZ,eAAC,IAAD,WACE,cAAC,IAAD,UACGA,EAAKoC,QAER,cAAC,IAAD,UACsB,YAAnBpC,EAAKgD,UAAL,UACMhD,EAAKqC,MAAM+B,MAAM,EAAG,GAD1B,cACkCpE,EAAKqC,MAAM+B,MACxCpE,EAAKqC,MAAMvB,OAAS,EACpBd,EAAKqC,MAAMvB,SAEbd,EAAKqC,UAViBrC,EAAKoC,oBAkB7C,cAAC,IAAD,CAA+BxI,MAAM,UAAUE,cAAY,EAA3D,SACE,cAAC,IAAD,UACGoJ,MAGL,cAAC,IAAD,CAAuBtJ,MAAM,SAASE,cAAY,EAAlD,SACE,wDAEF,cAAC,IAAD,CAAwBF,MAAM,gBAAgBE,cAAY","file":"static/js/7.9efbfdfd.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { md } from '../../utility';\n\nexport const StyledAccordionWrapper = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  border-bottom: 1px solid rgba(223, 223, 223, 0.2);\n  height: 40px;\n\n  @media ${md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledAccordionTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionTitle,\n  StyledAccordionToggleButton,\n  StyledAccordionWrapper,\n} from './styles';\n\ninterface IProps {\n  title: string;\n  children: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const Accordion: React.FC<IProps> = ({\n  title,\n  children,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledAccordionWrapper $expanded={expand}>\n      <StyledAccordionHeader $expanded={expand}>\n        <StyledAccordionTitle>{title}</StyledAccordionTitle>\n        {enableToggle && (\n          <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n            <StyledAccordiomToggleIcon\n              $expanded={expand}\n              src={AccordionToggleIcon}\n              alt=\"\"\n            />\n          </StyledAccordionToggleButton>\n        )}\n      </StyledAccordionHeader>\n      {expand && children}\n    </StyledAccordionWrapper>\n  );\n};\n","import { Puff } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport { BgMetaCard } from '../../assets';\nimport { Accordion } from '../../components/Accordion';\nimport { pulseAnimate } from '../../features/cards/MetaCard/styles';\nimport { lg, md, sm, xl } from '../../utility';\n\nexport const StyledAssetDetailsContentWrappar = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nexport const StyledCardError = styled.h1`\n  font-size: 30px;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledLoadingHolder = styled.div`\n  margin: auto;\n`;\n\nexport const StyledLoader = styled(Puff)`\n  margin: 0 auto 0 auto;\n  height: 400px;\n`;\n\nexport const StyledAssetDetailContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n\n  @media ${md} {\n    max-width: 1440px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 48px 40px 0 40px;\n    row-gap: 30px;\n  }\n\n  @media ${xl} {\n    padding: 48px 40px 0 40px;\n  }\n`;\n\n// export const StyledGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(2, 392px);\n//     margin: 0 auto 0 auto;\n//     column-gap: 20px;\n//   }\n\n//   @media ${xl} {\n//     grid-template-columns: 2fr 1fr;\n//     column-gap: 10px;\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledAssetDetailGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n//   column-gap: 10px;\n//   row-gap: 20px;\n\n//   @media ${xl} {\n//     grid-template-columns: repeat(2, 1fr);\n//   }\n// `;\n\n// export const StyledMediaWrappar = styled.div`\n//   position: relative;\n//   background: url(${BgMetaCard});\n//   background-position: center;\n//   background-repeat: no-repeat;\n//   background-size: cover;\n//   display: flex;\n//   height: 473px;\n\n//   @media ${sm} {\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//   }\n// `;\n\n// export const StyledMetaCardImg = styled.img`\n//   width: 221px;\n//   margin: auto;\n// `;\n\n// export const StyledStatsName = styled.h1`\n//   position: absolute;\n//   left: 5%;\n//   margin-top: 10px;\n//   font-size: 24px;\n//   font-weight: 700;\n// `;\n\n// export const StyledUniversalProfileIcon = styled.img`\n//   position: absolute;\n//   width: 44px;\n//   height: 44px;\n//   bottom: 5%;\n//   left: 10%;\n//   animation: ${pulseAnimate} 2s ease-in-out infinite;\n// `;\n\nexport const StyledExplorerIcon = styled.img`\n  position: absolute;\n  width: 44px;\n  height: 44px;\n  bottom: 0;\n  left: 0;\n  margin: 0 0 20px 20px;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n`;\n\n// export const StyledDetailsWrappar = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 10px 0px 0px 0px;\n\n//   @media ${sm} {\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     min-height: 473px;\n//   }\n// `;\n\n// export const StyledCardInfoLabel = styled.h2`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin: 0 8px 10px 8px;\n//   border-width: 0 0 1px 0;\n//   border-style: solid;\n//   border-color: white;\n//   padding-bottom: 5px;\n\n//   @media ${sm} {\n//     margin: 0 20px 5px 20px;\n//   }\n// `;\n\n// export const StyledInfoGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 35% 1fr;\n//   padding: 0 8px 5px 8px;\n//   row-gap: 10px;\n\n//   @media ${sm} {\n//     padding: 0 20px 0 20px;\n//   }\n// `;\n\nexport const StyledLabel = styled.p`\n  font-size: 15px;\n`;\n\n// export const StyledValue = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   text-transform: capitalize;\n// `;\n\n// export const StyledFullName = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   margin: 0 10px 0 10px;\n//   padding: 15px 0 15px 0;\n//   border-width: 2px 0 2px 0;\n//   border-style: solid;\n//   border-color: rgba(255, 255, 255, 0.25);\n//   line-height: 17px;\n\n//   @media ${sm} {\n//     margin: 0;\n//     padding: 15px 20px 15px 20px;\n//     border-width: 2px 0 0 0;\n//     margin-top: auto;\n//   }\n// `;\n\n// export const StyledExtraInfo = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   height: max-content;\n//   padding: 0 8px 0 8px;\n//   margin-top: 20px;\n\n//   @media ${sm} {\n//     padding: 0;\n//   }\n\n//   @media ${lg} {\n//     margin: 0;\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     padding: 15px 10px 15px 10px;\n//   }\n// `;\n\n// export const StyledIssuerLabel = styled.h3`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin-bottom: 10px;\n\n//   @media ${lg} {\n//     width: 116px;\n//     border-width: 0 0 1px 0;\n//     border-style: solid;\n//     border-color: rgba(223, 223, 223, 1);\n//   }\n// `;\n\n// export const StyledCreatorLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n// `;\n\n// export const StyledHolderLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n//   margin-left: 8px;\n//   border: none;\n\n//   @media ${sm} {\n//     margin-left: 48px;\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledIssuerWrappar = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   justify-items: center;\n//   column-gap: 5px;\n//   row-gap: 10px;\n//   /*\n//     @media ${sm} {\n//         grid-template-columns: repeat(3, 1fr);\n//     } */\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(3, 1fr);\n//   }\n// `;\n\n// export const StyledCreatorWrappar = styled(StyledIssuerWrappar)``;\n\n// export const StyledHolderWrappar = styled(StyledIssuerWrappar)`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   margin: 0 8px 0 8px;\n//   justify-items: center;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(5, 1fr);\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//     grid-template-columns: repeat(6, 1fr);\n//   }\n// `;\n\n// Re designed styled components\n\nexport const StyledCardMainDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 20px;\n    height: 590px;\n  }\n`;\n\nexport const StyledMediaWrapper = styled.div`\n  position: relative;\n  display: flex;\n  background: url(${BgMetaCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 445px;\n\n  @media ${md} {\n    width: 50%;\n    border-radius: 10px;\n    border: 1px solid rgba(255, 255, 255, 0.25);\n    height: 100%;\n  }\n`;\n\nexport const StyledMedia = styled.img`\n  width: 230px;\n  margin: auto;\n`;\n\nexport const StyledMintControls = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: max-content;\n  display: flex;\n  column-gap: 20px;\n  margin: 0 20px 20px 0;\n`;\n\nexport const StyledMintSkipButton = styled.button`\n  background: rgba(255, 255, 255, 0.12);\n  border-radius: 100%;\n  height: 40px;\n  width: 40px;\n  display: flex;\n`;\n\nexport const StyledMintSkipButtonImg = styled.img`\n  margin: auto;\n`;\n\nexport const StyledMintSliderIndex = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    width: 50%;\n    row-gap: 20px;\n  }\n`;\n\nexport const StyledCardPriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  row-gap: 10px;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 98.49%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledCardPriceWrapperHeader = styled.div`\n  display: flex;\n`;\n\nexport const StyledCardPriceLabel = styled.p``;\n\nexport const StyledQuickActions = styled.div`\n  display: grid;\n  width: 110px;\n  height: 30px;\n  grid-template-columns: repeat(3, 1fr);\n  margin-left: auto;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n`;\n\nexport const StyledReloadPriceAction = styled.button`\n  display: flex;\n  border-right: 1px solid rgba(255, 255, 255, 0.15);\n`;\n\nexport const StyledShareCardAction = styled(StyledReloadPriceAction)``;\n\nexport const StyledOptionAction = styled(StyledReloadPriceAction)`\n  border-right: none;\n`;\n\nexport const StyledActionIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledCardPriceValueWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledTokenIcon = styled.img``;\n\nexport const StyledCardPriceValue = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledActionsButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 10px;\n  }\n`;\n\nexport const StyledBuyButton = styled.button`\n  width: 100%;\n  background: rgba(255, 129, 1, 1);\n  border-radius: 5px;\n  padding: 7px 0;\n\n  @media ${md} {\n    width: 50%;\n  }\n`;\n\nexport const StyledMakeOfferButton = styled(StyledBuyButton)`\n  background: rgba(255, 255, 255, 0.2);\n`;\n\nexport const StyledCardInfoAccordion = styled(Accordion)``;\n\nexport const StyledCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const StyledCardInfoContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: auto 0;\n`;\n\nexport const StyledCardInfoLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n  width: 50%;\n`;\n\nexport const StyledCardInfoValue = styled.p`\n  width: 50%;\n`;\n\nexport const StyledCardPropertiesAccordion = styled(Accordion)``;\n\nexport const StyledCardProperties = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  row-gap: 20px;\n  padding: 20px 0;\n\n  @media ${sm} {\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 20px;\n  }\n\n  @media ${md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media ${lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport const StyledCardPropertyContainer = styled.div`\n  display: flex;\n  padding: 15px 20px;\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.06);\n  column-gap: 10px;\n`;\n\nexport const StyledCardPropertyIconWrapper = styled.div`\n  display: flex;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  height: 50px;\n  width: 50px;\n`;\n\nexport const StyledCardPropertyIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledCardProperty = styled.div``;\n\nexport const StyledCardPropertyLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n`;\n\nexport const StyledCardPropertyValue = styled.p``;\n\nexport const StyledMarketAccordion = styled(Accordion)``;\n\nexport const StyledHoldersAccordion = styled(Accordion)``;\n","import styled, { keyframes } from 'styled-components';\nimport { BgMetaCard } from '../../../assets';\nimport { sm } from '../../../utility';\n\nexport const pulseAnimate = keyframes`\n    0%, 100% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.2);\n    }\n`;\n\nexport const StyledCardWrappar = styled.div`\n  position: relative;\n  width: 165px;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n  border-radius: 10px;\n\n  @media ${sm} {\n    width: 212px;\n  }\n`;\n\nexport const StyledMediaWrappar = styled.div`\n  width: 100%;\n  height: 211px;\n  display: flex;\n  background-image: url(${BgMetaCard});\n  background-size: cover;\n  background-position: center;\n  border-radius: 10px 10px 0 0;\n\n  @media ${sm} {\n    height: 257px;\n  }\n`;\n\nexport const StyledMetaCardImg = styled.img`\n  width: 115px;\n  height: 171px;\n  margin: auto;\n\n  @media ${sm} {\n    width: 137px;\n    height: 203px;\n  }\n`;\n\nexport const StyledCardDetail = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100px;\n  background-color: rgba(37, 37, 37, 1);\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 10px 10px;\n  row-gap: 5px;\n`;\n\nexport const StyledCardName = styled.h3`\n  font-size: 15px;\n  font-weight: 700;\n\n  @media ${sm} {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledCardFullName = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 17.5px;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const StyledBlockScoutIcon = styled.img`\n  position: absolute;\n  right: 0;\n  top: 170px;\n  margin-right: 8px;\n  height: 40px;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n\n  @media ${sm} {\n    top: 205px;\n    height: 45px;\n    margin-right: 15px;\n  }\n`;\n\nexport const StyledUniversalProfileIcon = styled.img`\n  position: absolute;\n  left: 0;\n  height: 34px;\n  top: 170px;\n  margin-left: 8px;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n\n  @media ${sm} {\n    top: 205px;\n    margin-left: 15px;\n    height: 40px;\n  }\n`;\n\nexport const StyledTransferButton = styled.button`\n  position: absolute;\n  left: 0;\n  height: 34px;\n  width: 34px;\n  top: 170px;\n  margin-left: 8px;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  background-color: white;\n  border-radius: 100%;\n\n  @media ${sm} {\n    top: 205px;\n    margin-left: 15px;\n    height: 40px;\n    width: 40px;\n  }\n`;\n\nexport const StyledTransferIcon = styled.img`\n  margin: 0 auto;\n`;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  WethIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport { fetchProfileByAddress, selectUserById } from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrappar,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledTokenIcon,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledMakeOfferButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { getChainExplorer, STATUS } from '../../utility';\n// import ReactTooltip from 'react-tooltip';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\n// import { Accordion } from '../../components/Accordion';\n// import { HolderPagination } from './HoldersPagination';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const params = useParams<IPrams>();\n\n  const explorer = getChainExplorer(params.network);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeUser = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  // const profiles = useSelector((state: RootState) =>\n  //   selectUserIds(state.userData[params.network]),\n  // );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  // const creators = useSelector((state: RootState) =>\n  //   selectAllUsersItems(state.userData[params.network]),\n  // )?.filter((item) => {\n  //   return asset?.creators.some((i) => {\n  //     return i === item.address && item.network === params.network;\n  //   });\n  // });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeUser &&\n      activeUser.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeUser, params.add],\n  );\n\n  const dispatch = useAppDispatch();\n\n  // const tokenIdForSale = useMemo(\n  //   async () =>\n  //     params.id &&\n  //     (await LSP4DigitalAssetApi.getTokenSale(\n  //       params.add,\n  //       Number(params.id),\n  //       params.network,\n  //     )),\n  //   [params.add, params.network, params.id],\n  // );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus === STATUS.LOADING) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (\n      !asset ||\n      !params.id ||\n      `${params.id}` in asset.ls8MetaData ||\n      metaDataStatus === STATUS.LOADING\n    )\n      return;\n    dispatch(\n      fetchMetaDataForTokenId({\n        assetAddress: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, dispatch, metaDataStatus, params.add, params.id, params.network]);\n\n  useMemo(() => {\n    if (\n      !params.id &&\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  // useMemo(() => {\n  //   let addresses: string[] = [];\n  //   asset?.holders.forEach((item) => {\n  //     if (!profiles?.includes(item)) {\n  //       addresses.push(item);\n  //     }\n  //   });\n  //   if (addresses.length > 0) {\n  //     dispatch(\n  //       fetchAssetHolders({ address: addresses, network: params.network }),\n  //     );\n  //   }\n  // }, [asset?.holders, dispatch, params.network, profiles]);\n\n  // useMemo(() => {\n  //   let addresses: string[] = [];\n  //   asset?.creators.forEach((item) => {\n  //     if (!profiles?.includes(item)) {\n  //       addresses.push(item);\n  //     }\n  //   });\n  //   if (addresses.length > 0) {\n  //     dispatch(\n  //       fetchAssetCreator({ address: addresses, network: params.network }),\n  //     );\n  //   }\n  // }, [asset?.creators, dispatch, params.network, profiles]);\n\n  useEffect(() => {\n    if (!asset && cardStatus !== STATUS.LOADING) {\n      dispatch(fetchCard({ address: params.add, network: params.network }));\n    }\n    window.scrollTo(0, 0);\n  }, [asset, cardStatus, dispatch, params.add, params.network]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: '' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    { label: 'Current owner', value: '', valueType: 'address' },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    setCurrentIndex(previousIndex);\n  };\n\n  // const renderOwner = useMemo(() => {\n  //   if (asset?.address === params.add) {\n  //     if (owner?.address === asset.owner) {\n  //       const findBalanceOf = owner.ownedAssets.find(\n  //         (item) => item.assetAddress === params.add.toLowerCase(),\n  //       );\n  //       return (\n  //         <React.Fragment key={owner.address}>\n  //           <ProfileCard\n  //             userProfile={owner}\n  //             balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n  //             type=\"owner\"\n  //             tooltipId=\"ownerTooltip\"\n  //           />\n  //           <ReactTooltip\n  //             id=\"ownerTooltip\"\n  //             getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n  //           ></ReactTooltip>\n  //         </React.Fragment>\n  //       );\n  //     }\n  //   }\n  // }, [asset?.address, asset?.owner, params.add, owner]);\n\n  // const renderDesigners = useMemo(\n  //   () =>\n  //     creators?.map((creator: IProfile) => {\n  //       const findBalanceOf = creator.ownedAssets.find(\n  //         (item) => item.assetAddress === params.add.toLowerCase(),\n  //       );\n  //       return (\n  //         <React.Fragment key={creator.address}>\n  //           <ProfileCard\n  //             userProfile={creator}\n  //             balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n  //             type=\"creator\"\n  //             tooltipId=\"designerTooltip\"\n  //           />\n  //           <ReactTooltip\n  //             id=\"designerTooltip\"\n  //             getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n  //           ></ReactTooltip>\n  //         </React.Fragment>\n  //       );\n  //     }),\n  //   [creators, params.add],\n  // );\n\n  // const renderHolderPagination = useMemo(\n  //   () => <HolderPagination holdersAddresses={asset ? asset.holders : []} />,\n  //   [asset],\n  // );\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrappar>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  <StyledMedia\n                    src={asset?.ls8MetaData[currentIndex]?.image}\n                    alt=\"\"\n                  />\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <StyledMintControls>\n                      <StyledMintSkipButton onClick={previousMint}>\n                        <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                      <StyledMintSliderIndex>\n                        {currentIndex + 1}/{ownedTokenIds?.length}\n                      </StyledMintSliderIndex>\n                      <StyledMintSkipButton onClick={nextMint}>\n                        <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                    </StyledMintControls>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    <StyledCardPriceValueWrapper>\n                      <StyledTokenIcon src={WethIcon} alt=\"\" />\n                      <StyledCardPriceValue>-</StyledCardPriceValue>\n                    </StyledCardPriceValueWrapper>\n                    <StyledActionsButtonWrapper>\n                      <StyledBuyButton>Buy now</StyledBuyButton>\n                      <StyledMakeOfferButton>Make offer</StyledMakeOfferButton>\n                    </StyledActionsButtonWrapper>\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion title=\"Card Info\" enableToggle>\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              <StyledCardPropertiesAccordion title=\"Details\" enableToggle>\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion title=\"Market\" enableToggle>\n                <p>Market in progress...</p>\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion title=\"Other Holders\" enableToggle>\n                {/* {renderHolderPagination} */}\n              </StyledHoldersAccordion>\n              {/* <StyledGrid>\n                <StyledAssetDetailGrid>\n                  <StyledMediaWrappar>\n                    {params.network === 'l14' && (\n                      <a\n                        href={\n                          'https://universalprofile.cloud/asset/' +\n                          asset?.address\n                        }\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <StyledUniversalProfileIcon\n                          src={UniversalProfileIcon}\n                          alt=\"\"\n                        />\n                      </a>\n                    )}\n                    <a\n                      href={explorer && explorer.exploreUrl + asset?.address}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <StyledBlockScoutIcon src={explorer?.icon} alt=\"\" />\n                    </a>\n                    <StyledStatsName>{metaCardInfo[0].data}</StyledStatsName>\n                    <StyledMetaCardImg src={asset?.ls8MetaData.image} alt=\"\" />\n                  </StyledMediaWrappar>\n                  <StyledDetailsWrappar>\n                    <StyledCardInfoLabel>Card Info</StyledCardInfoLabel>\n                    <StyledInfoGrid>{renderCardProperties}</StyledInfoGrid>\n                    <StyledFullName>{asset?.name}</StyledFullName>\n                  </StyledDetailsWrappar>\n                </StyledAssetDetailGrid>\n                <StyledExtraInfo>\n                  <StyledIssuerLabel>Issuer</StyledIssuerLabel>\n                  <StyledIssuerWrappar>{renderOwner}</StyledIssuerWrappar>\n                  <StyledCreatorLabel>Creator</StyledCreatorLabel>\n                  <StyledCreatorWrappar>{renderDesigners}</StyledCreatorWrappar>\n                </StyledExtraInfo>\n              </StyledGrid>\n              <StyledHolderLabel>Holder</StyledHolderLabel>\n              <StyledHolderWrappar>{renderHolders}</StyledHolderWrappar> */}\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrappar>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}