{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","features/pagination/styles.ts","hooks/useViewPort/useViewPort.ts","components/ModalOverlay/styles.ts","components/ModalOverlay/ModalOverlay.tsx","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/styles.ts","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","hooks/usePaginate/usePaginate.ts","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/AssetDetails.tsx","utility/permissions.ts"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","StyledPaginationWrapper","StyledAssetsHeader","StyledAssetsHeading","h1","StyledAssetsWrapper","md","lg","xl","StyledPaginationControls","StyledNextButton","button","StyledPreviousButton","StyledNextIcon","StyledPrevIcon","StyledPageNumButton","active","useViewPort","useState","window","innerWidth","screenWidth","setScreenWidth","useEffect","handleSize","addEventListener","removeEventListener","StyledModalOverlay","StyledModal","StyledCloseModalButton","StyledCloseButtonIcon","ModalOverlay","children","onClose","modalRef","useRef","useOutsideClick","ref","onClick","CloseIcon","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","mint","price","slice","StyledBuyCardModalContent","StyledModalHeader","StyledInfoText","StyledButtonGroup","StyledBuyButton","StyledCancelButton","BuyCardModal","StyledSellCardModalContent","StyledInputGroup","StyledPriceLabel","StyledPriceInput","input","StyledSetPriceButton","SellCardModal","setAmount","step","onChange","event","Number","currentTarget","value","StyledTabsHeader","StyledTabsLabel","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","map","tab","i","enableToggle","content","StyledHolderPagination","StyledHolderPaginationGridContainer","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","totalItems","currentPage","setCurrentPage","pageCount","Math","ceil","limit","range","from","push","start","end","paginationGroup","usePaginate","allProfiles","selectUserIds","holders","selectAllUsersItems","filter","item","some","STATUS","LOADING","addresses","forEach","includes","fetchAssetHolders","changePage","pageNumber","textContent","renderHolders","holder","findBalanceOf","id","getContent","dataTip","disabled","PrevIcon","NextIcon","StyledDesktopCreatorsAccordionWrapper","$expanded","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","expand","setExpand","AccordionToggleIcon","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","setCurrentUsersPermissionsSet","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeUser","selectUserById","selectCardById","owner","useAccount","account","data","permissionSet","addressToCheck","_currentUsersPermissionsSet","x","undefined","permissions","ownerStatus","status","creators","cardError","cards","error","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","currentIndex","setCurrentIndex","openBuyModal","setOpenBuyModal","openSellModal","setOpenSellModal","ownedTokenIds","IDLE","fetchProfileByAddress","fetchAllMarkets","ls8MetaData","fetchMetaDataForTokenId","tokenId","toString","fetchAssetCreator","clearState","scrollTo","fetchCard","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","label","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","marketsForOwnedTokens","markets","currentMintMarket","urlTokenIdMarket","cardInfo","valueType","totalSupply","renderOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","WethIcon","minimumAmount","toNumber","renderCardProperties","attributes","trait_type","color","image","href","exploreUrl","target","rel","previousIndex","BackwardsIcon","nextIndex","ForwardsIcon","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.d99496bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '212px' : '117px')};\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledPaginationWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledAssetsHeader = styled.div`\n  padding-top: 20px;\n  display: flex;\n  text-transform: capitalize;\n`;\n\nexport const StyledAssetsHeading = styled.h1`\n  font-size: 24px;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin-right: auto;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  padding: 20px 0 20px 0;\n  column-gap: 20px;\n  row-gap: 20px;\n  grid-auto-flow: unset;\n  justify-items: center;\n\n  @media ${({ theme }) => theme.screen.md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const StyledPaginationControls = styled.div`\n  display: flex;\n  column-gap: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n`;\n\nexport const StyledNextButton = styled.button`\n  padding: 0 8px 0 8px;\n`;\n\nexport const StyledPreviousButton = styled(StyledNextButton)``;\n\nexport const StyledNextIcon = styled.img``;\n\nexport const StyledPrevIcon = styled.img``;\n\nexport const StyledPageNumButton = styled.button<{ active?: boolean }>`\n  padding: 2px 8px 2px 8px;\n  background: ${({ active }) => (active ? '#BCBCBC' : '')};\n  border-radius: 3px;\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useViewPort = () => {\n  const [screenWidth, setScreenWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const handleSize = () => {\n      setScreenWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleSize);\n\n    return () => window.removeEventListener('resize', handleSize);\n  }, []);\n\n  return { screenWidth };\n};\n","import styled from 'styled-components';\n\nexport const StyledModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const StyledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(49, 49, 49, 1);\n  border: 1px solid rgba(170, 170, 170, 1);\n  margin: auto;\n  padding: 1.5em 1em;\n  width: 100%;\n  max-width: 25em;\n`;\n\nexport const StyledCloseModalButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 1em 1em 0 0;\n`;\n\nexport const StyledCloseButtonIcon = styled.img``;\n","import React, { ReactNode, useRef } from 'react';\nimport { CloseIcon } from '../../assets';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport {\n  StyledCloseButtonIcon,\n  StyledCloseModalButton,\n  StyledModal,\n  StyledModalOverlay,\n} from './styles';\n\ninterface IProps {\n  children: ReactNode;\n  onClose: () => void;\n}\n\nexport const ModalOverlay: React.FC<IProps> = ({ children, onClose }) => {\n  const modalRef = useRef(null);\n  useOutsideClick(modalRef, onClose);\n  return (\n    <StyledModalOverlay>\n      <StyledModal ref={modalRef}>\n        <StyledCloseModalButton onClick={onClose}>\n          <StyledCloseButtonIcon src={CloseIcon} alt=\"\" />\n        </StyledCloseModalButton>\n        {children}\n      </StyledModal>\n    </StyledModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import { ModalOverlay } from '../../../components/ModalOverlay';\nimport { ICard } from '../../../services/models';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledCancelButton,\n  StyledInfoText,\n  StyledModalHeader,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price?: number;\n  cardImg: string;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n}: IProps) => {\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledBuyCardModalContent>\n        <StyledModalHeader>BUY CARD</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={price}\n          cardImg={cardImg}\n        />\n        <StyledInfoText>\n          Do you confirm the purchase of this card mint for xxx WETH?\n        </StyledInfoText>\n        <StyledButtonGroup>\n          <StyledBuyButton>Buy</StyledBuyButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledBuyCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import React, { useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useSigner } from 'wagmi';\nimport { NetworkName } from '../../../boot/types';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\n// import { KeyManagerApi } from '../../../services/controllers/KeyManager';\n// import { LSP4DigitalAssetApi } from '../../../services/controllers/LSP4DigitalAsset';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledCancelButton,\n  StyledInputGroup,\n  StyledModalHeader,\n  StyledPriceInput,\n  StyledPriceLabel,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price?: number;\n  cardImg: string;\n}\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n}: IProps) => {\n  //   const params = useParams<IParams>();\n  const [amount, setAmount] = useState<number>(0);\n  //   const [{ data: signer }] = useSigner();\n\n  //   const whiteListedTokenAddress = {\n  //     l14: '',\n  //     mumbai: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa',\n  //     ethereum: '',\n  //     polygon: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n  //   };\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAmount(Number(event.currentTarget.value));\n  };\n\n  //   const setCardForSale = async () => {\n  //     if (profile.isOwnerKeyManager) {\n  //       await KeyManagerApi.setCardMarketViaKeyManager(\n  //         params.add,\n  //         profile.address,\n  //         profile.owner,\n  //         Number(params.id),\n  //         whiteListedTokenAddress[params.network],\n  //         amount,\n  //         signer,\n  //       );\n  //     } else {\n  //       await LSP4DigitalAssetApi.sellCard(\n  //         address,\n  //         Number(mint),\n  //         whiteListedTokenAddress[params.network],\n  //         amount,\n  //         params.network,\n  //       );\n  //     }\n  //   };\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledSellCardModalContent>\n        <StyledModalHeader>SET CARD FOR SALE</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={price}\n          cardImg={cardImg}\n        />\n        <StyledInputGroup>\n          <StyledPriceLabel>Your price</StyledPriceLabel>\n          <StyledPriceInput type=\"number\" step=\"any\" onChange={changeHandler} />\n        </StyledInputGroup>\n\n        <StyledButtonGroup>\n          <StyledSetPriceButton>Set for sale</StyledSetPriceButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledSellCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledHolderPagination = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 20px;\n`;\n\nexport const StyledHolderPaginationGridContainer = styled.div`\n  display: grid;\n  padding: 15px 0;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  row-gap: 20px;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { NextIcon, PrevIcon } from '../../../assets';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport {\n  StyledNextButton,\n  StyledNextIcon,\n  StyledPageNumButton,\n  StyledPaginationControls,\n  StyledPrevIcon,\n  StyledPreviousButton,\n} from '../../../features/pagination/styles';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n  selectUserIds,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePaginate } from '../../../hooks/usePaginate';\nimport { STATUS } from '../../../utility';\nimport {\n  StyledHolderPagination,\n  StyledHolderPaginationGridContainer,\n} from './styles';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const {\n    currentPage,\n    setCurrentPage,\n    pageCount,\n    paginationGroup,\n    start,\n    end,\n  } = usePaginate({ totalItems: holdersAddresses.length });\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses.slice(start, end).some((i) => {\n      return i === item.address;\n    });\n  });\n\n  useMemo(() => {\n    if (holderStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    holdersAddresses.slice(start, end).forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetHolders({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allProfiles, dispatch, end, holdersAddresses, params.network, start]);\n\n  const nextPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === pageCount ? currentPage : currentPage + 1,\n    );\n  };\n\n  const previousPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === 1 ? currentPage : currentPage - 1,\n    );\n  };\n\n  const changePage = (event: React.MouseEvent) => {\n    const pageNumber = Number(event.currentTarget.textContent);\n    setCurrentPage(pageNumber);\n  };\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <StyledHolderPagination>\n      <StyledHolderPaginationGridContainer>\n        {renderHolders}\n      </StyledHolderPaginationGridContainer>\n      {pageCount > 1 && (\n        <StyledPaginationControls>\n          <StyledPreviousButton\n            onClick={previousPage}\n            disabled={currentPage === 1 ? true : false}\n          >\n            <StyledPrevIcon src={PrevIcon} alt=\"\" />\n          </StyledPreviousButton>\n          {currentPage >= 3 && pageCount > 3 && (\n            <>\n              <StyledPageNumButton onClick={changePage}>1</StyledPageNumButton>\n              <p>...</p>\n            </>\n          )}\n          {paginationGroup().map((value) => (\n            <StyledPageNumButton\n              key={value}\n              active={currentPage === value ? true : false}\n              onClick={changePage}\n            >\n              {value}\n            </StyledPageNumButton>\n          ))}\n          {currentPage <= pageCount - 2 && pageCount > 3 && (\n            <>\n              <p>...</p>\n              <StyledPageNumButton onClick={changePage}>\n                {pageCount}\n              </StyledPageNumButton>\n            </>\n          )}\n          <StyledNextButton\n            onClick={nextPage}\n            disabled={currentPage === pageCount ? true : false}\n          >\n            <StyledNextIcon src={NextIcon} alt=\"\" />\n          </StyledNextButton>\n        </StyledPaginationControls>\n      )}\n    </StyledHolderPagination>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { useViewPort } from '../useViewPort';\n\ninterface IProps {\n  totalItems: number;\n}\n\nexport const usePaginate = ({ totalItems }: IProps) => {\n  const { screenWidth } = useViewPort();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const { pageCount, limit } = useMemo(() => {\n    if (screenWidth > 1280) {\n      return {\n        pageCount: Math.ceil(totalItems / 12),\n        limit: 12,\n      };\n    }\n    if (screenWidth > 1024) {\n      return {\n        pageCount: Math.ceil(totalItems / 10),\n        limit: 10,\n      };\n    }\n    if (screenWidth > 768) {\n      return {\n        pageCount: Math.ceil(totalItems / 8),\n        limit: 8,\n      };\n    }\n\n    if (screenWidth > 640) {\n      return {\n        pageCount: Math.ceil(totalItems / 6),\n        limit: 6,\n      };\n    }\n\n    return {\n      pageCount: Math.ceil(totalItems / 4),\n      limit: 4,\n    };\n  }, [screenWidth, totalItems]);\n\n  const range = (from: number, to: number) => {\n    const range: number[] = [];\n    let i = from;\n    while (i <= to) {\n      range.push(i);\n      i++;\n    }\n    return range;\n  };\n\n  const paginationGroup = () => {\n    if (pageCount === 2) {\n      return range(1, 2);\n    }\n    switch (currentPage) {\n      case 1:\n        return range(currentPage, currentPage + 2);\n      case pageCount:\n        return range(currentPage - 2, currentPage);\n      default:\n        return range(currentPage - 1, currentPage + 1);\n    }\n  };\n\n  const start = useMemo(\n    () => currentPage * limit - limit,\n    [currentPage, limit],\n  );\n  const end = useMemo(() => start + limit, [limit, start]);\n\n  return {\n    currentPage,\n    setCurrentPage,\n    pageCount,\n    limit,\n    paginationGroup,\n    start,\n    end,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  WethIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledTokenIcon,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledMakeOfferButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { getChainExplorer, STATUS } from '../../utility';\nimport { BuyCardModal } from './BuyCardModal';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeUser = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  useEffect(() => {\n    if (!owner?.permissionSet || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      owner.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account]);\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [openBuyModal, setOpenBuyModal] = useState<boolean>(false);\n  const [openSellModal, setOpenSellModal] = useState<boolean>(false);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeUser &&\n      activeUser.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeUser, params.add],\n  );\n\n  const dispatch = useAppDispatch();\n\n  // const tokenIdForSale = useMemo(\n  //   async () =>\n  //     params.id &&\n  //     (await LSP4DigitalAssetApi.getTokenSale(\n  //       params.add,\n  //       Number(params.id),\n  //       params.network,\n  //     )),\n  //   [params.add, params.network, params.id],\n  // );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (\n      !asset ||\n      !params.id ||\n      `${params.id}` in asset.ls8MetaData ||\n      metaDataStatus !== STATUS.IDLE\n    )\n      return;\n    dispatch(\n      fetchMetaDataForTokenId({\n        assetAddress: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, dispatch, metaDataStatus, params.add, params.id, params.network]);\n\n  useMemo(() => {\n    if (\n      !params.id &&\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(fetchCard({ address: params.add, network: params.network }));\n  }, [asset, cardStatus, dispatch, params.add, params.network]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(\n    () =>\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      ),\n    [currentIndex, marketsForOwnedTokens, ownedTokenIds],\n  );\n\n  const urlTokenIdMarket = useMemo(\n    () =>\n      asset?.markets.find((item) => Number(item.tokenId) === Number(params.id)),\n    [asset?.markets, params.id],\n  );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: '' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderOwner = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (urlTokenIdMarket && params.id) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledTokenIcon src={WethIcon} alt=\"\" />\n            <StyledCardPriceValue>\n              {urlTokenIdMarket.minimumAmount.toNumber()}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledBuyButton onClick={() => setOpenBuyModal(!openBuyModal)}>\n              Buy now\n            </StyledBuyButton>\n            <StyledMakeOfferButton>Make offer</StyledMakeOfferButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (!currentMintMarket && ownedTokenIds) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledTokenIcon src={WethIcon} alt=\"\" />\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Set price\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (currentMintMarket && ownedTokenIds) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledTokenIcon src={WethIcon} alt=\"\" />\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount.toNumber()}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton>Withdraw from sale</StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentMintMarket,\n    openBuyModal,\n    openSellModal,\n    ownedTokenIds,\n    params.id,\n    urlTokenIdMarket,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              {openBuyModal && asset && (\n                <BuyCardModal\n                  address={params.add}\n                  mint={1234}\n                  price={urlTokenIdMarket?.minimumAmount.toNumber()}\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0].image}\n                  onClose={() => setOpenBuyModal(!openBuyModal)}\n                />\n              )}\n              {openSellModal && asset && (\n                <SellCardModal\n                  address={params.add}\n                  mint={1234}\n                  price={urlTokenIdMarket?.minimumAmount.toNumber()}\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0].image}\n                  onClose={() => setOpenSellModal(!openSellModal)}\n                />\n              )}\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  <StyledMedia\n                    src={asset?.ls8MetaData[currentIndex]?.image}\n                    alt=\"\"\n                  />\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <StyledMintControls>\n                      <StyledMintSkipButton onClick={previousMint}>\n                        <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                      <StyledMintSliderIndex>\n                        {currentIndex + 1}/{ownedTokenIds?.length}\n                      </StyledMintSliderIndex>\n                      <StyledMintSkipButton onClick={nextMint}>\n                        <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                    </StyledMintControls>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Issuer', content: renderOwner },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  issuerContent={renderOwner}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                <p>Market in progress...</p>\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined =>\n  permissionSet.find(\n    (x) => x.address.toLowerCase() === addressToCheck.toLowerCase(),\n  );\n"],"sourceRoot":""}