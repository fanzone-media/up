{"version":3,"sources":["components/InputField/styles.ts","utility/permissions.ts","hooks/useLocalStorage/useLocalStorage.ts","boot/types.ts","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","utility/content/text.ts","utility/file.ts","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/TransferCardModal/TransferCardsModal.tsx","pages/ProfileDetails/WithdrawFundsModal/styles.ts","pages/ProfileDetails/WithdrawFundsModal/WithdrawFundsModal.tsx","hooks/useWithdrawFunds/useWitdrawFunds.ts","pages/ProfileDetails/ProfileDetails.tsx","hooks/useCopyText/useCopyText.ts"],"names":["StyledInputContainer","styled","div","StyledPriceLabel","p","StyledPriceInput","input","align","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","type","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","find","x","address","toLowerCase","permissions","useLocalStorage","KEY_NAME","getItems","values","localStorage","getItem","JSON","parse","setItem","upAddress","prevValue","newValue","stringify","StringBoolean","StyledProfileDetails","StyledProfileDetailsContent","StyledProfileNotFound","h1","StyledProfileCoverImg","img","StyledProfileInfoWrapper","StyledProfileInfo1","StyledProfileInfo1Content","theme","screen","md","StyledProfileMediaWrapper","StyledProfileMedia","StyledProfileAddress","font","weight","light","StyledProfileNameBioWrapper","lg","StyledProfileName","h2","bolder","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledShareProfileWrapper","StyledShareIcon","StyledDropDownIcon","StyledAssetsWrapper","a","expand","button","StyledLinkIconWrapper","StyledLinkIcon","StyledOpenTransferModalButton","StyledOpenEditProfileModal","StyledWitdrawFundsButton","StyledShareProfileButton","isShare","StyledShareDropDown","animation","cardrender","ShareLink","target","StyledProfileImageWrapper","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","pulseAnimate","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","params","useParams","explorer","getChainExplorer","network","src","href","exploreUrl","rel","icon","UniversalProfileIcon","sanitizeLink","url","replace","createImageFile","fetch","response","blob","data","metadata","File","socialLinks","ProfileEditModal","onDismiss","profile","linkFinder","useCallback","title","link","links","item","useSigner","signer","useState","error","setError","loading","setLoading","profileImage","backgroundImage","name","bio","description","facebook","twitter","instagram","editProfileForm","setEditProfileForm","useEffect","changeHandler","event","currentTarget","value","imageChangeHandler","files","fields","label","baseUrl","useMemo","width","height","hashFunction","length","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","catch","finally","setUniversalProfileData","getImageUrl","includes","color","map","i","onChange","alt","accept","onClick","TransferCardsModal","toAddress","cardAddress","tokenId","transferCardForm","setTransferCardForm","useTransferLsp8Token","transferCard","transfering","key","htmlFor","id","defaultValue","ownedAssets","assetAddress","ownedAsset","tokenIds","topMargin","StyledWithdrawModalContent","StyledSelectWithdrawToken","select","StyledWithdrawFundsButton","WithdrawFundsModal","whiteListedTokensInfo","setWhiteListedTokensInfo","balances","setBalances","useAccount","account","selectedTokenInput","setSelectedTokenInput","whiteListedtokensAddresses","getWhiteListedTokenAddresses","provider","useRpcProvider","balanceOf","tokenAddresses","profieAddress","Promise","all","tokenContract","ERC20__factory","connect","balance","withdrawFunds","tokenAddress","amount","KeyManagerApi","transferBalanceViaKeyManager","transferBalanceViaUniversalProfile","useWitdrawFunds","fetchWhiteListedTokenInfo","LSP4DigitalAssetApi","fetchErc20TokenInfo","res","toString","decimals","selectedTokenBalance","selectedTokenDecimals","then","symbol","displayPrice","ProfileDetails","dispatch","useAppDispatch","pathname","useLocation","useSelector","state","selectUserById","userData","add","profileError","profileStatus","status","setIsShare","copied","setCopied","copyText","text","window","navigator","clipboard","writeText","setTimeout","canCopy","useCopyText","isTablet","useMediaQuery","permissionsSet","call","TRUE","canTransfer","canSetData","currentProfile","fetchProfileByAddress","usePagination","issuedAssetsRange","range","setIssuedAssetsRange","setRange","ownedAssetsRange","setOwnedAssetsRange","issuedCards","selectAllCardItems","filter","issuedAssets","slice","some","issuedCardStatus","cards","issuedStatus","fetchIssuedCards","addresses","ownedCardStatus","ownedStatus","ownedCards","fetchOwnedCards","asset","renderLinks","linkTitle","Twitter","Instagram","Facebook","Globe","shareButtonRef","useRef","useOutsideClick","shareButtonHandler","share","location","origin","console","log","scrollTo","useModal","onDismissTransferCardsModal","onPresentTransferCardsModal","handlePresent","onDismissProfileEditModal","onPresentProfileEditModal","onDismissWithdrawFundsModal","onPresentWithdrawFundsModal","makeBlockie","ref","ShareIcon","size","DropDownIcon","as","Link","components","digitalCard","MetaCard","nbrOfAllComponents","setComponentsRange"],"mappings":"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","file":"static/js/6.df2b7523.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import { IPermissionSet } from '../../services/models';\nimport { Address } from '../../utils/types';\n\ntype Item = {\n  [key: string]: IPermissionSet[];\n};\n\nexport const useLocalStorage = () => {\n  const KEY_NAME = 'fanzone.universalProfiles';\n\n  const setItem = (upAddress: Address, permissionSet: IPermissionSet[]) => {\n    const prevValue = getItems();\n    const newValue = {\n      ...prevValue,\n      [`${upAddress.toLowerCase()}`]: permissionSet,\n    };\n    localStorage.setItem(KEY_NAME, JSON.stringify(newValue));\n  };\n\n  const getItems = () => {\n    const values = localStorage.getItem(KEY_NAME);\n    if (!values) return;\n    return JSON.parse(values) as Item;\n  };\n\n  return { setItem, getItems };\n};\n","import { ICardState } from '../features/cards/types';\nimport { IUserDataSliceState } from '../features/profiles/types';\nimport { API } from '../services/api';\n\nexport type ThunkExtra = {\n  api: API;\n};\n\nexport type RootState = {\n  userData: IUserDataSliceState;\n  cards: ICardState;\n};\n\nexport type NetworkName = 'l14' | 'mumbai' | 'polygon' | 'ethereum';\n\nexport type AsyncReturnType<T extends (...args: any) => Promise<any>> =\n  T extends (...args: any) => Promise<infer R> ? R : any;\n\nexport type UnpackedType<T> = T extends (infer U)[] ? U : T;\n\nexport enum StringBoolean {\n  FALSE = '0',\n  TRUE = '1',\n}\n","import styled from 'styled-components';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 1.875rem;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 15em;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 1.25em 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    --profile-image-size: 11.25em;\n    --outer-columns-width: calc(\n      50% - 2.5em - calc(var(--profile-image-size) / 2)\n    );\n    align-items: center;\n    display: grid;\n    width: 1440px;\n    grid-template-columns:\n      var(--outer-columns-width) var(--profile-image-size)\n      var(--outer-columns-width);\n    grid-column-gap: 2.5em;\n    padding: 1.25em 2.5em;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrapper = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${({ theme }) => theme.screen.md} {\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    left: 50%;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  font-weight: ${({ theme }) => theme.font.weight.light};\n  letter-spacing: 1.5px;\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: min(0.875rem, 3.5vw);\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(100% - 12.85em);\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const StyledProfileNameBioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 0.25em;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 1.0625rem;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin: auto 0 auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    font-size: 1.125rem;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileBioWrapper = styled.div`\n  margin: auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(50% - 5.625em);\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin-right: 2.5em;\n  column-gap: 1.5em;\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${({ theme }) => theme.screen.md} {\n    max-width: 1440px;\n    padding: 0 2.5em;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 1.25em 0 1.25em 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  row-gap: 1.35em;\n  margin-top: 1.35em;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    margin-left: auto;\n    margin-top: 0;\n  }\n`;\n\nexport const StyledShareProfileWrapper = styled.div`\n  position: relative;\n  overflow: visible;\n  width: max-content;\n`;\n\nexport const StyledShareIcon = styled.img`\n  height: 0.875em;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  display: inline-block;\n  margin-left: 0.5em;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0 2.5em;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIconWrapper = styled.a`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledOpenEditProfileModal = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledWitdrawFundsButton = styled(StyledOpenEditProfileModal)``;\n\nexport const StyledShareProfileButton = styled.button<{ isShare: boolean }>`\n  align-items: center;\n  column-gap: 1.25em;\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  padding: 0.5em 0.75em;\n  font-size: 0.9375rem;\n  overflow: hidden;\n  margin: auto 0;\n  display: flex;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0;\n    right: 0;\n    border-bottom-color: rgba(255, 255, 255, 0.15);\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n\n  ${({ isShare }) =>\n    isShare &&\n    `\n    border-bottom-color: transparent;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n`;\n\nexport const StyledShareDropDown = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 100%;\n  background-color: rgba(59, 59, 59, 1);\n  border-width: 0px 1px 1px;\n  border-color: rgba(255, 255, 255, 0.15);\n  border-style: solid;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 10;\n  animation: ${({ theme }) => theme.animation.cardrender} 0.2s linear;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-top-width: 1px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    top: calc(100% + 0.5em);\n    width: max-content;\n  }\n`;\n\nexport const ShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  align-items: center;\n  display: flex;\n  column-gap: 1.25em;\n  padding: 0.5em 0.75em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: max-content;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\n\nexport const StyledProfileImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n`;\n\nexport const StyledProfileImg = styled.img`\n  border-radius: 50%;\n  height: calc(100% - 1em);\n  inset: 0;\n  margin: auto;\n  position: absolute;\n  width: calc(100% - 1em);\n`;\n\nexport const StyledBlockieImg = styled.img`\n  align-items: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  z-index: 10;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  height: calc(100% - 1em);\n  inset: 0;\n  position: absolute;\n  width: auto;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrapper,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const explorer = getChainExplorer(params.network);\n  return (\n    <StyledProfileImageWrapper>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {params.network === 'l14' && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrapper>\n  );\n};\n","export const sanitizeLink = (url: string) => {\n  return url.replace(/^.*\\/\\/[^/]+\\//, '');\n};\n","export const createImageFile = async (url: string) => {\n  let response = await fetch(url);\n  let data = await response.blob();\n  let metadata = {\n    type: 'image/jpeg',\n  };\n\n  return new File([data], response.url, metadata);\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { Modal } from '../../../components';\nimport {\n  FileInput,\n  HiddenFileInput,\n  HiddenFileInputWrapper,\n} from '../../../components/InputField/styles';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { sanitizeLink } from '../../../utility/content/text';\nimport { createImageFile } from '../../../utility/file';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  FileEditWrapper,\n  MetaLabel,\n  MetaLabeledInput,\n  PreviewImage,\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n} from './styles';\n\ninterface IProps {\n  onDismiss: () => void;\n  profile: IProfile;\n}\n\ntype formInput = {\n  profileImage: File | null;\n  backgroundImage: File | null;\n  name: string;\n  bio: string;\n  facebook: string;\n  twitter: string;\n  instagram: string;\n};\n\ntype SocialLink = 'facebook' | 'twitter' | 'instagram';\n\nconst socialLinks = {\n  twitter: 'https://twitter.com/',\n  facebook: 'https://facebook.com/',\n  instagram: 'https://instagram.com/',\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  onDismiss,\n  profile,\n}: IProps) => {\n  const linkFinder = useCallback(\n    (title: SocialLink) => {\n      const link = profile.links.find(\n        (item) => item.title.toLowerCase() === title,\n      );\n      return link ? link.url : '';\n    },\n    [profile.links],\n  );\n\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profileImage: null,\n    backgroundImage: null,\n    name: profile.name,\n    bio: profile.description,\n    facebook: linkFinder('facebook'),\n    twitter: linkFinder('twitter'),\n    instagram: linkFinder('instagram'),\n  });\n\n  useEffect(() => {\n    (async () => {\n      setEditProfileForm({\n        ...editProfileForm,\n        profileImage: await createImageFile(profile.profileImage),\n        backgroundImage: await createImageFile(profile.backgroundImage),\n      });\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile.profileImage, profile.backgroundImage]);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      setEditProfileForm({\n        ...editProfileForm,\n        [event.currentTarget.name]: event.currentTarget.files[0],\n      });\n    }\n  };\n\n  const fields = [\n    { name: 'backgroundImage', label: 'Background Image', type: 'file' },\n    { name: 'profileImage', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    {\n      name: 'twitter',\n      label: 'Twitter',\n      type: 'text',\n      baseUrl: socialLinks.twitter,\n    },\n    {\n      name: 'facebook',\n      label: 'Facebook',\n      type: 'text',\n      baseUrl: socialLinks.facebook,\n    },\n    {\n      name: 'instagram',\n      label: 'Instagram',\n      type: 'text',\n      baseUrl: socialLinks.instagram,\n    },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name: editProfileForm.name,\n      description: editProfileForm.bio,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.backgroundImage !== null\n              ? editProfileForm.backgroundImage\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.profileImage !== null\n              ? editProfileForm.profileImage\n              : profile.profileImage,\n        },\n      ],\n      links: [\n        {\n          title: 'facebook',\n          url:\n            editProfileForm.facebook.length > 0\n              ? `https://facebook.com/${editProfileForm.facebook}`\n              : linkFinder('facebook'),\n        },\n        {\n          title: 'twitter',\n          url:\n            editProfileForm.twitter.length > 0\n              ? `https://twitter.com/${editProfileForm.twitter}`\n              : linkFinder('twitter'),\n        },\n        {\n          title: 'instagram',\n          url:\n            editProfileForm.instagram.length > 0\n              ? `https://instagram.com/${editProfileForm.instagram}`\n              : linkFinder('instagram'),\n        },\n      ],\n    }),\n    [\n      editProfileForm.backgroundImage,\n      editProfileForm.bio,\n      editProfileForm.facebook,\n      editProfileForm.instagram,\n      editProfileForm.name,\n      editProfileForm.profileImage,\n      editProfileForm.twitter,\n      linkFinder,\n      profile.backgroundImage,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n    if (profile.isOwnerKeyManager) {\n      signer &&\n        (await LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n          profile.owner,\n          profile.address,\n          data,\n          signer,\n        )\n          .catch((error) => {\n            setError(true);\n            // onDismiss();\n          })\n          .finally(() => {\n            setLoading(false);\n          }));\n    } else {\n      signer &&\n        (await LSP3ProfileApi.setUniversalProfileData(\n          profile.address,\n          data,\n          signer,\n        )\n          .catch((error) => {\n            setError(true);\n            // onDismiss();\n          })\n          .finally(() => {\n            setLoading(false);\n          }));\n    }\n  };\n\n  const getImageUrl = useCallback(\n    (url: string) =>\n      url.includes('ipfs.infura-ipfs.io')\n        ? url\n        : `https://ipfs.infura.io/${sanitizeLink(url)}`,\n    [],\n  );\n\n  return (\n    <Modal>\n      {!loading && !error ? (\n        <StyledEditProfileModalContent>\n          {fields.map((item, i) => (\n            <StyledInputRow key={i}>\n              <StyledLabel>{item.label}</StyledLabel>\n              {item.type === 'textarea' && (\n                <StyledTextAreaInput\n                  name={item.name}\n                  onChange={changeHandler}\n                  value={\n                    editProfileForm[item.name as keyof formInput] as string\n                  }\n                />\n              )}\n              {item.type === 'text' && (\n                <MetaLabeledInput>\n                  {item.baseUrl && <MetaLabel>{item.baseUrl}</MetaLabel>}\n                  <StyledInput\n                    name={item.name}\n                    type={item.type}\n                    onChange={changeHandler}\n                    value={sanitizeLink(\n                      editProfileForm[item.name as keyof formInput] as string,\n                    )}\n                  />\n                </MetaLabeledInput>\n              )}\n              {item.type === 'file' && (\n                <FileEditWrapper>\n                  {(editProfileForm[item.name as keyof formInput] as File) && (\n                    <PreviewImage\n                      alt={profile.name}\n                      src={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                    />\n                  )}\n                  <HiddenFileInputWrapper>\n                    <FileInput\n                      title={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                      fileName={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                    />\n                    <HiddenFileInput\n                      title={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                      name={item.name}\n                      onChange={imageChangeHandler}\n                      accept=\".jpg, .png\"\n                    />\n                  </HiddenFileInputWrapper>\n                </FileEditWrapper>\n              )}\n            </StyledInputRow>\n          ))}\n          <br />\n          <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n        </StyledEditProfileModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait ....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport { Modal } from '../../../components';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n} from '../ProfileEditModal/styles';\nimport { StyledSelectInput, StyledTransferCardModalContent } from './styles';\nimport { Address } from '../../../utils/types';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IOwnedAssets } from '../../../services/models';\n\ninterface IProps {\n  profile: {\n    address: Address;\n    owner: Address;\n    isOwnerKeyManager: boolean;\n    ownedAssets: IOwnedAssets[];\n  };\n  onDismiss: () => void;\n}\n\ntype formInput = {\n  toAddress: string;\n  cardAddress: string;\n  tokenId: number | null;\n};\n\nexport const TransferCardsModal: React.FC<IProps> = ({\n  profile,\n  onDismiss,\n}: IProps) => {\n  const [transferCardForm, setTransferCardForm] = useState<formInput>({\n    toAddress: '',\n    cardAddress: '',\n    tokenId: null,\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (\n      event.currentTarget.name === 'cardAddress' &&\n      event.currentTarget.value !== transferCardForm.cardAddress\n    ) {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n        tokenId: null,\n      });\n    } else {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n      });\n    }\n  };\n\n  const { transferCard, transfering, error } = useTransferLsp8Token(\n    transferCardForm.cardAddress,\n    transferCardForm.toAddress,\n    transferCardForm.tokenId,\n    profile,\n    onDismiss,\n  );\n\n  const fields = [\n    { name: 'toAddress', label: 'To', type: 'text' },\n    { name: 'cardAddress', label: 'Card Name', type: 'select' },\n    { name: 'tokenId', label: 'Token Id', type: 'select' },\n  ];\n\n  return (\n    <Modal>\n      {!transfering && !error ? (\n        <StyledTransferCardModalContent>\n          {fields.map((item, key) => (\n            <StyledInputRow key={key}>\n              <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n              {item.type === 'text' && (\n                <StyledInput\n                  id={item.name}\n                  name={item.name}\n                  type={item.type}\n                  onChange={changeHandler}\n                />\n              )}\n              {item.type === 'select' && item.name === 'cardAddress' && (\n                <StyledSelectInput\n                  name={item.name}\n                  onChange={changeHandler}\n                  defaultValue={profile.ownedAssets[0].assetAddress}\n                >\n                  <option>Token address</option>\n                  {profile.ownedAssets.map((ownedAsset, key) => (\n                    <option\n                      key={key}\n                      value={ownedAsset.assetAddress}\n                      defaultValue={ownedAsset.assetAddress}\n                    >\n                      {ownedAsset.assetAddress}\n                    </option>\n                  ))}\n                </StyledSelectInput>\n              )}\n              {item.type === 'select' && item.name === 'tokenId' && (\n                <StyledSelectInput name={item.name} onChange={changeHandler}>\n                  <option>Select token id</option>\n                  {profile.ownedAssets\n                    .find(\n                      (ownedAsset) =>\n                        ownedAsset.assetAddress ===\n                        transferCardForm.cardAddress,\n                    )\n                    ?.tokenIds.map((tokenId, key) => (\n                      <option key={key} value={tokenId}>\n                        {tokenId}\n                      </option>\n                    ))}\n                </StyledSelectInput>\n              )}\n            </StyledInputRow>\n          ))}\n          <StyledModalButtonsWrapper topMargin>\n            <StyledModalButton onClick={transferCard}>\n              Transfer Card\n            </StyledModalButton>\n          </StyledModalButtonsWrapper>\n        </StyledTransferCardModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait for transaction\n                success....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledWithdrawModalContent = styled.div``;\n\nexport const StyledSelectWithdrawToken = styled.select`\n  background: transparent;\n  color: white;\n  width: 100%;\n  border-radius: 0.2em;\n  border: 0.1em solid white;\n  padding: 0.5em 0;\n`;\n\nexport const StyledWithdrawFundsButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n","import { BigNumber } from 'ethers';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { NetworkName } from '../../../boot/types';\nimport { useRpcProvider } from '../../../hooks/useRpcProvider';\nimport { useWitdrawFunds } from '../../../hooks/useWithdrawFunds';\nimport { LSP4DigitalAssetApi } from '../../../services/controllers/LSP4DigitalAsset';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport { Address } from '../../../utils/types';\nimport {\n  StyledSelectWithdrawToken,\n  StyledWithdrawFundsButton,\n  StyledWithdrawModalContent,\n} from './styles';\n\ninterface IProps {\n  profile: IProfile;\n  network: NetworkName;\n  onDismiss: () => void;\n}\n\nexport const WithdrawFundsModal = ({ profile, network, onDismiss }: IProps) => {\n  const [whiteListedTokensInfo, setWhiteListedTokensInfo] = useState<\n    IWhiteListedTokens[]\n  >([]);\n  const [balances, setBalances] = useState<\n    Array<{ balance: BigNumber; address: string }>\n  >([]);\n  const [{ data: account }] = useAccount();\n  const [selectedTokenInput, setSelectedTokenInput] = useState<Address>('');\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const provider = useRpcProvider(network);\n  const { balanceOf, withdrawFunds } = useWitdrawFunds(network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSelectedTokenInput(event.currentTarget.value);\n  };\n\n  const fetchWhiteListedTokenInfo = useCallback(async () => {\n    const res = await Promise.all(\n      whiteListedtokensAddresses.map(\n        async (address) =>\n          await LSP4DigitalAssetApi.fetchErc20TokenInfo(address, provider),\n      ),\n    );\n    setWhiteListedTokensInfo(res);\n  }, [provider, whiteListedtokensAddresses]);\n\n  const [selectedTokenBalance, selectedTokenDecimals] = useMemo(() => {\n    const balance = balances\n      .find(\n        (item) =>\n          item.address.toLowerCase() === selectedTokenInput.toLowerCase(),\n      )\n      ?.balance.toString();\n    const decimals = whiteListedTokensInfo.find(\n      (item) =>\n        item.tokenAddress.toLowerCase() === selectedTokenInput.toLowerCase(),\n    )?.decimals;\n    return [balance, decimals];\n  }, [balances, selectedTokenInput, whiteListedTokensInfo]);\n\n  useEffect(() => {\n    fetchWhiteListedTokenInfo();\n    balanceOf(whiteListedtokensAddresses, profile.address).then((res) => {\n      setBalances(res);\n    });\n  }, []);\n\n  return (\n    <StyledWithdrawModalContent>\n      <p>select token to withdraw: </p>\n      <StyledSelectWithdrawToken onChange={changeHandler}>\n        <option>Select token</option>\n        {whiteListedTokensInfo.map((item) => (\n          <option value={item.tokenAddress}>{item.symbol}</option>\n        ))}\n      </StyledSelectWithdrawToken>\n      <p>\n        Your Balance:{' '}\n        {displayPrice(\n          selectedTokenBalance ? selectedTokenBalance : 0,\n          selectedTokenDecimals ? selectedTokenDecimals : 0,\n        )}\n      </p>\n      <StyledWithdrawFundsButton\n        onClick={async () =>\n          account &&\n          (await withdrawFunds(\n            profile,\n            selectedTokenInput,\n            account.address,\n            selectedTokenBalance ? selectedTokenBalance : 0,\n          ))\n        }\n      >\n        withdraw to metamask\n      </StyledWithdrawFundsButton>\n    </StyledWithdrawModalContent>\n  );\n};\n","import { BigNumber, BigNumberish } from 'ethers';\nimport { useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IProfile } from '../../services/models';\nimport { LSP3AccountABI } from '../../services/utilities/ABIs/LSP3AccountABI';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { Address } from '../../utils/types';\nimport { useRpcProvider } from '../useRpcProvider';\n\nexport const useWitdrawFunds = (network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const provider = useRpcProvider(network);\n\n  const balanceOf = async (\n    tokenAddresses: Address[],\n    profieAddress: Address,\n  ) => {\n    const balances = await Promise.all(\n      tokenAddresses.map(async (address) => {\n        const tokenContract = ERC20__factory.connect(address, provider);\n        const balance = await tokenContract.balanceOf(profieAddress);\n        return {\n          address,\n          balance,\n        };\n      }),\n    );\n    return balances;\n  };\n\n  const withdrawFunds = async (\n    profile: IProfile,\n    tokenAddress: Address,\n    toAddress: Address,\n    amount: BigNumberish,\n  ) => {\n    if (profile.isOwnerKeyManager) {\n      signer &&\n        (await KeyManagerApi.transferBalanceViaKeyManager(\n          tokenAddress,\n          profile.owner,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        ));\n    } else {\n      signer &&\n        LSP3ProfileApi.transferBalanceViaUniversalProfile(\n          tokenAddress,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        );\n    }\n  };\n\n  return {\n    balanceOf,\n    withdrawFunds,\n  };\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState, StringBoolean } from '../../boot/types';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { HideOnScreen, Pagination } from '../../components';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrapper,\n  StyledDropDownIcon,\n  StyledLinkIconWrapper,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrapper,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrapper,\n  StyledProfileName,\n  StyledProfileNameBioWrapper,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHolder,\n  StyledShareProfileButton,\n  StyledShareDropDown,\n  ShareLink,\n  StyledShareProfileWrapper,\n  StyledOpenEditProfileModal,\n  StyledWitdrawFundsButton,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  Link,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n  currentProfile,\n  fetchProfileByAddress,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport {\n  fetchIssuedCards,\n  fetchOwnedCards,\n  selectAllCardItems,\n} from '../../features/cards';\nimport { ICard, IProfile } from '../../services/models';\nimport { MetaCard } from '../../features/cards/MetaCard';\nimport { StyledProfileHeading, StyledProfilesHeader } from '../Profiles/styles';\nimport { TransferCardsModal } from './TransferCardModal/TransferCardsModal';\nimport { useModal } from '../../hooks/useModal';\nimport { usePagination } from '../../hooks/usePagination';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { WithdrawFundsModal } from './WithdrawFundsModal';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst ProfileDetails: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  const [{ data: account }] = useAccount();\n  const [{ data: signer }] = useSigner();\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[params.network], params.add),\n  );\n\n  const profileError = useSelector(\n    (state: RootState) => state.userData[params.network].error,\n  );\n\n  const profileStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const [isShare, setIsShare] = useState<boolean>(false);\n\n  const { copied, copyText, canCopy } = useCopyText();\n  const { setItem, getItems } = useLocalStorage();\n\n  const isTablet = useMediaQuery(theme.screen.md);\n\n  const [canTransfer, canSetData] = useMemo(() => {\n    if (!profile || !account) return [false, false];\n    const permissionsSet = getAddressPermissionsOnUniversalProfile(\n      profile.permissionSet,\n      account.address,\n    );\n    return [\n      permissionsSet?.permissions.call === StringBoolean.TRUE,\n      permissionsSet?.permissions.setData === StringBoolean.TRUE,\n    ];\n  }, [account, profile]);\n\n  useMemo(() => {\n    if (!account || !profile || !canTransfer || !canSetData) return;\n    setItem(params.add, profile.permissionSet);\n  }, [account, canSetData, canTransfer, params.add, profile, setItem]);\n\n  useEffect(() => {\n    dispatch(currentProfile(params.add));\n    if (!profile)\n      dispatch(\n        fetchProfileByAddress({ address: params.add, network: params.network }),\n      );\n  }, [dispatch, params.add, params.network, profile]);\n\n  const { range: issuedAssetsRange, setRange: setIssuedAssetsRange } =\n    usePagination();\n  const { range: ownedAssetsRange, setRange: setOwnedAssetsRange } =\n    usePagination();\n\n  const issuedCards = useSelector(selectAllCardItems).filter((item) =>\n    profile?.issuedAssets\n      .slice(issuedAssetsRange[0], issuedAssetsRange[1] + 1)\n      .some((i) => i === item.address),\n  );\n\n  const issuedCardStatus = useSelector(\n    (state: RootState) => state.cards.issuedStatus,\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.issuedAssets.length === 0) return;\n    dispatch(\n      fetchIssuedCards({\n        addresses: profile.issuedAssets.slice(\n          issuedAssetsRange[0],\n          issuedAssetsRange[1] + 1,\n        ),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, issuedAssetsRange]);\n\n  const ownedCardStatus = useSelector(\n    (state: RootState) => state.cards.ownedStatus,\n  );\n\n  const ownedCards = useSelector(selectAllCardItems).filter((item) =>\n    profile?.ownedAssets\n      .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1)\n      .some((i) => i.assetAddress === item.address),\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.ownedAssets.length === 0) return;\n    dispatch(\n      fetchOwnedCards({\n        addresses: profile.ownedAssets\n          .map((asset) => asset.assetAddress)\n          .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, ownedAssetsRange]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link, i) => {\n        const linkTitle = link.title.toLowerCase();\n        return (\n          <StyledProfileLinks key={i}>\n            <StyledLinkIconWrapper\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <StyledLinkIcon\n                src={\n                  linkTitle === 'twitter'\n                    ? Twitter\n                    : linkTitle === 'instagram'\n                    ? Instagram\n                    : linkTitle === 'facebook'\n                    ? Facebook\n                    : Globe\n                }\n              />\n            </StyledLinkIconWrapper>\n          </StyledProfileLinks>\n        );\n      }),\n    [profile?.links],\n  );\n\n  const shareButtonRef = useRef(null);\n  useOutsideClick(shareButtonRef, () => isShare && setIsShare(false));\n\n  const shareButtonHandler = useCallback(async () => {\n    try {\n      await navigator.share({\n        title: `Fanzone.io Universal Profile – ${profile && profile.address}`,\n        text: `This is Fanzone.io's Universal Profile page for ${\n          profile && profile.address\n        }`,\n        url: `${window.location.origin}/#${pathname}`,\n      });\n      console.log('shared successfully');\n    } catch (err) {\n      setIsShare((isShare) => !isShare);\n      console.error('Error: ' + err);\n    }\n  }, [pathname, profile]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.add, profile]);\n\n  const {\n    handlePresent: onPresentTransferCardsModal,\n    onDismiss: onDismissTransferCardsModal,\n  } = useModal(\n    <TransferCardsModal\n      profile={{\n        address: profile?.address ? profile.address : '',\n        owner: profile?.owner ? profile.owner : '',\n        isOwnerKeyManager: profile?.isOwnerKeyManager\n          ? profile.isOwnerKeyManager\n          : false,\n        ownedAssets: profile?.ownedAssets ? profile.ownedAssets : [],\n      }}\n      onDismiss={() => onDismissTransferCardsModal()}\n    />,\n    'Cards Transfer Modal',\n    'Transfer Card',\n  );\n\n  const {\n    handlePresent: onPresentProfileEditModal,\n    onDismiss: onDismissProfileEditModal,\n  } = useModal(\n    <ProfileEditModal\n      profile={profile ? profile : ({} as IProfile)}\n      onDismiss={() => onDismissProfileEditModal()}\n    />,\n    'Profile Edit Modal',\n    'Profile Edit',\n  );\n\n  const {\n    handlePresent: onPresentWithdrawFundsModal,\n    onDismiss: onDismissWithdrawFundsModal,\n  } = useModal(\n    profile && (\n      <WithdrawFundsModal\n        profile={profile}\n        network={params.network}\n        onDismiss={() => onDismissWithdrawFundsModal()}\n      />\n    ),\n    'Withdraw Funds Modal',\n    'Withdraw Funds',\n  );\n\n  return (\n    <StyledProfileDetails>\n      {profileStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {profileError ? (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          ) : (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrapper>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrapper>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : params.add,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrapper>\n                    <StyledProfileNameBioWrapper>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledShareProfileHolder>\n                        {renderLinks}\n                        <StyledShareProfileWrapper ref={shareButtonRef}>\n                          <StyledShareProfileButton\n                            onClick={shareButtonHandler}\n                            isShare={isShare}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            <HideOnScreen size=\"lg\">\n                              Share profile{' '}\n                              {!navigator['share'] && (\n                                <StyledDropDownIcon src={DropDownIcon} />\n                              )}\n                            </HideOnScreen>\n                          </StyledShareProfileButton>\n                          {isShare && (\n                            <StyledShareDropDown>\n                              <ShareLink\n                                href={`https://twitter.com/intent/tweet?url=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Twitter} alt=\"Twitter\" />\n                                Twitter\n                              </ShareLink>\n                              {/* <ShareLink>\n                                <img src={Instagram} alt=\"Instagram\" />\n                                Instagram\n                              </ShareLink> */}\n                              <ShareLink\n                                href={`https://www.facebook.com/sharer.php?u=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Facebook} alt=\"Facebook\" />\n                                Facebook\n                              </ShareLink>\n                              {canCopy && (\n                                <ShareLink\n                                  as=\"button\"\n                                  onClick={() =>\n                                    copyText(\n                                      `${window.location.origin}/#${pathname}`,\n                                    )\n                                  }\n                                >\n                                  <img src={Link} alt=\"Copy Link\" />\n                                  {copied ? 'Copied!' : 'Copy Link'}\n                                </ShareLink>\n                              )}\n                            </StyledShareDropDown>\n                          )}\n                        </StyledShareProfileWrapper>\n                      </StyledShareProfileHolder>\n                    </StyledProfileNameBioWrapper>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{params.add}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrapper>\n              {profile &&\n                account &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton\n                    onClick={onPresentTransferCardsModal}\n                  >\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n              {signer &&\n                profile &&\n                account &&\n                (canSetData ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenEditProfileModal\n                    onClick={onPresentProfileEditModal}\n                  >\n                    Edit Profile\n                  </StyledOpenEditProfileModal>\n                )}\n              <StyledWitdrawFundsButton onClick={onPresentWithdrawFundsModal}>\n                Withdraw Funds\n              </StyledWitdrawFundsButton>\n              <StyledAssetsWrapper>\n                {profile && profile.issuedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Issued Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={issuedCardStatus}\n                      components={issuedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.issuedAssets.length}\n                      setComponentsRange={setIssuedAssetsRange}\n                    />\n                  </>\n                )}\n                {/* @TODO: Change names of components StyledProfilesHeader and StyledProfileHeading */}\n                {profile && profile.ownedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Owned Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={ownedCardStatus}\n                      components={ownedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.ownedAssets.length}\n                      setComponentsRange={setOwnedAssetsRange}\n                    />\n                  </>\n                )}\n              </StyledAssetsWrapper>\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<boolean>(false);\n\n  const copyText = (text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied((copied) => !copied);\n    setTimeout(() => {\n      setCopied((copied) => !copied);\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n"],"sourceRoot":""}