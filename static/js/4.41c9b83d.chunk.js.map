{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","features/pagination/styles.ts","hooks/useViewPort/useViewPort.ts","pages/AssetDetails/HoldersPagination/styles.ts","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledProfileCard","styled","Link","demo","sm","StyledProfileDetailWrappar","div","StyledBalanceWrappar","StyledBalance","p","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","className","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","StyledPaginationWrappar","StyledAssetsHeader","StyledAssetsHeading","h1","StyledAssetsWrappar","md","lg","xl","StyledPaginationControls","StyledNextButton","button","StyledPreviousButton","StyledNextIcon","StyledPrevIcon","StyledPageNumButton","active","useViewPort","useState","window","innerWidth","screenWidth","setScreenWidth","useEffect","handleSize","addEventListener","removeEventListener","StyledHolderPagination","StyledHolderPaginationGridContainer","HolderPagination","holdersAddresses","dispatch","useAppDispatch","useSelector","state","userData","holderStatus","currentPage","setCurrentPage","pageCount","Math","ceil","limit","range","from","i","push","start","end","holders","selectAllUsersItems","filter","item","slice","some","fetchAssetHolders","changePage","event","pageNumber","Number","currentTarget","textContent","console","log","renderHolders","map","holder","findBalanceOf","id","getContent","dataTip","onClick","disabled","PrevIcon","paginationGroup","value","NextIcon","AssetDetails","selectUserIds","selectCardById","owner","selectUserById","creators","cardError","cards","error","cardStatus","status","a","LSP4DigitalAssetApi","getTokenSale","fetchProfileByAddress","fetchCard","scrollTo","Fragment","creator","renderHolderPagination","metaCardInfo","label","ls8MetaData","tierLabel","icon","TierPropertyIcon","edition","EditionPropertyIcon","editionCategory","CategoryPropertyIcon","editionSet","SetPropertyIcon","season","SeasonPropertyIcon","zoneLabel","ZonePropertyIcon","leagueLabel","SubzonePropertyIcon","teamLabel","TeamPropertyIcon","cardInfo","valueType","color","image","ReloadIcon","ShareIcon","OptionIcon","WethIcon","title","enableToggle"],"mappings":"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","file":"static/js/4.41c9b83d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\nimport { sm } from '../../../utility';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${sm} {\n    width: ${({ demo }) => (demo ? '212px' : '117px')};\n  }\n`;\n\nexport const StyledProfileDetailWrappar = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrappar = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: 400;\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrappar,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrappar,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      className=\"animate-cardrender\"\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrappar demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrappar>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrappar demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrappar>\n    </StyledProfileCard>\n  );\n};\n","import styled from 'styled-components';\nimport { lg, md, xl } from '../../utility';\n\nexport const StyledPaginationWrappar = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledAssetsHeader = styled.div`\n  padding-top: 20px;\n  display: flex;\n  text-transform: capitalize;\n`;\n\nexport const StyledAssetsHeading = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin-right: auto;\n`;\n\nexport const StyledAssetsWrappar = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  padding: 20px 0 20px 0;\n  column-gap: 20px;\n  row-gap: 20px;\n  grid-auto-flow: unset;\n  justify-items: center;\n\n  @media ${md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media ${lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media ${xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const StyledPaginationControls = styled.div`\n  display: flex;\n  column-gap: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n`;\n\nexport const StyledNextButton = styled.button`\n  padding: 0 8px 0 8px;\n`;\n\nexport const StyledPreviousButton = styled(StyledNextButton)``;\n\nexport const StyledNextIcon = styled.img``;\n\nexport const StyledPrevIcon = styled.img``;\n\nexport const StyledPageNumButton = styled.button<{ active?: boolean }>`\n  padding: 2px 8px 2px 8px;\n  background: ${({ active }) => (active ? '#BCBCBC' : '')};\n  border-radius: 3px;\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useViewPort = () => {\n  const [screenWidth, setScreenWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const handleSize = () => {\n      setScreenWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleSize);\n\n    return () => window.removeEventListener('resize', handleSize);\n  }, []);\n\n  return { screenWidth };\n};\n","import styled from 'styled-components';\nimport { lg, md, sm, xl } from '../../../utility';\n\nexport const StyledHolderPagination = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 20px;\n`;\n\nexport const StyledHolderPaginationGridContainer = styled.div`\n  display: grid;\n  padding: 15px 0;\n\n  @media ${sm} {\n    grid-template-columns: 2;\n  }\n\n  @media ${md} {\n    grid-template-columns: 3;\n  }\n\n  @media ${lg} {\n    grid-template-columns: 4;\n  }\n\n  @media ${xl} {\n    grid-template-columns: 5;\n  }\n`;\n","import { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { NextIcon, PrevIcon } from '../../../assets';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport {\n  StyledNextButton,\n  StyledNextIcon,\n  StyledPageNumButton,\n  StyledPaginationControls,\n  StyledPrevIcon,\n  StyledPreviousButton,\n} from '../../../features/pagination/styles';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { useViewPort } from '../../../hooks/useViewPort';\nimport { STATUS } from '../../../utility';\nimport {\n  StyledHolderPagination,\n  StyledHolderPaginationGridContainer,\n} from './styles';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { screenWidth } = useViewPort();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const { pageCount, limit } = useMemo(() => {\n    if (screenWidth > 1280) {\n      return {\n        pageCount: Math.ceil(holdersAddresses.length / 10),\n        limit: 10,\n      };\n    }\n    if (screenWidth > 1024) {\n      return {\n        pageCount: Math.ceil(holdersAddresses.length / 8),\n        limit: 8,\n      };\n    }\n    if (screenWidth > 768) {\n      return {\n        pageCount: Math.ceil(holdersAddresses.length / 6),\n        limit: 6,\n      };\n    }\n\n    return {\n      pageCount: Math.ceil(holdersAddresses.length / 4),\n      limit: 4,\n    };\n  }, [holdersAddresses.length, screenWidth]);\n\n  const range = (from: number, to: number) => {\n    const range: number[] = [];\n    let i = from;\n    while (i <= to) {\n      range.push(i);\n      i++;\n    }\n    return range;\n  };\n\n  const paginationGroup = () => {\n    if (pageCount === 2) {\n      return range(1, 2);\n    }\n    switch (currentPage) {\n      case 1:\n        return range(currentPage, currentPage + 2);\n      case pageCount:\n        return range(currentPage - 2, currentPage);\n      default:\n        return range(currentPage - 1, currentPage + 1);\n    }\n  };\n\n  const start = useMemo(\n    () => currentPage * limit - limit,\n    [currentPage, limit],\n  );\n  const end = useMemo(() => start + limit, [limit, start]);\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses.slice(start, end).some((i) => {\n      return i === item.address;\n    });\n  });\n\n  useMemo(() => {\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(start, end),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, end, holdersAddresses, params.network, start]);\n\n  const nextPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === pageCount ? currentPage : currentPage + 1,\n    );\n  };\n\n  const previousPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === 1 ? currentPage : currentPage - 1,\n    );\n  };\n\n  const changePage = (event: React.MouseEvent) => {\n    const pageNumber = Number(event.currentTarget.textContent);\n    setCurrentPage(pageNumber);\n  };\n\n  useMemo(() => {\n    console.log(start, end, pageCount);\n  }, [end, pageCount, start]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <StyledHolderPagination>\n      <StyledHolderPaginationGridContainer>\n        {renderHolders}\n      </StyledHolderPaginationGridContainer>\n      {pageCount > 1 && (\n        <StyledPaginationControls>\n          <StyledPreviousButton\n            onClick={previousPage}\n            disabled={currentPage === 1 ? true : false}\n          >\n            <StyledPrevIcon src={PrevIcon} alt=\"\" />\n          </StyledPreviousButton>\n          {currentPage >= 3 && pageCount > 3 && (\n            <>\n              <StyledPageNumButton onClick={changePage}>1</StyledPageNumButton>\n              <p>...</p>\n            </>\n          )}\n          {paginationGroup().map((value) => (\n            <StyledPageNumButton\n              key={value}\n              active={currentPage === value ? true : false}\n              onClick={changePage}\n            >\n              {value}\n            </StyledPageNumButton>\n          ))}\n          {currentPage <= pageCount - 2 && pageCount > 3 && (\n            <>\n              <p>...</p>\n              <StyledPageNumButton onClick={changePage}>\n                {pageCount}\n              </StyledPageNumButton>\n            </>\n          )}\n          <StyledNextButton\n            onClick={nextPage}\n            disabled={currentPage === pageCount ? true : false}\n          >\n            <StyledNextIcon src={NextIcon} alt=\"\" />\n          </StyledNextButton>\n        </StyledPaginationControls>\n      )}\n    </StyledHolderPagination>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport {\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  WethIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport { fetchCard, selectCardById } from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchAssetHolders,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport { IProfile } from '../../services/models';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrappar,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledTokenIcon,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledMakeOfferButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { getChainExplorer } from '../../utility';\nimport ReactTooltip from 'react-tooltip';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { useSigner } from 'wagmi';\nimport { Accordion } from '../../components/Accordion';\nimport { HolderPagination } from './HoldersPagination';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const params = useParams<IPrams>();\n\n  const profiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const dispatch = useAppDispatch();\n\n  const tokenIdForSale = useMemo(\n    async () =>\n      params.id &&\n      (await LSP4DigitalAssetApi.getTokenSale(\n        params.add,\n        Number(params.id),\n        params.network,\n      )),\n    [params.add, params.network, params.id],\n  );\n\n  useMemo(() => {\n    if (!owner && asset) {\n      dispatch(\n        fetchProfileByAddress({\n          address: asset.owner,\n          network: params.network,\n        }),\n      );\n    }\n  }, [asset, dispatch, owner, params.network]);\n\n  useMemo(() => {\n    if (!asset) {\n      dispatch(fetchCard({ address: params.add, network: params.network }));\n    }\n  }, [asset, dispatch, params.add, params.network]);\n\n  // useMemo(() => {\n  //   let addresses: string[] = [];\n  //   asset?.holders.forEach((item) => {\n  //     if (!profiles?.includes(item)) {\n  //       addresses.push(item);\n  //     }\n  //   });\n  //   if (addresses.length > 0) {\n  //     dispatch(\n  //       fetchAssetHolders({ address: addresses, network: params.network }),\n  //     );\n  //   }\n  // }, [asset?.holders, dispatch, params.network, profiles]);\n\n  // useMemo(() => {\n  //   let addresses: string[] = [];\n  //   asset?.creators.forEach((item) => {\n  //     if (!profiles?.includes(item)) {\n  //       addresses.push(item);\n  //     }\n  //   });\n  //   if (addresses.length > 0) {\n  //     dispatch(\n  //       fetchAssetCreator({ address: addresses, network: params.network }),\n  //     );\n  //   }\n  // }, [asset?.creators, dispatch, params.network, profiles]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [params.add, params.network]);\n\n  const renderOwner = useMemo(() => {\n    if (asset?.address === params.add) {\n      if (owner?.address === asset.owner) {\n        const findBalanceOf = owner.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={owner.address}>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }\n    }\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderDesigners = useMemo(\n    () =>\n      creators?.map((creator: IProfile) => {\n        const findBalanceOf = creator.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={creator.address}>\n            <ProfileCard\n              userProfile={creator}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"creator\"\n              tooltipId=\"designerTooltip\"\n            />\n            <ReactTooltip\n              id=\"designerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(\n    () => <HolderPagination holdersAddresses={asset ? asset.holders : []} />,\n    [asset],\n  );\n\n  const metaCardInfo = [\n    {\n      label: 'Tier',\n      value: asset?.ls8MetaData.tierLabel,\n      icon: TierPropertyIcon,\n    },\n    {\n      label: 'Edition',\n      value: asset?.ls8MetaData.edition,\n      icon: EditionPropertyIcon,\n    },\n    {\n      label: 'Category',\n      value: asset?.ls8MetaData.editionCategory,\n      icon: CategoryPropertyIcon,\n    },\n    {\n      label: 'Set',\n      value: asset?.ls8MetaData.editionSet,\n      icon: SetPropertyIcon,\n    },\n    {\n      label: 'Season',\n      value: asset?.ls8MetaData.season,\n      icon: SeasonPropertyIcon,\n    },\n    {\n      label: 'Zone',\n      value: asset?.ls8MetaData.zoneLabel,\n      icon: ZonePropertyIcon,\n    },\n    {\n      label: 'League',\n      value: asset?.ls8MetaData.leagueLabel,\n      icon: SubzonePropertyIcon,\n    },\n    {\n      label: 'Team',\n      value: asset?.ls8MetaData.teamLabel,\n      icon: TeamPropertyIcon,\n    },\n  ];\n\n  const cardInfo: { label: string; value: string; valueType?: string }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    { label: 'Mint', value: '' },\n    { label: 'Total amount of Tokens', value: '' },\n    { label: 'Token Standard', value: '' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    { label: 'Current owner', value: '', valueType: 'address' },\n  ];\n\n  // const renderCardProperties = useMemo(() => {\n  //   const keys = asset && Object.keys(asset && asset.ls8MetaData);\n  //   if (\n  //     keys &&\n  //     keys.includes('attributes') &&\n  //     asset &&\n  //     asset.ls8MetaData.attributes.length > 0\n  //   ) {\n  //     return asset.ls8MetaData.attributes.map((attribute: any, i) => (\n  //       <React.Fragment key={i}>\n  //         <StyledLabel>{attribute.trait_type}</StyledLabel>\n  //         {Object.keys(attribute).includes('max_value') ? (\n  //           <StyledValue>\n  //             {attribute.value} of {attribute.max_value}\n  //           </StyledValue>\n  //         ) : (\n  //           <StyledValue>{attribute.value}</StyledValue>\n  //         )}\n  //       </React.Fragment>\n  //     ));\n  //   } else {\n  //     return metaCardInfo.map((items, i) => (\n  //       <React.Fragment key={i}>\n  //         <StyledLabel>{items.text}</StyledLabel>\n  //         <StyledValue>{items.data}</StyledValue>\n  //       </React.Fragment>\n  //     ));\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [asset]);\n\n  return (\n    <StyledAssetDetailsContentWrappar>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  <StyledMedia src={asset?.ls8MetaData.image} alt=\"\" />\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    <StyledCardPriceValueWrapper>\n                      <StyledTokenIcon src={WethIcon} alt=\"\" />\n                      <StyledCardPriceValue>\n                        11.5 ($35,023.25)\n                      </StyledCardPriceValue>\n                    </StyledCardPriceValueWrapper>\n                    <StyledActionsButtonWrapper>\n                      <StyledBuyButton>Buy now</StyledBuyButton>\n                      <StyledMakeOfferButton>Make offer</StyledMakeOfferButton>\n                    </StyledActionsButtonWrapper>\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion title=\"Card Info\" enableToggle>\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              <StyledCardPropertiesAccordion title=\"Details\" enableToggle>\n                <StyledCardProperties>\n                  {metaCardInfo.map((item) => (\n                    <StyledCardPropertyContainer key={item.label}>\n                      <StyledCardPropertyIconWrapper>\n                        <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n                      </StyledCardPropertyIconWrapper>\n                      <StyledCardProperty>\n                        <StyledCardPropertyLabel>\n                          {item.label}\n                        </StyledCardPropertyLabel>\n                        <StyledCardPropertyValue>\n                          {item.value}\n                        </StyledCardPropertyValue>\n                      </StyledCardProperty>\n                    </StyledCardPropertyContainer>\n                  ))}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledHoldersAccordion title=\"Other Holders\" enableToggle>\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n              {/* <StyledGrid>\n                <StyledAssetDetailGrid>\n                  <StyledMediaWrappar>\n                    {params.network === 'l14' && (\n                      <a\n                        href={\n                          'https://universalprofile.cloud/asset/' +\n                          asset?.address\n                        }\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <StyledUniversalProfileIcon\n                          src={UniversalProfileIcon}\n                          alt=\"\"\n                        />\n                      </a>\n                    )}\n                    <a\n                      href={explorer && explorer.exploreUrl + asset?.address}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <StyledBlockScoutIcon src={explorer?.icon} alt=\"\" />\n                    </a>\n                    <StyledStatsName>{metaCardInfo[0].data}</StyledStatsName>\n                    <StyledMetaCardImg src={asset?.ls8MetaData.image} alt=\"\" />\n                  </StyledMediaWrappar>\n                  <StyledDetailsWrappar>\n                    <StyledCardInfoLabel>Card Info</StyledCardInfoLabel>\n                    <StyledInfoGrid>{renderCardProperties}</StyledInfoGrid>\n                    <StyledFullName>{asset?.name}</StyledFullName>\n                  </StyledDetailsWrappar>\n                </StyledAssetDetailGrid>\n                <StyledExtraInfo>\n                  <StyledIssuerLabel>Issuer</StyledIssuerLabel>\n                  <StyledIssuerWrappar>{renderOwner}</StyledIssuerWrappar>\n                  <StyledCreatorLabel>Creator</StyledCreatorLabel>\n                  <StyledCreatorWrappar>{renderDesigners}</StyledCreatorWrappar>\n                </StyledExtraInfo>\n              </StyledGrid>\n              <StyledHolderLabel>Holder</StyledHolderLabel>\n              <StyledHolderWrappar>{renderHolders}</StyledHolderWrappar> */}\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrappar>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}