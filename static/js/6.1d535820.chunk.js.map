{"version":3,"sources":["features/pagination/styles.ts","utility/permissions.ts","features/pagination/Pagination.tsx","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/ProfileDetails.tsx","hooks/useCopyText/useCopyText.ts"],"names":["StyledPaginationWrapper","styled","div","StyledAssetsHeader","StyledAssetsHeading","h1","theme","font","weight","bolder","StyledAssetsWrapper","screen","md","lg","xl","StyledPaginationControls","StyledNextButton","button","StyledPreviousButton","StyledNextIcon","img","StyledPrevIcon","StyledPageNumButton","active","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","find","x","address","toLowerCase","permissions","AssetsPagination","type","profile","transferPermission","collectionAddresses","params","useParams","dispatch","useAppDispatch","useState","currentPageAssetAddresses","setCurrentPageAssetAddresses","allCollection","useSelector","selectAllCardItems","filter","item","some","i","ownedCardStatus","state","cards","ownedStatus","issuedCardStatus","issuedStatus","cardStatus","status","search","screenWidth","useViewPort","currentPage","setCurrentPage","limit","setLimit","pagesCount","setPagesCount","range","from","to","push","changePage","event","pageNumber","Number","currentTarget","textContent","useMemo","Math","ceil","length","start","end","slice","STATUS","LOADING","fetchOwnedCards","network","addresses","fetchIssuedCards","fetchAllCards","index","arrayLength","renderCollection","map","digitalCard","findBalanceOf","ownedAssets","assetAddress","MetaCard","balance","className","onChange","onClick","disabled","src","PrevIcon","alt","paginationGroup","value","NextIcon","StyledProfileDetails","StyledProfileDetailsContent","StyledProfileNotFound","StyledProfileCoverImg","StyledProfileInfoWrapper","StyledProfileInfo1","StyledProfileInfo1Content","StyledProfileMediaWrapper","StyledProfileMedia","StyledProfileAddress","p","light","StyledProfileNameBioWrapper","StyledProfileName","h2","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledShareProfileWrapper","StyledShareIcon","StyledDropDownIcon","a","expand","StyledLinkIconWrapper","StyledLinkIcon","StyledOpenTransferModalButton","StyledShareProfileButton","isShare","StyledShareDropDown","animation","cardrender","ShareLink","attrs","target","StyledProfileImageWrapper","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","pulseAnimate","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","explorer","getChainExplorer","href","exploreUrl","rel","icon","UniversalProfileIcon","ProfileEditModal","isOpen","signer","onClose","error","setError","loading","setLoading","profile_image","background_image","name","bio","editProfileForm","setEditProfileForm","changeHandler","imageChangeHandler","files","data","description","backgroundImage","width","height","hashFunction","url","profileImage","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","catch","finally","setUniversalProfileData","add","color","label","accept","ProfileDetails","pathname","useLocation","useAccount","account","useSigner","openEditProfileModal","setOpenEditProfileModal","selectUserById","userData","profileError","profileStatus","setIsShare","copied","setCopied","copyText","text","window","navigator","clipboard","writeText","setTimeout","canCopy","useCopyText","isTablet","useMediaQuery","permissionsSet","transferValue","canTransfer","canSetData","useEffect","currentProfile","fetchProfileByAddress","renderIssuedAssetsPagination","Pagination","issuedAssets","renderOwnedAssetsPagination","renderLinks","links","link","linkTitle","title","Twitter","Instagram","Facebook","Globe","shareButtonRef","useRef","useOutsideClick","shareButtonHandler","useCallback","share","location","origin","console","log","scrollTo","makeBlockie","ref","ShareIcon","size","DropDownIcon","as","Link"],"mappings":"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","file":"static/js/6.1d535820.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledPaginationWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledAssetsHeader = styled.div`\n  padding-top: 20px;\n  display: flex;\n  text-transform: capitalize;\n`;\n\nexport const StyledAssetsHeading = styled.h1`\n  font-size: 24px;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin-right: auto;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  padding: 20px 0 20px 0;\n  column-gap: 20px;\n  row-gap: 20px;\n  grid-auto-flow: unset;\n  justify-items: stretch;\n\n  @media ${({ theme }) => theme.screen.md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const StyledPaginationControls = styled.div`\n  display: flex;\n  column-gap: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n`;\n\nexport const StyledNextButton = styled.button`\n  padding: 0 8px 0 8px;\n`;\n\nexport const StyledPreviousButton = styled(StyledNextButton)``;\n\nexport const StyledNextIcon = styled.img``;\n\nexport const StyledPrevIcon = styled.img``;\n\nexport const StyledPageNumButton = styled.button<{ active?: boolean }>`\n  padding: 2px 8px 2px 8px;\n  background: ${({ active }) => (active ? '#BCBCBC' : '')};\n  border-radius: 3px;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { MetaCard } from '../cards/MetaCard';\nimport { ICard, IProfile } from '../../services/models';\nimport { PrevIcon } from '../../assets';\nimport { NextIcon } from '../../assets';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  StyledAssetsHeader,\n  StyledAssetsHeading,\n  StyledAssetsWrapper,\n  StyledNextButton,\n  StyledNextIcon,\n  StyledPageNumButton,\n  StyledPaginationControls,\n  StyledPaginationWrapper,\n  StyledPrevIcon,\n  StyledPreviousButton,\n} from './styles';\nimport { Search } from '../../components';\nimport { useAppDispatch } from '../../boot/store';\nimport {\n  fetchAllCards,\n  fetchIssuedCards,\n  fetchOwnedCards,\n  selectAllCardItems,\n} from '../cards';\nimport { useSelector } from 'react-redux';\nimport { STATUS } from '../../utility';\nimport { useViewPort } from '../../hooks/useViewPort';\n\ninterface IPagination {\n  type: string;\n  profile?: IProfile;\n  transferPermission?: boolean;\n  collectionAddresses: string[];\n}\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst AssetsPagination: React.FC<IPagination> = ({\n  type,\n  profile,\n  transferPermission,\n  collectionAddresses,\n}) => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n\n  const [currentPageAssetAddresses, setCurrentPageAssetAddresses] = useState<\n    string[]\n  >([]);\n\n  const allCollection = useSelector(selectAllCardItems).filter((item) =>\n    currentPageAssetAddresses.some((i) => i === item.address),\n  );\n\n  const ownedCardStatus = useSelector(\n    (state: RootState) => state.cards.ownedStatus,\n  );\n\n  const issuedCardStatus = useSelector(\n    (state: RootState) => state.cards.issuedStatus,\n  );\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const [\n    search,\n    // setSearch\n  ] = useState<string>('');\n\n  const { screenWidth } = useViewPort();\n\n  // const [filterCollection, setFilterCollection] = useState<ICard[]>();\n\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const [limit, setLimit] = useState<number>(4);\n\n  const [pagesCount, setPagesCount] = useState<number>(1);\n\n  //helper\n  const range = (from: number, to: number) => {\n    const range: number[] = [];\n    let i = from;\n    while (i <= to) {\n      range.push(i);\n      i++;\n    }\n    return range;\n  };\n\n  const nextPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === pagesCount ? currentPage : currentPage + 1,\n    );\n  };\n\n  const previousPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === 1 ? currentPage : currentPage - 1,\n    );\n  };\n\n  const changePage = (event: React.MouseEvent) => {\n    const pageNumber = Number(event.currentTarget.textContent);\n    setCurrentPage(pageNumber);\n  };\n\n  const paginationGroup = () => {\n    if (pagesCount === 2) {\n      return range(1, 2);\n    }\n    switch (currentPage) {\n      case 1:\n        return range(currentPage, currentPage + 2);\n      case pagesCount:\n        return range(currentPage - 2, currentPage);\n      default:\n        return range(currentPage - 1, currentPage + 1);\n    }\n  };\n\n  useMemo(() => {\n    if (screenWidth < 769) {\n      setPagesCount(Math.ceil(collectionAddresses.length / 4));\n      setLimit(4);\n    }\n    if (screenWidth > 768) {\n      setPagesCount(Math.ceil(collectionAddresses.length / 6));\n      setLimit(6);\n    }\n    if (screenWidth > 1024) {\n      setPagesCount(Math.ceil(collectionAddresses.length / 8));\n      setLimit(8);\n    }\n    if (screenWidth > 1280) {\n      setPagesCount(Math.ceil(collectionAddresses.length / 10));\n      setLimit(10);\n    }\n  }, [collectionAddresses.length, screenWidth]);\n\n  useMemo(() => {\n    const start = currentPage * limit - limit;\n    const end = start + limit;\n    setCurrentPageAssetAddresses(collectionAddresses.slice(start, end));\n    if (\n      type === 'owned' &&\n      ownedCardStatus !== STATUS.LOADING &&\n      allCollection.length !== currentPageAssetAddresses.length\n    ) {\n      dispatch(\n        fetchOwnedCards({\n          network: params.network,\n          addresses: collectionAddresses.slice(start, end),\n        }),\n      );\n    }\n    if (\n      type === 'issued' &&\n      issuedCardStatus !== STATUS.LOADING &&\n      allCollection.length !== currentPageAssetAddresses.length\n    ) {\n      dispatch(\n        fetchIssuedCards({\n          network: params.network,\n          addresses: collectionAddresses.slice(start, end),\n        }),\n      );\n    }\n    if (\n      type === 'demo' &&\n      cardStatus !== STATUS.LOADING &&\n      allCollection.length !== currentPageAssetAddresses.length\n    ) {\n      dispatch(\n        fetchAllCards({\n          network: params.network,\n          addresses: collectionAddresses.slice(start, end),\n          index: 0,\n          arrayLength: 1,\n        }),\n      );\n    }\n  }, [\n    allCollection.length,\n    cardStatus,\n    collectionAddresses,\n    currentPage,\n    currentPageAssetAddresses.length,\n    dispatch,\n    issuedCardStatus,\n    limit,\n    ownedCardStatus,\n    params.network,\n    type,\n  ]);\n\n  // const getBalanceOf = () => {\n  //   if (balanceOf.length < 1) {\n  //     if (type === 'owned') {\n  //       collection.forEach(async (item) => {\n  //         const res = await LSP4DigitalAssetApi.fetchBalanceOf(\n  //           new Web3Service(),\n  //         )(params.network, item.address, profileAddr);\n  //         setBalanceOf((prevState) => [\n  //           ...prevState,\n  //           { address: item.address, balance: res },\n  //         ]);\n  //       });\n  //     }\n  //   }\n  // };\n\n  const searchHandler = () => {\n    // setSearch(event.currentTarget.value.toLowerCase());\n    // if (search !== '') setCurrentPage(1);\n    // const filter = collection.filter((item) => {\n    //   const name = item.name.split('•')[0];\n    //   return name\n    //     .toLowerCase()\n    //     .includes(event.currentTarget.value.toLowerCase());\n    // });\n    // setFilterCollection(filter);\n  };\n\n  const renderCollection = useMemo(\n    () =>\n      allCollection.map((digitalCard: ICard) => {\n        if (type === 'owned' || type === 'issued') {\n          const findBalanceOf = profile?.ownedAssets.find(\n            (item) =>\n              item.assetAddress.toLowerCase() ===\n              digitalCard.address.toLowerCase(),\n          );\n          return (\n            <MetaCard\n              key={digitalCard.address}\n              digitalCard={digitalCard}\n              type={type}\n              balance={findBalanceOf?.balance}\n              transferPermission={transferPermission}\n            />\n          );\n        }\n        if (type === 'demo') {\n          return (\n            <MetaCard\n              key={digitalCard.address}\n              digitalCard={digitalCard}\n              type={type}\n            />\n          );\n        }\n        return '';\n      }),\n    [allCollection, type, profile?.ownedAssets, transferPermission],\n  );\n\n  return (\n    <StyledPaginationWrapper>\n      <StyledAssetsHeader className=\"flex\">\n        <StyledAssetsHeading>\n          {type === 'demo' ? 'Assets' : `${type} Assets`}\n        </StyledAssetsHeading>\n        <Search onChange={searchHandler} />\n      </StyledAssetsHeader>\n      {/* {ownedCardStatus === STATUS.LOADING ||\n      issuedCardStatus === STATUS.LOADING ||\n      cardStatus === STATUS.LOADING ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : ( */}\n      <StyledAssetsWrapper>{renderCollection}</StyledAssetsWrapper>\n      {pagesCount > 1 && search === '' && (\n        <StyledPaginationControls>\n          <StyledPreviousButton\n            onClick={previousPage}\n            disabled={currentPage === 1 ? true : false}\n          >\n            <StyledPrevIcon src={PrevIcon} alt=\"\" />\n          </StyledPreviousButton>\n          {currentPage >= 3 && pagesCount > 3 && (\n            <>\n              <StyledPageNumButton onClick={changePage}>1</StyledPageNumButton>\n              <p>...</p>\n            </>\n          )}\n          {paginationGroup().map((value) => (\n            <StyledPageNumButton\n              key={value}\n              active={currentPage === value ? true : false}\n              onClick={changePage}\n            >\n              {value}\n            </StyledPageNumButton>\n          ))}\n          {currentPage <= pagesCount - 2 && pagesCount > 3 && (\n            <>\n              <p>...</p>\n              <StyledPageNumButton onClick={changePage}>\n                {pagesCount}\n              </StyledPageNumButton>\n            </>\n          )}\n          <StyledNextButton\n            onClick={nextPage}\n            disabled={currentPage === pagesCount ? true : false}\n          >\n            <StyledNextIcon src={NextIcon} alt=\"\" />\n          </StyledNextButton>\n        </StyledPaginationControls>\n      )}\n    </StyledPaginationWrapper>\n  );\n};\n\nexport default AssetsPagination;\n","import styled from 'styled-components';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 1.875rem;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 15em;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 1.25em 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    --profile-image-size: 11.25em;\n    --outer-columns-width: calc(\n      50% - 2.5em - calc(var(--profile-image-size) / 2)\n    );\n    align-items: center;\n    display: grid;\n    width: 1440px;\n    grid-template-columns:\n      var(--outer-columns-width) var(--profile-image-size)\n      var(--outer-columns-width);\n    grid-column-gap: 2.5em;\n    padding: 1.25em 2.5em;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrapper = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${({ theme }) => theme.screen.md} {\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    left: 50%;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  font-weight: ${({ theme }) => theme.font.weight.light};\n  letter-spacing: 1.5px;\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: min(0.875rem, 3.5vw);\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(100% - 12.85em);\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const StyledProfileNameBioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 0.25em;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 1.0625rem;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin: auto 0 auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    font-size: 1.125rem;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileBioWrapper = styled.div`\n  margin: auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(50% - 5.625em);\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin-right: 2.5em;\n  column-gap: 1.5em;\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${({ theme }) => theme.screen.md} {\n    max-width: 1440px;\n    padding: 0 2.5em;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 1.25em 0 1.25em 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  row-gap: 1.35em;\n  margin-top: 1.35em;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    margin-left: auto;\n    margin-top: 0;\n  }\n`;\n\nexport const StyledShareProfileWrapper = styled.div`\n  position: relative;\n  overflow: visible;\n  width: max-content;\n`;\n\nexport const StyledShareIcon = styled.img`\n  height: 0.875em;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  display: inline-block;\n  margin-left: 0.5em;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0 2.5em;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIconWrapper = styled.a`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0 auto;\n  }\n`;\n\nexport const StyledShareProfileButton = styled.button<{ isShare: boolean }>`\n  align-items: center;\n  column-gap: 1.25em;\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  padding: 0.5em 0.75em;\n  font-size: 0.9375rem;\n  overflow: hidden;\n  margin: auto 0;\n  display: flex;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0;\n    right: 0;\n    border-bottom-color: rgba(255, 255, 255, 0.15);\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n\n  ${({ isShare }) =>\n    isShare &&\n    `\n    border-bottom-color: transparent;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n`;\n\nexport const StyledShareDropDown = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 100%;\n  background-color: rgba(59, 59, 59, 1);\n  border-width: 0px 1px 1px;\n  border-color: rgba(255, 255, 255, 0.15);\n  border-style: solid;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 10;\n  animation: ${({ theme }) => theme.animation.cardrender} 0.2s linear;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-top-width: 1px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    top: calc(100% + 0.5em);\n    width: max-content;\n  }\n`;\n\nexport const ShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  align-items: center;\n  display: flex;\n  column-gap: 1.25em;\n  padding: 0.5em 0.75em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: max-content;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\n\nexport const StyledProfileImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n`;\n\nexport const StyledProfileImg = styled.img`\n  border-radius: 50%;\n  height: calc(100% - 1em);\n  inset: 0;\n  margin: auto;\n  position: absolute;\n  width: auto;\n`;\n\nexport const StyledBlockieImg = styled.img`\n  align-items: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  z-index: 10;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  height: calc(100% - 1em);\n  inset: 0;\n  position: absolute;\n  width: auto;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrapper,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const explorer = getChainExplorer(params.network);\n  return (\n    <StyledProfileImageWrapper>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {params.network === 'l14' && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrapper>\n  );\n};\n","import { Signer } from 'ethers';\nimport React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../../boot/types';\nimport { Modal } from '../../../components';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n} from './styles';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  onClose: () => void;\n  signer: Signer;\n  profile: IProfile;\n}\n\ntype formInput = {\n  profile_image: File | null;\n  background_image: File | null;\n  name: string;\n  bio: string;\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  isOpen,\n  onClose,\n  signer,\n  profile,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profile_image: null,\n    background_image: null,\n    name: '',\n    bio: '',\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      setEditProfileForm({\n        ...editProfileForm,\n        [event.currentTarget.name]: event.currentTarget.files[0],\n      });\n    }\n  };\n\n  const fields = [\n    { name: 'background_image', label: 'Background Image', type: 'file' },\n    { name: 'profile_image', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name:\n        editProfileForm.name.length > 0 ? editProfileForm.name : profile.name,\n      description:\n        editProfileForm.bio.length > 0\n          ? editProfileForm.bio\n          : profile.description,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.background_image !== null\n              ? editProfileForm.background_image\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.profile_image !== null\n              ? editProfileForm.profile_image\n              : profile.profileImage,\n        },\n      ],\n    }),\n    [\n      editProfileForm.background_image,\n      editProfileForm.bio,\n      editProfileForm.name,\n      editProfileForm.profile_image,\n      profile.backgroundImage,\n      profile.description,\n      profile.name,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n    if (profile.isOwnerKeyManager) {\n      await LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n        profile.owner,\n        profile.address,\n        data,\n        signer,\n      )\n        .catch((error) => {\n          setError(true);\n          // onClose();\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      await LSP3ProfileApi.setUniversalProfileData(params.add, data, signer)\n        .catch((error) => {\n          setError(true);\n          // onClose();\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  return isOpen ? (\n    <Modal>\n      {!loading && !error ? (\n        <StyledEditProfileModalContent>\n          {fields.map((item, i) => (\n            <StyledInputRow key={i}>\n              <StyledLabel>{item.label}</StyledLabel>\n              {item.type === 'textarea' && (\n                <StyledTextAreaInput\n                  name={item.name}\n                  onChange={changeHandler}\n                />\n              )}\n              {(item.type === 'text' || item.type === 'file') && (\n                <StyledInput\n                  name={item.name}\n                  type={item.type}\n                  onChange={\n                    item.type === 'file' ? imageChangeHandler : changeHandler\n                  }\n                  accept={item.type === 'file' ? '.jpg, .png' : ''}\n                />\n              )}\n            </StyledInputRow>\n          ))}\n          <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n        </StyledEditProfileModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait ....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  ) : (\n    <></>\n  );\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { HideOnScreen } from '../../components';\nimport Pagination from '../../features/pagination/Pagination';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrapper,\n  StyledDropDownIcon,\n  StyledLinkIconWrapper,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrapper,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrapper,\n  StyledProfileName,\n  StyledProfileNameBioWrapper,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHolder,\n  StyledShareProfileButton,\n  StyledShareDropDown,\n  ShareLink,\n  StyledShareProfileWrapper,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  Link,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n  currentProfile,\n  fetchProfileByAddress,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst ProfileDetails: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  const [{ data: account }] = useAccount();\n  const [{ data: signer }] = useSigner();\n  const [openEditProfileModal, setOpenEditProfileModal] =\n    useState<boolean>(false);\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[params.network], params.add),\n  );\n\n  const profileError = useSelector(\n    (state: RootState) => state.userData[params.network].error,\n  );\n\n  const profileStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const [isShare, setIsShare] = useState<boolean>(false);\n\n  const { copied, copyText, canCopy } = useCopyText();\n\n  const isTablet = useMediaQuery(theme.screen.md);\n\n  const [canTransfer, canSetData] = useMemo(() => {\n    if (!profile || !account) return [false, false];\n    const permissionsSet = getAddressPermissionsOnUniversalProfile(\n      profile.permissionSet,\n      account.address,\n    );\n    return [\n      permissionsSet?.permissions.transferValue === '1',\n      permissionsSet?.permissions.setData === '1',\n    ];\n  }, [account, profile]);\n\n  useEffect(() => {\n    dispatch(currentProfile(params.add));\n    if (!profile)\n      dispatch(\n        fetchProfileByAddress({ address: params.add, network: params.network }),\n      );\n  }, [dispatch, params.add, params.network, profile]);\n\n  const renderIssuedAssetsPagination = useMemo(\n    () => (\n      <Pagination\n        type=\"issued\"\n        collectionAddresses={profile ? profile.issuedAssets : []}\n      />\n    ),\n    [profile],\n  );\n\n  const renderOwnedAssetsPagination = useMemo(() => {\n    return (\n      <Pagination\n        type=\"owned\"\n        profile={profile}\n        transferPermission={canTransfer}\n        collectionAddresses={\n          profile ? profile.ownedAssets.map((item) => item.assetAddress) : []\n        }\n      />\n    );\n  }, [canTransfer, profile]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link) => {\n        const linkTitle = link.title.toLowerCase();\n        return (\n          <StyledProfileLinks>\n            <StyledLinkIconWrapper\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              key={link.url}\n            >\n              <StyledLinkIcon\n                src={\n                  linkTitle === 'twitter'\n                    ? Twitter\n                    : linkTitle === 'instagram'\n                    ? Instagram\n                    : linkTitle === 'facebook'\n                    ? Facebook\n                    : Globe\n                }\n              />\n            </StyledLinkIconWrapper>\n          </StyledProfileLinks>\n        );\n      }),\n    [profile?.links],\n  );\n\n  const shareButtonRef = useRef(null);\n  useOutsideClick(shareButtonRef, () => isShare && setIsShare(false));\n\n  const shareButtonHandler = useCallback(async () => {\n    try {\n      await navigator.share({\n        title: `Fanzone.io Universal Profile – ${profile && profile.address}`,\n        text: `This is Fanzone.io's Universal Profile page for ${\n          profile && profile.address\n        }`,\n        url: `${window.location.origin}/#${pathname}`,\n      });\n      console.log('shared successfully');\n    } catch (err) {\n      setIsShare((isShare) => !isShare);\n      console.error('Error: ' + err);\n    }\n  }, [pathname, profile]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.add, profile]);\n\n  return (\n    <StyledProfileDetails>\n      {signer &&\n        profile &&\n        account &&\n        (canSetData ||\n          profile.owner.toLowerCase() === account.address.toLowerCase()) && (\n          <ProfileEditModal\n            isOpen={openEditProfileModal}\n            onClose={() => setOpenEditProfileModal(false)}\n            signer={signer}\n            profile={profile}\n          />\n        )}\n      {/* {signer &&\n        profile &&\n        account &&\n        profile.ownedAssets.length > 0 &&\n        (canTransfer ||\n          profile.owner.toLowerCase() === account.address.toLowerCase()) && (\n          <TransferCardModal\n            signer={signer}\n            profile={profile}\n            selectecAddress={preSelectedAssetAddress}\n          />\n        )} */}\n      {profileStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {profileError ? (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          ) : (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrapper>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrapper>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : params.add,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrapper>\n                    <StyledProfileNameBioWrapper>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledShareProfileHolder>\n                        {renderLinks}\n                        <StyledShareProfileWrapper ref={shareButtonRef}>\n                          <StyledShareProfileButton\n                            onClick={shareButtonHandler}\n                            isShare={isShare}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            <HideOnScreen size=\"lg\">\n                              Share profile{' '}\n                              {!navigator['share'] && (\n                                <StyledDropDownIcon src={DropDownIcon} />\n                              )}\n                            </HideOnScreen>\n                          </StyledShareProfileButton>\n                          {isShare && (\n                            <StyledShareDropDown>\n                              <ShareLink\n                                href={`https://twitter.com/intent/tweet?url=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Twitter} alt=\"Twitter\" />\n                                Twitter\n                              </ShareLink>\n                              {/* <ShareLink>\n                                <img src={Instagram} alt=\"Instagram\" />\n                                Instagram\n                              </ShareLink> */}\n                              <ShareLink\n                                href={`https://www.facebook.com/sharer.php?u=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Facebook} alt=\"Facebook\" />\n                                Facebook\n                              </ShareLink>\n                              {canCopy && (\n                                <ShareLink\n                                  as=\"button\"\n                                  onClick={() =>\n                                    copyText(\n                                      `${window.location.origin}/#${pathname}`,\n                                    )\n                                  }\n                                >\n                                  <img src={Link} alt=\"Copy Link\" />\n                                  {copied ? 'Copied!' : 'Copy Link'}\n                                </ShareLink>\n                              )}\n                            </StyledShareDropDown>\n                          )}\n                        </StyledShareProfileWrapper>\n                      </StyledShareProfileHolder>\n                    </StyledProfileNameBioWrapper>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{params.add}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrapper>\n              {profile &&\n                account &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton onClick={() => {}}>\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n              <StyledAssetsWrapper>\n                {profile && profile.issuedAssets.length > 0 ? (\n                  renderIssuedAssetsPagination\n                ) : (\n                  <></>\n                )}\n                {profile &&\n                  profile.ownedAssets.length > 0 &&\n                  renderOwnedAssetsPagination}\n              </StyledAssetsWrapper>\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<boolean>(false);\n\n  const copyText = (text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied((copied) => !copied);\n    setTimeout(() => {\n      setCopied((copied) => !copied);\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n"],"sourceRoot":""}