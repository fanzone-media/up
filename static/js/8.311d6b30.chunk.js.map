{"version":3,"sources":["utility/permissions.ts","boot/types.ts","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/TransferCardModal/TransferCardsModal.tsx","pages/ProfileDetails/ProfileDetails.tsx","hooks/useCopyText/useCopyText.ts"],"names":["getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","find","x","address","toLowerCase","permissions","StringBoolean","StyledProfileDetails","styled","div","StyledProfileDetailsContent","StyledProfileNotFound","h1","StyledProfileCoverImg","img","StyledProfileInfoWrapper","StyledProfileInfo1","StyledProfileInfo1Content","theme","screen","md","StyledProfileMediaWrapper","StyledProfileMedia","StyledProfileAddress","p","font","weight","light","StyledProfileNameBioWrapper","lg","StyledProfileName","h2","bolder","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledShareProfileWrapper","StyledShareIcon","StyledDropDownIcon","StyledAssetsWrapper","a","expand","button","StyledLinkIconWrapper","StyledLinkIcon","StyledOpenTransferModalButton","StyledShareProfileButton","isShare","StyledShareDropDown","animation","cardrender","ShareLink","attrs","target","StyledProfileImageWrapper","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","pulseAnimate","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","params","useParams","explorer","getChainExplorer","network","src","href","exploreUrl","rel","icon","UniversalProfileIcon","ProfileEditModal","isOpen","signer","onClose","profile","useState","error","setError","loading","setLoading","profile_image","background_image","name","bio","editProfileForm","setEditProfileForm","changeHandler","event","currentTarget","value","imageChangeHandler","files","data","useMemo","length","description","backgroundImage","width","height","hashFunction","url","profileImage","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","catch","finally","setUniversalProfileData","add","color","label","type","map","item","i","onChange","accept","onClick","TransferCardsModal","onDismiss","toAddress","cardAddress","tokenId","transferCardForm","setTransferCardForm","useTransferLsp8Token","transferCard","transfering","key","htmlFor","id","defaultValue","ownedAssets","assetAddress","ownedAsset","tokenIds","topMargin","ProfileDetails","dispatch","useAppDispatch","pathname","useLocation","useAccount","account","useSigner","openEditProfileModal","setOpenEditProfileModal","useSelector","state","selectUserById","userData","profileError","profileStatus","status","setIsShare","copied","setCopied","copyText","text","window","navigator","clipboard","writeText","setTimeout","canCopy","useCopyText","isTablet","useMediaQuery","permissionsSet","call","TRUE","canTransfer","canSetData","useEffect","currentProfile","fetchProfileByAddress","usePagination","issuedAssetsRange","range","setIssuedAssetsRange","setRange","ownedAssetsRange","setOwnedAssetsRange","issuedCards","selectAllCardItems","filter","issuedAssets","slice","some","issuedCardStatus","cards","issuedStatus","fetchIssuedCards","addresses","ownedCardStatus","ownedStatus","ownedCards","fetchOwnedCards","asset","renderLinks","links","link","linkTitle","title","Twitter","Instagram","Facebook","Globe","shareButtonRef","useRef","useOutsideClick","shareButtonHandler","useCallback","share","location","origin","console","log","scrollTo","useModal","onDismissTransferCardsModal","onPresentTransferCardsModal","handlePresent","alt","makeBlockie","ref","ShareIcon","size","DropDownIcon","as","Link","components","digitalCard","MetaCard","nbrOfAllComponents","setComponentsRange"],"mappings":"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","file":"static/js/8.311d6b30.chunk.js","sourcesContent":["import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import { ICardState } from '../features/cards/types';\nimport { IUserDataSliceState } from '../features/profiles/types';\nimport { API } from '../services/api';\n\nexport type ThunkExtra = {\n  api: API;\n};\n\nexport type RootState = {\n  userData: IUserDataSliceState;\n  cards: ICardState;\n};\n\nexport type NetworkName = 'l14' | 'mumbai' | 'polygon' | 'ethereum';\n\nexport type AsyncReturnType<T extends (...args: any) => Promise<any>> =\n  T extends (...args: any) => Promise<infer R> ? R : any;\n\nexport type UnpackedType<T> = T extends (infer U)[] ? U : T;\n\nexport enum StringBoolean {\n  FALSE = '0',\n  TRUE = '1',\n}\n","import styled from 'styled-components';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 1.875rem;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 15em;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 1.25em 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    --profile-image-size: 11.25em;\n    --outer-columns-width: calc(\n      50% - 2.5em - calc(var(--profile-image-size) / 2)\n    );\n    align-items: center;\n    display: grid;\n    width: 1440px;\n    grid-template-columns:\n      var(--outer-columns-width) var(--profile-image-size)\n      var(--outer-columns-width);\n    grid-column-gap: 2.5em;\n    padding: 1.25em 2.5em;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrapper = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${({ theme }) => theme.screen.md} {\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    left: 50%;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  font-weight: ${({ theme }) => theme.font.weight.light};\n  letter-spacing: 1.5px;\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: min(0.875rem, 3.5vw);\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(100% - 12.85em);\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const StyledProfileNameBioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 0.25em;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 1.0625rem;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin: auto 0 auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    font-size: 1.125rem;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileBioWrapper = styled.div`\n  margin: auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(50% - 5.625em);\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin-right: 2.5em;\n  column-gap: 1.5em;\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${({ theme }) => theme.screen.md} {\n    max-width: 1440px;\n    padding: 0 2.5em;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 1.25em 0 1.25em 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  row-gap: 1.35em;\n  margin-top: 1.35em;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    margin-left: auto;\n    margin-top: 0;\n  }\n`;\n\nexport const StyledShareProfileWrapper = styled.div`\n  position: relative;\n  overflow: visible;\n  width: max-content;\n`;\n\nexport const StyledShareIcon = styled.img`\n  height: 0.875em;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  display: inline-block;\n  margin-left: 0.5em;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0 2.5em;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIconWrapper = styled.a`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0 auto;\n  }\n`;\n\nexport const StyledShareProfileButton = styled.button<{ isShare: boolean }>`\n  align-items: center;\n  column-gap: 1.25em;\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  padding: 0.5em 0.75em;\n  font-size: 0.9375rem;\n  overflow: hidden;\n  margin: auto 0;\n  display: flex;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0;\n    right: 0;\n    border-bottom-color: rgba(255, 255, 255, 0.15);\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n\n  ${({ isShare }) =>\n    isShare &&\n    `\n    border-bottom-color: transparent;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n`;\n\nexport const StyledShareDropDown = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 100%;\n  background-color: rgba(59, 59, 59, 1);\n  border-width: 0px 1px 1px;\n  border-color: rgba(255, 255, 255, 0.15);\n  border-style: solid;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 10;\n  animation: ${({ theme }) => theme.animation.cardrender} 0.2s linear;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-top-width: 1px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    top: calc(100% + 0.5em);\n    width: max-content;\n  }\n`;\n\nexport const ShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  align-items: center;\n  display: flex;\n  column-gap: 1.25em;\n  padding: 0.5em 0.75em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: max-content;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\n\nexport const StyledProfileImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n`;\n\nexport const StyledProfileImg = styled.img`\n  border-radius: 50%;\n  height: calc(100% - 1em);\n  inset: 0;\n  margin: auto;\n  position: absolute;\n  width: auto;\n`;\n\nexport const StyledBlockieImg = styled.img`\n  align-items: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  z-index: 10;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  height: calc(100% - 1em);\n  inset: 0;\n  position: absolute;\n  width: auto;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrapper,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const explorer = getChainExplorer(params.network);\n  return (\n    <StyledProfileImageWrapper>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {params.network === 'l14' && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrapper>\n  );\n};\n","import { Signer } from 'ethers';\nimport React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../../boot/types';\nimport { Modal } from '../../../components';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n} from './styles';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  onClose: () => void;\n  signer: Signer;\n  profile: IProfile;\n}\n\ntype formInput = {\n  profile_image: File | null;\n  background_image: File | null;\n  name: string;\n  bio: string;\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  isOpen,\n  onClose,\n  signer,\n  profile,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profile_image: null,\n    background_image: null,\n    name: '',\n    bio: '',\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      setEditProfileForm({\n        ...editProfileForm,\n        [event.currentTarget.name]: event.currentTarget.files[0],\n      });\n    }\n  };\n\n  const fields = [\n    { name: 'background_image', label: 'Background Image', type: 'file' },\n    { name: 'profile_image', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name:\n        editProfileForm.name.length > 0 ? editProfileForm.name : profile.name,\n      description:\n        editProfileForm.bio.length > 0\n          ? editProfileForm.bio\n          : profile.description,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.background_image !== null\n              ? editProfileForm.background_image\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.profile_image !== null\n              ? editProfileForm.profile_image\n              : profile.profileImage,\n        },\n      ],\n    }),\n    [\n      editProfileForm.background_image,\n      editProfileForm.bio,\n      editProfileForm.name,\n      editProfileForm.profile_image,\n      profile.backgroundImage,\n      profile.description,\n      profile.name,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n    if (profile.isOwnerKeyManager) {\n      await LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n        profile.owner,\n        profile.address,\n        data,\n        signer,\n      )\n        .catch((error) => {\n          setError(true);\n          // onClose();\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      await LSP3ProfileApi.setUniversalProfileData(params.add, data, signer)\n        .catch((error) => {\n          setError(true);\n          // onClose();\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  return isOpen ? (\n    <Modal>\n      {!loading && !error ? (\n        <StyledEditProfileModalContent>\n          {fields.map((item, i) => (\n            <StyledInputRow key={i}>\n              <StyledLabel>{item.label}</StyledLabel>\n              {item.type === 'textarea' && (\n                <StyledTextAreaInput\n                  name={item.name}\n                  onChange={changeHandler}\n                />\n              )}\n              {(item.type === 'text' || item.type === 'file') && (\n                <StyledInput\n                  name={item.name}\n                  type={item.type}\n                  onChange={\n                    item.type === 'file' ? imageChangeHandler : changeHandler\n                  }\n                  accept={item.type === 'file' ? '.jpg, .png' : ''}\n                />\n              )}\n            </StyledInputRow>\n          ))}\n          <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n        </StyledEditProfileModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait ....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  ) : (\n    <></>\n  );\n};\n","import React, { useState } from 'react';\nimport { Modal } from '../../../components';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n} from '../ProfileEditModal/styles';\nimport { StyledSelectInput, StyledTransferCardModalContent } from './styles';\nimport { Address } from '../../../utils/types';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IOwnedAssets } from '../../../services/models';\n\ninterface IProps {\n  profile: {\n    address: Address;\n    owner: Address;\n    isOwnerKeyManager: boolean;\n    ownedAssets: IOwnedAssets[];\n  };\n  onDismiss: () => void;\n}\n\ntype formInput = {\n  toAddress: string;\n  cardAddress: string;\n  tokenId: number | null;\n};\n\nexport const TransferCardsModal: React.FC<IProps> = ({\n  profile,\n  onDismiss,\n}: IProps) => {\n  const [transferCardForm, setTransferCardForm] = useState<formInput>({\n    toAddress: '',\n    cardAddress: '',\n    tokenId: null,\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (\n      event.currentTarget.name === 'cardAddress' &&\n      event.currentTarget.value !== transferCardForm.cardAddress\n    ) {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n        tokenId: null,\n      });\n    } else {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n      });\n    }\n  };\n\n  const { transferCard, transfering, error } = useTransferLsp8Token(\n    transferCardForm.cardAddress,\n    transferCardForm.toAddress,\n    transferCardForm.tokenId,\n    profile,\n    onDismiss,\n  );\n\n  const fields = [\n    { name: 'toAddress', label: 'To', type: 'text' },\n    { name: 'cardAddress', label: 'Card Name', type: 'select' },\n    { name: 'tokenId', label: 'Token Id', type: 'select' },\n  ];\n\n  return (\n    <Modal>\n      {!transfering && !error ? (\n        <StyledTransferCardModalContent>\n          {fields.map((item, key) => (\n            <StyledInputRow key={key}>\n              <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n              {item.type === 'text' && (\n                <StyledInput\n                  id={item.name}\n                  name={item.name}\n                  type={item.type}\n                  onChange={changeHandler}\n                />\n              )}\n              {item.type === 'select' && item.name === 'cardAddress' && (\n                <StyledSelectInput\n                  name={item.name}\n                  onChange={changeHandler}\n                  defaultValue={profile.ownedAssets[0].assetAddress}\n                >\n                  <option>Token address</option>\n                  {profile.ownedAssets.map((ownedAsset, key) => (\n                    <option\n                      key={key}\n                      value={ownedAsset.assetAddress}\n                      defaultValue={ownedAsset.assetAddress}\n                    >\n                      {ownedAsset.assetAddress}\n                    </option>\n                  ))}\n                </StyledSelectInput>\n              )}\n              {item.type === 'select' && item.name === 'tokenId' && (\n                <StyledSelectInput name={item.name} onChange={changeHandler}>\n                  <option>Select token id</option>\n                  {profile.ownedAssets\n                    .find(\n                      (ownedAsset) =>\n                        ownedAsset.assetAddress ===\n                        transferCardForm.cardAddress,\n                    )\n                    ?.tokenIds.map((tokenId, key) => (\n                      <option key={key} value={tokenId}>\n                        {tokenId}\n                      </option>\n                    ))}\n                </StyledSelectInput>\n              )}\n            </StyledInputRow>\n          ))}\n          <StyledModalButtonsWrapper topMargin>\n            <StyledModalButton onClick={transferCard}>\n              Transfer Card\n            </StyledModalButton>\n          </StyledModalButtonsWrapper>\n        </StyledTransferCardModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait for transaction\n                success....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  );\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState, StringBoolean } from '../../boot/types';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { HideOnScreen, Pagination } from '../../components';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrapper,\n  StyledDropDownIcon,\n  StyledLinkIconWrapper,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrapper,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrapper,\n  StyledProfileName,\n  StyledProfileNameBioWrapper,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHolder,\n  StyledShareProfileButton,\n  StyledShareDropDown,\n  ShareLink,\n  StyledShareProfileWrapper,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  Link,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n  currentProfile,\n  fetchProfileByAddress,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport {\n  fetchIssuedCards,\n  fetchOwnedCards,\n  selectAllCardItems,\n} from '../../features/cards';\nimport { ICard } from '../../services/models';\nimport { MetaCard } from '../../features/cards/MetaCard';\nimport { StyledProfileHeading, StyledProfilesHeader } from '../Profiles/styles';\nimport { TransferCardsModal } from './TransferCardModal/TransferCardsModal';\nimport { useModal } from '../../hooks/useModal';\nimport { usePagination } from '../../hooks/usePagination';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst ProfileDetails: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  const [{ data: account }] = useAccount();\n  const [{ data: signer }] = useSigner();\n  const [openEditProfileModal, setOpenEditProfileModal] =\n    useState<boolean>(false);\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[params.network], params.add),\n  );\n\n  const profileError = useSelector(\n    (state: RootState) => state.userData[params.network].error,\n  );\n\n  const profileStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const [isShare, setIsShare] = useState<boolean>(false);\n\n  const { copied, copyText, canCopy } = useCopyText();\n\n  const isTablet = useMediaQuery(theme.screen.md);\n\n  const [canTransfer, canSetData] = useMemo(() => {\n    if (!profile || !account) return [false, false];\n    const permissionsSet = getAddressPermissionsOnUniversalProfile(\n      profile.permissionSet,\n      account.address,\n    );\n    return [\n      permissionsSet?.permissions.call === StringBoolean.TRUE,\n      permissionsSet?.permissions.setData === StringBoolean.TRUE,\n    ];\n  }, [account, profile]);\n\n  useEffect(() => {\n    dispatch(currentProfile(params.add));\n    if (!profile)\n      dispatch(\n        fetchProfileByAddress({ address: params.add, network: params.network }),\n      );\n  }, [dispatch, params.add, params.network, profile]);\n\n  const { range: issuedAssetsRange, setRange: setIssuedAssetsRange } =\n    usePagination();\n  const { range: ownedAssetsRange, setRange: setOwnedAssetsRange } =\n    usePagination();\n\n  const issuedCards = useSelector(selectAllCardItems).filter((item) =>\n    profile?.issuedAssets\n      .slice(issuedAssetsRange[0], issuedAssetsRange[1] + 1)\n      .some((i) => i === item.address),\n  );\n\n  const issuedCardStatus = useSelector(\n    (state: RootState) => state.cards.issuedStatus,\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.issuedAssets.length === 0) return;\n    dispatch(\n      fetchIssuedCards({\n        addresses: profile.issuedAssets.slice(\n          issuedAssetsRange[0],\n          issuedAssetsRange[1] + 1,\n        ),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, issuedAssetsRange]);\n\n  const ownedCardStatus = useSelector(\n    (state: RootState) => state.cards.ownedStatus,\n  );\n\n  const ownedCards = useSelector(selectAllCardItems).filter((item) =>\n    profile?.ownedAssets\n      .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1)\n      .some((i) => i.assetAddress === item.address),\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.ownedAssets.length === 0) return;\n    dispatch(\n      fetchOwnedCards({\n        addresses: profile.ownedAssets\n          .map((asset) => asset.assetAddress)\n          .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, ownedAssetsRange]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link) => {\n        const linkTitle = link.title.toLowerCase();\n        return (\n          <StyledProfileLinks>\n            <StyledLinkIconWrapper\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              key={link.url}\n            >\n              <StyledLinkIcon\n                src={\n                  linkTitle === 'twitter'\n                    ? Twitter\n                    : linkTitle === 'instagram'\n                    ? Instagram\n                    : linkTitle === 'facebook'\n                    ? Facebook\n                    : Globe\n                }\n              />\n            </StyledLinkIconWrapper>\n          </StyledProfileLinks>\n        );\n      }),\n    [profile?.links],\n  );\n\n  const shareButtonRef = useRef(null);\n  useOutsideClick(shareButtonRef, () => isShare && setIsShare(false));\n\n  const shareButtonHandler = useCallback(async () => {\n    try {\n      await navigator.share({\n        title: `Fanzone.io Universal Profile – ${profile && profile.address}`,\n        text: `This is Fanzone.io's Universal Profile page for ${\n          profile && profile.address\n        }`,\n        url: `${window.location.origin}/#${pathname}`,\n      });\n      console.log('shared successfully');\n    } catch (err) {\n      setIsShare((isShare) => !isShare);\n      console.error('Error: ' + err);\n    }\n  }, [pathname, profile]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.add, profile]);\n\n  const {\n    handlePresent: onPresentTransferCardsModal,\n    onDismiss: onDismissTransferCardsModal,\n  } = useModal(\n    <TransferCardsModal\n      profile={{\n        address: profile?.address ? profile.address : '',\n        owner: profile?.owner ? profile.owner : '',\n        isOwnerKeyManager: profile?.isOwnerKeyManager\n          ? profile.isOwnerKeyManager\n          : false,\n        ownedAssets: profile?.ownedAssets ? profile.ownedAssets : [],\n      }}\n      onDismiss={() => onDismissTransferCardsModal()}\n    />,\n    'Cards Transfer Modal',\n    'Transfer Card',\n  );\n\n  return (\n    <StyledProfileDetails>\n      {signer &&\n        profile &&\n        account &&\n        (canSetData ||\n          profile.owner.toLowerCase() === account.address.toLowerCase()) && (\n          <ProfileEditModal\n            isOpen={openEditProfileModal}\n            onClose={() => setOpenEditProfileModal(false)}\n            signer={signer}\n            profile={profile}\n          />\n        )}\n      {profileStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {profileError ? (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          ) : (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrapper>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrapper>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : params.add,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrapper>\n                    <StyledProfileNameBioWrapper>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledShareProfileHolder>\n                        {renderLinks}\n                        <StyledShareProfileWrapper ref={shareButtonRef}>\n                          <StyledShareProfileButton\n                            onClick={shareButtonHandler}\n                            isShare={isShare}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            <HideOnScreen size=\"lg\">\n                              Share profile{' '}\n                              {!navigator['share'] && (\n                                <StyledDropDownIcon src={DropDownIcon} />\n                              )}\n                            </HideOnScreen>\n                          </StyledShareProfileButton>\n                          {isShare && (\n                            <StyledShareDropDown>\n                              <ShareLink\n                                href={`https://twitter.com/intent/tweet?url=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Twitter} alt=\"Twitter\" />\n                                Twitter\n                              </ShareLink>\n                              {/* <ShareLink>\n                                <img src={Instagram} alt=\"Instagram\" />\n                                Instagram\n                              </ShareLink> */}\n                              <ShareLink\n                                href={`https://www.facebook.com/sharer.php?u=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Facebook} alt=\"Facebook\" />\n                                Facebook\n                              </ShareLink>\n                              {canCopy && (\n                                <ShareLink\n                                  as=\"button\"\n                                  onClick={() =>\n                                    copyText(\n                                      `${window.location.origin}/#${pathname}`,\n                                    )\n                                  }\n                                >\n                                  <img src={Link} alt=\"Copy Link\" />\n                                  {copied ? 'Copied!' : 'Copy Link'}\n                                </ShareLink>\n                              )}\n                            </StyledShareDropDown>\n                          )}\n                        </StyledShareProfileWrapper>\n                      </StyledShareProfileHolder>\n                    </StyledProfileNameBioWrapper>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{params.add}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrapper>\n              <StyledAssetsWrapper>\n                {profile && profile.issuedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Issued Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={issuedCardStatus}\n                      components={issuedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.issuedAssets.length}\n                      setComponentsRange={setIssuedAssetsRange}\n                    />\n                  </>\n                )}\n                {/* @TODO: Change names of components StyledProfilesHeader and StyledProfileHeading */}\n                {profile && profile.ownedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Owned Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={ownedCardStatus}\n                      components={ownedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.ownedAssets.length}\n                      setComponentsRange={setOwnedAssetsRange}\n                    />\n                  </>\n                )}\n              </StyledAssetsWrapper>\n              {profile &&\n                account &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton\n                    onClick={onPresentTransferCardsModal}\n                  >\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<boolean>(false);\n\n  const copyText = (text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied((copied) => !copied);\n    setTimeout(() => {\n      setCopied((copied) => !copied);\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n"],"sourceRoot":""}