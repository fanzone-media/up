{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","pages/AssetDetails/ProfilePreview/styles.ts","pages/AssetDetails/ProfilePreview/ProfilePreview.tsx","features/profiles/ProfileCard/ProfileCard.tsx","hooks/usePagination/usePagination.ts","hooks/useProfile/useProfile.ts","components/ShareReferModal/styles.ts","components/ShareReferModal/ShareReferModal.tsx","hooks/useCopyText/useCopyText.ts","hooks/useQueryParams/useQueryParams.ts","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/TransferCardTokenIdModal/TransferCardTokenIdModal.tsx","pages/AssetDetails/SelectMintModalContent/styles.ts","pages/AssetDetails/SelectMintModalContent/SelectMintModalContent.tsx","pages/AssetDetails/components/CardInfoAccordion/styles.ts","pages/AssetDetails/components/CardInfoAccordion/CardInfoAccordion.tsx","pages/AssetDetails/AssetDetails.tsx","hooks/useOwnedMints/useOwnedMints.ts","hooks/useMintNavigation/useMintNavigation.ts"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","PreviewImage","ImageWrapper","ProfileInfo","ProfileName","ProfileError","ProfilePreview","profile","profileError","isProfileLoading","color","width","height","src","profileImage","name","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","data-tip","tokenIds","data-for","length","polygon","alt","makeBlockie","usePagination","useState","range","setRange","useProfile","profileCache","setProfileCache","setProfile","profileAddressError","setProfileAddressError","isLoading","setIsLoading","useCallback","profileAddress","cahcedProfile","LSP3ProfileApi","getProfile","then","catch","error","message","finally","StyledShareReferModalContent","StyledShareMessage","StyledSeparatorContainer","StyledDivider","span","StyledDivText","StyledShareViaLabel","StyledShareOptionsContainer","StyledShareLink","a","attrs","target","StyledInputError","ShareReferModal","pathName","onDismiss","getItems","useLocalStorage","selectInputRef","useRef","copied","setCopied","canCopy","window","navigator","clipboard","copyText","key","text","writeText","setTimeout","useCopyText","savedProfiles","LOCAL_STORAGE_KEYS","UP","savedProfilesAddresses","Object","keys","referrerAddress","setReferrerAddress","customReferrerAddress","setCustomReferrerAddress","inputError","setInputError","changeHandler","event","currentTarget","value","getReferrer","isAddress","ref","defaultValue","onChange","map","item","InputField","label","onBlurHandler","variant","onClick","current","href","location","origin","Twitter","title","Facebook","as","useQueryParams","search","useLocation","URLSearchParams","StyledTabsHeader","StyledTabsLabel","button","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","i","enableToggle","content","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","status","fetchHolders","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","slice","some","useEffect","STATUS","LOADING","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","md","StyledAccordionHeader","$expanded","StyledIssuerOwnerWrapper","StyledCreatorsContainer","StyledIssuerContainer","StyledOwnerContainer","StyledHeader","StyledHeaderTitle","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","TransferCardTokenIdModal","cardAddress","tokenId","toAddress","setToAddress","destinationProfile","useTransferLsp8Token","transferCard","transferState","resetState","align","placeholder","disabled","ethers","TransactionStateWindow","transactionMessages","loading","mainHeading","successful","description","failed","callback","StyledSelectMintModalContent","StyledSelectMintListHeader","StyledSelectMintListHeaderContent","h4","StyledSelectMintList","StyledSelectMintListContent","StyledListMint","StyledListPrice","SelectMintModalContent","ownedTokenIds","markets","whiteListedTokens","onSelect","onSelectCallback","renderMintList","market","Number","token","tokenAddress","acceptedToken","indexOf","displayPrice","minimumAmount","toString","decimals","symbol","StyledCardInfo","StyledCardInfoAccordion","StyledCardInfoContainer","StyledCardInfoLabel","StyledCardInfoValue","StyledCardStandardLabel","CardInfoAccordion","assetId","isDesktop","useMediaQuery","cardInfo","supportedInterface","tokenSupplyCap","totalSupply","valueType","toUpperCase","AssetDetails","currentIndex","setCurrentIndex","mintIdInputRef","history","useHistory","pathname","query","setReferrer","wasActiveProfile","me","allProfiles","selectUserIds","selectCardById","cards","owner","selectUserById","cardError","fetchCard","cardStatus","creatorsStatus","fetchMetaData","fetchCreators","activeProfile","useActiveProfile","currentUsersPermissions","useCurrentUserPermissions","useFetchMarkets","useUrlParams","metaDataStatus","currentTokenId","index","FAILED","useOwnedMints","currentMintMarket","useMintMarket","lsp8MetaData","IDLE","fetchMetaDataForTokenId","nextMint","nextIndex","push","previousMint","previousIndex","mintChangeHelper","mint","useMintNavigation","ownerStatus","fetchAllProfiles","creators","useModal","onDismissSelectMintModal","onPresentSelectMintModal","handlePresent","parseInt","onDismissTransferCardModal","onPresentTransferCardModal","onDismissShareModal","onPresentShareModal","fetchProfileByAddress","addresses","forEach","includes","fetchAssetCreator","resetUserDataSliceInitialState","resetCardsSliceInitialState","get","scrollTo","fetchOwnerAddressOfTokenId","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","AssetActions","marketForTokenId","renderCardProperties","attributes","reverse","trait_type","renderContractDetailHeader","call","TransferIcon","ReloadIcon","ShareIcon","getHeroImgSrc","LSP4Metadata","images","image","startsWith","Utils","convertImageURL","url","getOtherImgs","BackwardsIcon","min","max","onKeyPress","blur","onBlur","val","ForwardsIcon","undefined","assets","fileType","controls","animation_url","CardMarket","cardMarkets"],"mappings":"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","file":"static/js/5.9f2ad967.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const PreviewImage = styled.img`\n  max-width: 5em;\n  height: auto;\n  border-radius: 0.3em;\n  margin-bottom: 0.5em;\n`;\n\nexport const ImageWrapper = styled.div`\n  text-align: center;\n`;\n\nexport const ProfileInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 5px;\n`;\n\nexport const ProfileName = styled.p`\n  padding: 1px 2px;\n  border: 1px solid #ffffff80;\n  border-radius: 5px;\n`;\n\nexport const ProfileError = styled.p`\n  color: #cc0000;\n`;\n","import React from 'react';\nimport { Puff } from 'react-loader-spinner';\nimport { IProfile } from '../../../services/models';\nimport {\n  PreviewImage,\n  ProfileError,\n  ProfileInfo,\n  ProfileName,\n  ImageWrapper,\n} from './styles';\n\ninterface IProps {\n  profile: IProfile | null;\n  profileError: string;\n  isProfileLoading: boolean;\n}\n\nexport const ProfilePreview: React.FC<IProps> = ({\n  profile,\n  profileError,\n  isProfileLoading,\n}) => {\n  return (\n    <ProfileInfo>\n      {isProfileLoading && <Puff color=\"#ed7a2db3\" width={30} height={30} />}\n      {!isProfileLoading && profileError && (\n        <ProfileError>{profileError}</ProfileError>\n      )}\n      {!isProfileLoading && profile && (\n        <ImageWrapper>\n          <PreviewImage src={profile.profileImage} />\n          <ProfileName>{profile.name}</ProfileName>\n        </ImageWrapper>\n      )}\n    </ProfileInfo>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/up/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import { useState, useCallback } from 'react';\nimport { NetworkName } from '../../boot/types';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IProfile } from '../../services/models';\n\ninterface ProfileCache {\n  [address: string]: IProfile;\n}\n\ntype Result = [\n  IProfile | null,\n  string,\n  (cardAddress: string, network: NetworkName) => void,\n  boolean,\n];\n\nexport const useProfile = (): Result => {\n  const [profileCache, setProfileCache] = useState<ProfileCache>({});\n  const [profile, setProfile] = useState<IProfile | null>(null);\n  const [profileAddressError, setProfileAddressError] = useState('');\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getProfile = useCallback(\n    (profileAddress, network) => {\n      setProfileAddressError('');\n      const cahcedProfile = profileCache[profileAddress];\n      if (cahcedProfile) {\n        setProfile(cahcedProfile);\n        return;\n      }\n\n      setIsLoading(true);\n\n      LSP3ProfileApi.getProfile(profileAddress, network)\n        .then((profile) => {\n          if (!profile) {\n            setProfileAddressError('Profile not found');\n          }\n\n          setProfileAddressError('');\n\n          setProfileCache({\n            ...profileCache,\n            [profileAddress]: profile,\n          });\n\n          setProfile(profile!);\n        })\n        .catch((error) => {\n          setProfile(null);\n          setProfileAddressError(error.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    },\n    [profileCache, profile, profileAddressError, isLoading],\n  );\n\n  return [profile, profileAddressError, getProfile, isLoading];\n};\n","import styled from 'styled-components';\n\nexport const StyledShareReferModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 1em;\n`;\n\nexport const StyledShareMessage = styled.p``;\n\nexport const StyledSeparatorContainer = styled.div`\n  display: flex;\n  width: 100%;\n  column-gap: 0.5em;\n`;\n\nexport const StyledDivider = styled.span`\n  border: 0.01em solid rgba(153, 153, 153, 1);\n  margin: auto 0;\n  width: 100%;\n`;\n\nexport const StyledDivText = styled.p``;\n\nexport const StyledShareViaLabel = styled.p``;\n\nexport const StyledShareOptionsContainer = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  display: flex;\n  align-items: center;\n  column-gap: 0.25em;\n`;\n\nexport const StyledInputError = styled.p`\n  color: red;\n`;\n","import { useRef, useState } from 'react';\nimport { isAddress } from 'web3-utils';\nimport { Facebook, Link, Twitter } from '../../assets';\nimport { NetworkName } from '../../boot/types';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport {\n  LOCAL_STORAGE_KEYS,\n  ProfilePermissionsLocal,\n  useLocalStorage,\n} from '../../hooks/useLocalStorage';\nimport {\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from '../../pages/AssetDetails/BuyCardModal/styles';\nimport { InputField } from '../InputField';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledDivider,\n  StyledDivText,\n  StyledInputError,\n  StyledSeparatorContainer,\n  StyledShareLink,\n  StyledShareMessage,\n  StyledShareOptionsContainer,\n  StyledShareReferModalContent,\n  StyledShareViaLabel,\n} from './styles';\n\ninterface IProps {\n  network: NetworkName;\n  pathName: string;\n  onDismiss: () => void;\n}\n\nexport const ShareReferModal = ({ network, pathName, onDismiss }: IProps) => {\n  const { getItems } = useLocalStorage();\n  const selectInputRef = useRef<HTMLSelectElement>(null);\n  const { copied, copyText } = useCopyText();\n  const savedProfiles = getItems(\n    LOCAL_STORAGE_KEYS.UP,\n  ) as ProfilePermissionsLocal;\n  const savedProfilesAddresses =\n    savedProfiles && savedProfiles[network]\n      ? Object.keys(savedProfiles[network])\n      : null;\n  const [referrerAddress, setReferrerAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [customReferrerAddress, setCustomReferrerAddress] = useState<boolean>(\n    savedProfilesAddresses ? false : true,\n  );\n  const [inputError, setInputError] = useState<string>('');\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setReferrerAddress(event.currentTarget.value);\n  };\n\n  const getReferrer = () => {\n    return isAddress(referrerAddress) ? `?referrer=${referrerAddress}` : '';\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    !isAddress(referrerAddress)\n      ? setInputError('wrong address')\n      : setInputError('');\n  };\n\n  return (\n    <StyledShareReferModalContent>\n      <StyledShareMessage>\n        Share this link and participate in 1% WETH market sales that came\n        through you\n      </StyledShareMessage>\n      {savedProfilesAddresses && (\n        <StyledSelectInputContainer>\n          <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n          <StyledUpAddressSelectInput\n            ref={selectInputRef}\n            defaultValue={savedProfilesAddresses[0]}\n            onChange={changeHandler}\n          >\n            {savedProfilesAddresses.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </StyledUpAddressSelectInput>\n        </StyledSelectInputContainer>\n      )}\n      {savedProfilesAddresses && (\n        <StyledSeparatorContainer>\n          <StyledDivider />\n          <StyledDivText>Or</StyledDivText>\n          <StyledDivider />\n        </StyledSeparatorContainer>\n      )}\n      {customReferrerAddress && (\n        <InputField\n          name=\"otherAddress\"\n          label=\"Address\"\n          type=\"text\"\n          changeHandler={changeHandler}\n          onBlurHandler={onBlurHandler}\n        />\n      )}\n      {inputError && customReferrerAddress && (\n        <StyledInputError>{inputError}</StyledInputError>\n      )}\n      {savedProfilesAddresses && (\n        <StyledModalButton\n          variant=\"gray\"\n          onClick={() => {\n            if (customReferrerAddress) {\n              selectInputRef.current &&\n                setReferrerAddress(selectInputRef.current.value);\n            } else {\n              setReferrerAddress('');\n            }\n            setCustomReferrerAddress(!customReferrerAddress);\n          }}\n        >\n          {customReferrerAddress ? 'cancel input' : 'use other address'}\n        </StyledModalButton>\n      )}\n      <StyledShareViaLabel>Share Via: </StyledShareViaLabel>\n      <StyledShareOptionsContainer>\n        <StyledShareLink\n          href={`https://twitter.com/intent/tweet?url=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Twitter} alt=\"Twitter\" title=\"twitter\" />\n        </StyledShareLink>\n        <StyledShareLink\n          href={`https://www.facebook.com/sharer.php?u=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Facebook} alt=\"Facebook\" title=\"facebook\" />\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'link',\n              `${window.location.origin}/#${pathName}${getReferrer()}`,\n            )\n          }\n        >\n          <img src={Link} alt=\"Copy Link\" title=\"copy link\" />\n          {copied && copied['link'] ? 'Copied!' : 'Copy Link'}\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'embed',\n              `<iframe src=\"${window.location.origin}/#${pathName}\" title=\"Fanzone\"></iframe>`,\n            )\n          }\n        >\n          {`</>`} {copied && copied['embed'] ? 'Copied!' : 'Copy Embed'}\n        </StyledShareLink>\n      </StyledShareOptionsContainer>\n      <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n        Cancel\n      </StyledModalButton>\n    </StyledShareReferModalContent>\n  );\n};\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<{ [key: string]: boolean }>();\n\n  const copyText = (key: string, text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied({ ...copied, [key]: true });\n    setTimeout(() => {\n      setCopied({ ...copied, [key]: false });\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const useQueryParams = () => {\n  const { search } = useLocation();\n\n  return useMemo(() => new URLSearchParams(search), [search]);\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status.fetchHolders,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledIssuerOwnerWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  padding: 0.5em 1em;\n`;\n\nexport const StyledOwnerContainer = styled.div`\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n","import { ReactNode, useState } from 'react';\nimport {\n  StyledAccordionHeader,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n  StyledIssuerOwnerWrapper,\n  StyledOwnerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper>\n      <StyledIssuerOwnerWrapper>\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          </StyledHeader>\n          {issuerContent}\n        </StyledIssuerContainer>\n        {ownerContent && (\n          <StyledOwnerContainer>\n            <StyledHeader $expanded={expand}>\n              <StyledHeaderTitle>Owner</StyledHeaderTitle>\n            </StyledHeader>\n            {ownerContent}\n          </StyledOwnerContainer>\n        )}\n      </StyledIssuerOwnerWrapper>\n\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { ProfilePreview } from '../ProfilePreview';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport {\n  StyledModalButtonsWrapper,\n  StyledModalButton,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IProfile } from '../../../services/models';\nimport { useProfile } from '../../../hooks/useProfile';\n\ninterface TransferCardTokenIdModalProps {\n  cardAddress: string;\n  tokenId: number;\n  profile: IProfile;\n  onDismiss: () => any;\n  network: NetworkName;\n}\n\nexport const TransferCardTokenIdModal = ({\n  cardAddress,\n  tokenId,\n  profile,\n  onDismiss,\n  network,\n}: TransferCardTokenIdModalProps) => {\n  const [toAddress, setToAddress] = useState<string>('');\n\n  const [\n    destinationProfile,\n    profileAddressError,\n    getProfile,\n    isProfileLoading,\n  ] = useProfile();\n\n  const { transferCard, transferState, resetState } = useTransferLsp8Token(\n    cardAddress,\n    toAddress,\n    tokenId,\n    profile,\n    network,\n  );\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'TRANSFERING CARD...',\n    },\n    successful: {\n      mainHeading: 'TRANSFER SUCCESSFULL',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'TRANSFER FAILED',\n    },\n  };\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    getProfile(event.target.value, network);\n    setToAddress(event.target.value);\n  };\n\n  return (\n    <>\n      <ProfilePreview\n        profile={destinationProfile}\n        profileError={profileAddressError}\n        isProfileLoading={isProfileLoading}\n      />\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={changeHandler}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n        value={toAddress}\n      />\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={transferCard}\n          disabled={!ethers.utils.isAddress(toAddress)}\n        >\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={transferState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectMintModalContent = styled.div`\n  max-height: 40em;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectMintListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledSelectMintListHeaderContent = styled.h4``;\n\nexport const StyledSelectMintList = styled.div`\n  overflow-y: scroll;\n`;\n\nexport const StyledSelectMintListContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 1em;\n  cursor: pointer;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledListMint = styled.p``;\n\nexport const StyledListPrice = styled.p``;\n","import { useMemo } from 'react';\nimport { IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledListMint,\n  StyledListPrice,\n  StyledSelectMintList,\n  StyledSelectMintListContent,\n  StyledSelectMintListHeader,\n  StyledSelectMintListHeaderContent,\n  StyledSelectMintModalContent,\n} from './styles';\n\ninterface IProps {\n  ownedTokenIds: number[];\n  markets: IMarket[];\n  whiteListedTokens: IWhiteListedTokens[];\n  onSelect: (index: number) => void;\n  onSelectCallback: () => void;\n}\n\nexport const SelectMintModalContent = ({\n  ownedTokenIds,\n  markets,\n  whiteListedTokens,\n  onSelect,\n  onSelectCallback,\n}: IProps) => {\n  const renderMintList = useMemo(\n    () =>\n      ownedTokenIds.map((id) => {\n        const market = markets.find((item) => Number(item.tokenId) === id);\n        const token =\n          market &&\n          whiteListedTokens.find(\n            (i) => i.tokenAddress === market.acceptedToken,\n          );\n        return (\n          <StyledSelectMintListContent\n            onClick={() => {\n              onSelect(ownedTokenIds.indexOf(id) + 1);\n              onSelectCallback();\n            }}\n          >\n            <StyledListMint>{id}</StyledListMint>\n            <StyledListPrice>\n              {market && token\n                ? `${displayPrice(\n                    market?.minimumAmount.toString(),\n                    token?.decimals,\n                  )} ${token.symbol}`\n                : '-'}\n            </StyledListPrice>\n          </StyledSelectMintListContent>\n        );\n      }),\n    [markets, onSelect, onSelectCallback, ownedTokenIds, whiteListedTokens],\n  );\n\n  return (\n    <StyledSelectMintModalContent>\n      <StyledSelectMintListHeader>\n        <StyledSelectMintListHeaderContent>\n          Mint\n        </StyledSelectMintListHeaderContent>\n        <StyledSelectMintListHeaderContent>\n          Price\n        </StyledSelectMintListHeaderContent>\n      </StyledSelectMintListHeader>\n      <StyledSelectMintList>{renderMintList}</StyledSelectMintList>\n    </StyledSelectMintModalContent>\n  );\n};\n","import styled from 'styled-components';\nimport { Accordion } from '../../../../components';\n\nexport const StyledCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  row-gap: 1em;\n`;\nexport const StyledCardInfoAccordion = styled(Accordion)``;\n\nexport const StyledCardInfoContainer = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledCardInfoLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n  width: 50%;\n`;\n\nexport const StyledCardInfoValue = styled.p`\n  width: 50%;\n`;\n\nexport const StyledCardStandardLabel = styled.p`\n  margin-left: auto;\n`;\n","import { useMemo } from 'react';\nimport { theme } from '../../../../boot/styles';\nimport { StyledAccordionTitle } from '../../../../components/Accordion/styles';\nimport { useMediaQuery } from '../../../../hooks/useMediaQuery';\nimport { ICard } from '../../../../services/models';\nimport { StyledDividerSpan } from '../../styles';\nimport {\n  StyledCardInfo,\n  StyledCardInfoAccordion,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardStandardLabel,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n  assetId?: string;\n}\n\nexport const CardInfoAccordion = ({ asset, assetId }: IProps) => {\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'NFT name',\n      value: asset.name,\n    },\n    {\n      label: asset.supportedInterface === 'lsp8' ? 'Mint' : 'Total Supply',\n      //   value:\n      //     ownedTokenIds && ownedTokenIds.length > 0\n      //       ? ownedTokenIds[currentIndex].toString()\n      //       : '',\n      value:\n        asset.supportedInterface === 'lsp8'\n          ? ` ${assetId} of ${asset.tokenSupplyCap.toString()}`\n          : asset.totalSupply.toString(),\n      valueType: 'supply',\n    },\n    {\n      label: 'Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n  ];\n\n  return (\n    <StyledCardInfoAccordion\n      header={\n        !isDesktop ? (\n          <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n        ) : null\n      }\n      enableToggle\n    >\n      <StyledCardInfo>\n        {cardInfo.map((item) => {\n          if (item.valueType === 'supply' && !assetId) {\n            return '';\n          }\n          return (\n            <StyledCardInfoContainer key={item.label}>\n              <StyledCardInfoLabel>{item.label}</StyledCardInfoLabel>\n              <StyledCardInfoValue>\n                {item.valueType === 'address'\n                  ? `${item.value.slice(0, 8)}...${item.value.slice(\n                      item.value.length - 4,\n                      item.value.length,\n                    )}`\n                  : item.value}\n              </StyledCardInfoValue>\n            </StyledCardInfoContainer>\n          );\n        })}\n        <StyledDividerSpan />\n        <StyledCardStandardLabel>\n          {asset?.supportedInterface.toUpperCase()} on {asset?.network}\n        </StyledCardStandardLabel>\n      </StyledCardInfo>\n    </StyledCardInfoAccordion>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n  TransferIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  resetCardsSliceInitialState,\n  fetchCard,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchProfileByAddress,\n  resetUserDataSliceInitialState,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardPriceWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledMintSliderIndex,\n  StyledTabContent,\n  StyledNoProfileLabel,\n  StyledMintSliderInput,\n  StyledSelectMintModalButton,\n  StyledMediaContainer,\n  StyledHeroImg,\n  StyledAssetDetailContainer,\n  StyledContractDetailHeader,\n  StyledContractName,\n  StyledContractDescription,\n  StyledOtherMediaContainer,\n  StyledOtherImg,\n  StyledHeroImgContainer,\n  StyledVideo,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { STATUS } from '../../utility';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IProfile } from '../../services/models';\nimport { HolderPagination } from './HoldersPagination';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useModal } from '../../hooks/useModal';\nimport { TransferCardTokenIdModal } from './TransferCardTokenIdModal';\nimport { SelectMintModalContent } from './SelectMintModalContent';\nimport Utils from '../../services/utilities/util';\nimport { CardInfoAccordion } from './components/CardInfoAccordion';\nimport { ShareReferModal } from '../../components/ShareReferModal';\nimport { useQueryParams } from '../../hooks/useQueryParams';\nimport { isAddress } from 'ethers/lib/utils';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { useFetchMarkets } from '../../hooks/useFetchMarkets';\nimport { useOwnedMints } from '../../hooks/useOwnedMints';\nimport { useActiveProfile } from '../../hooks/useActiveProfile';\nimport { useMintNavigation } from '../../hooks/useMintNavigation';\nimport { useMintMarket } from '../../hooks/useMintMarket';\nimport { AssetActions } from './AssetActions';\nimport { useCurrentUserPermissions } from '../../hooks/useCurrentUserPermissions';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const mintIdInputRef = useRef<HTMLInputElement>(null);\n\n  const params = useParams<IPrams>();\n  const history = useHistory();\n  const { pathname } = useLocation();\n  let query = useQueryParams();\n\n  const { setReferrer } = useLocalStorage();\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const dispatch = useAppDispatch();\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state.cards[params.network], params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const cardError = useSelector(\n    (state: RootState) => state.cards[params.network].error.fetchCard,\n  );\n\n  const cardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status.fetchCard,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status.fetchMetaData,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status.fetchCreators,\n  );\n\n  const { activeProfile } = useActiveProfile();\n\n  const currentUsersPermissions = useCurrentUserPermissions(wasActiveProfile);\n\n  useFetchMarkets(asset);\n\n  const { ownedTokenIds, currentTokenId } = useOwnedMints(\n    wasActiveProfile ? wasActiveProfile : '',\n    params.add,\n    currentIndex,\n  );\n\n  const currentMintMarket = useMintMarket(params.add, params.id);\n\n  const { nextMint, previousMint, mintChangeHelper } = useMintNavigation(\n    currentIndex,\n    setCurrentIndex,\n    ownedTokenIds,\n    mintIdInputRef,\n    asset ? asset : null,\n  );\n\n  const ownerStatus = useSelector(\n    (state: RootState) =>\n      state.userData[params.network].status.fetchAllProfiles,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const onEnterHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    const val = Number(event.target.value);\n    mintChangeHelper(val);\n  };\n\n  const {\n    handlePresent: onPresentSelectMintModal,\n    onDismiss: onDismissSelectMintModal,\n  } = useModal(\n    ownedTokenIds && asset && (\n      <SelectMintModalContent\n        ownedTokenIds={ownedTokenIds}\n        markets={asset.markets}\n        whiteListedTokens={asset.whiteListedTokens}\n        onSelect={mintChangeHelper}\n        onSelectCallback={() => onDismissSelectMintModal()}\n      />\n    ),\n    'Select Mint Modal',\n    'Select Mint',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardModal,\n    onDismiss: onDismissTransferCardModal,\n  } = useModal(\n    <>\n      {activeProfile && (\n        <TransferCardTokenIdModal\n          cardAddress={params.add}\n          tokenId={parseInt(params.id)}\n          profile={activeProfile}\n          onDismiss={() => onDismissTransferCardModal()}\n          network={params.network}\n        />\n      )}\n    </>,\n    'Card Transfer Modal',\n    'Transfer Card',\n  );\n\n  const { handlePresent: onPresentShareModal, onDismiss: onDismissShareModal } =\n    useModal(\n      <ShareReferModal\n        network={params.network}\n        pathName={pathname}\n        onDismiss={() => onDismissShareModal()}\n      />,\n      'Card Share Modal',\n      'Share Card',\n    );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds && asset?.supportedInterface === 'lsp8') {\n      history.push(\n        `/up/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    asset?.supportedInterface,\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(resetUserDataSliceInitialState(params.network));\n    dispatch(resetCardsSliceInitialState(params.network));\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    const referrerAddress = query.get('referrer');\n    referrerAddress &&\n      isAddress(referrerAddress) &&\n      setReferrer(params.network, referrerAddress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(\n    () => (\n      <AssetActions\n        asset={asset ? asset : null}\n        activeProfile={activeProfile}\n        currentUsersPermissions={currentUsersPermissions}\n        marketForTokenId={currentMintMarket}\n      />\n    ),\n    [activeProfile, asset, currentMintMarket, currentUsersPermissions],\n  );\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.lsp8MetaData[currentTokenId]?.attributes &&\n      asset.lsp8MetaData[currentTokenId].attributes.length > 0\n    ) {\n      return asset?.lsp8MetaData[currentTokenId].attributes\n        .slice(0)\n        .reverse()\n        .map((item) => {\n          if ('trait_type' in item) {\n            return (\n              <StyledCardPropertyContainer key={item.trait_type}>\n                <StyledCardPropertyIconWrapper>\n                  <StyledCardPropertyIcon\n                    src={propertiesImages[item.trait_type]}\n                    alt=\"\"\n                  />\n                </StyledCardPropertyIconWrapper>\n                <StyledCardProperty>\n                  <StyledCardPropertyLabel>\n                    {item.trait_type}\n                  </StyledCardPropertyLabel>\n                  <StyledCardPropertyValue>\n                    {item.trait_type.toLowerCase() === 'score'\n                      ? Number(item.value) / 100\n                      : item.value}\n                  </StyledCardPropertyValue>\n                </StyledCardProperty>\n              </StyledCardPropertyContainer>\n            );\n          }\n          return null;\n        });\n    }\n  }, [asset, currentTokenId, propertiesImages]);\n\n  const renderContractDetailHeader = useMemo(\n    () => (\n      <StyledContractDetailHeader>\n        <StyledContractName>{asset?.name}</StyledContractName>\n        <StyledQuickActions>\n          {ownedTokenIds && currentUsersPermissions.call === '1' && (\n            <StyledReloadPriceAction>\n              <StyledActionIcon\n                src={TransferIcon}\n                alt=\"transfer\"\n                title=\"transfer\"\n                onClick={onPresentTransferCardModal}\n              />\n            </StyledReloadPriceAction>\n          )}\n          <StyledReloadPriceAction>\n            <StyledActionIcon src={ReloadIcon} alt=\"reload\" title=\"reload\" />\n          </StyledReloadPriceAction>\n          <StyledReloadPriceAction onClick={onPresentShareModal}>\n            <StyledActionIcon src={ShareIcon} alt=\"share\" title=\"share\" />\n          </StyledReloadPriceAction>\n        </StyledQuickActions>\n      </StyledContractDetailHeader>\n    ),\n    [\n      asset?.name,\n      currentUsersPermissions.call,\n      onPresentShareModal,\n      onPresentTransferCardModal,\n      ownedTokenIds,\n    ],\n  );\n\n  const getHeroImgSrc = useMemo(() => {\n    if (asset?.supportedInterface === 'erc721') {\n      const img =\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[currentTokenId]?.image;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    } else if (asset?.supportedInterface === 'lsp8') {\n      const img =\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images[0][0]?.url;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    } else {\n      const img =\n        asset?.lsp8MetaData[0]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[0]?.LSP4Metadata?.images[0][0]?.url;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    }\n  }, [asset?.lsp8MetaData, asset?.supportedInterface, currentTokenId]);\n\n  const getOtherImgs = useMemo(() => {\n    if (\n      asset &&\n      asset.supportedInterface === 'lsp4' &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n      asset.lsp8MetaData[0]?.LSP4Metadata?.images.length > 1\n    ) {\n      return asset.lsp8MetaData[0]?.LSP4Metadata?.images.map((item, i) => {\n        if (i !== 0) {\n          return item[0]?.url.startsWith('ipfs://')\n            ? Utils.convertImageURL(item[0].url)\n            : item[0].url;\n        }\n      });\n    } else if (\n      asset &&\n      asset.supportedInterface === 'lsp8' &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images.length > 1\n    ) {\n      return asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images.map(\n        (item, i) => {\n          if (i !== 0) {\n            return item[0]?.url.startsWith('ipfs://')\n              ? Utils.convertImageURL(item[0].url)\n              : item[0].url;\n          }\n        },\n      );\n    }\n  }, [asset, currentTokenId]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            asset && (\n              <StyledAssetDetailContent>\n                {!isDesktop && renderContractDetailHeader}\n                <StyledMediaContainer>\n                  <StyledHeroImgContainer>\n                    <StyledHeroImg src={getHeroImgSrc} />\n                    {asset.supportedInterface === 'lsp8' &&\n                      wasActiveProfile &&\n                      ownedTokenIds && (\n                        <>\n                          <StyledMintControls>\n                            <StyledMintSkipButton onClick={previousMint}>\n                              <StyledMintSkipButtonImg\n                                src={BackwardsIcon}\n                                alt=\"\"\n                              />\n                            </StyledMintSkipButton>\n                            <StyledMintSliderIndex>\n                              <StyledMintSliderInput\n                                type=\"number\"\n                                min={1}\n                                max={ownedTokenIds.length}\n                                defaultValue={currentIndex + 1}\n                                value={currentIndex + 1}\n                                ref={mintIdInputRef}\n                                onKeyPress={onEnterHandler}\n                                onBlur={onBlurHandler}\n                              />\n                              /{ownedTokenIds.length}\n                            </StyledMintSliderIndex>\n                            <StyledMintSkipButton onClick={nextMint}>\n                              <StyledMintSkipButtonImg\n                                src={ForwardsIcon}\n                                alt=\"\"\n                              />\n                            </StyledMintSkipButton>\n                            <StyledSelectMintModalButton\n                              onClick={onPresentSelectMintModal}\n                            >\n                              Select Mint\n                            </StyledSelectMintModalButton>\n                          </StyledMintControls>\n                        </>\n                      )}\n                  </StyledHeroImgContainer>\n                  {asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n                    asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images\n                      .length > 1 &&\n                    ['lsp8', 'lsp4'].includes(asset.supportedInterface) && (\n                      <StyledOtherMediaContainer>\n                        {getOtherImgs &&\n                          getOtherImgs.length > 0 &&\n                          getOtherImgs?.map((item, i) =>\n                            item === undefined ? (\n                              <></>\n                            ) : (\n                              <StyledOtherImg key={i} src={item} />\n                            ),\n                          )}\n                      </StyledOtherMediaContainer>\n                    )}\n                  {asset.supportedInterface === 'lsp4' &&\n                    asset.lsp8MetaData[currentTokenId].LSP4Metadata.assets.map(\n                      (item) => {\n                        if (item.fileType === 'mp4') {\n                          return (\n                            <StyledVideo\n                              src={Utils.convertImageURL(item.url)}\n                              controls\n                            />\n                          );\n                        }\n                      },\n                    )}\n                  {['lsp8', 'erc721'].includes(asset.supportedInterface) &&\n                    (asset.lsp8MetaData[currentTokenId]?.animation_url ? (\n                      <StyledVideo\n                        src={Utils.convertImageURL(\n                          asset.lsp8MetaData[currentTokenId].animation_url,\n                        )}\n                        controls\n                      />\n                    ) : (\n                      <></>\n                    ))}\n                </StyledMediaContainer>\n                <StyledAssetDetailContainer>\n                  {isDesktop && renderContractDetailHeader}\n                  <StyledContractDescription>\n                    {asset.lsp8MetaData[0].description ||\n                      asset.lsp8MetaData[0].LSP4Metadata.description}\n                  </StyledContractDescription>\n                  {!isDesktop && (\n                    <CardInfoAccordion asset={asset} assetId={params.id} />\n                  )}\n                  {!isDesktop ? (\n                    <TabedAccordion\n                      tabs={[\n                        { name: 'Creators', content: renderCreators },\n                        { name: 'Owner', content: renderCurrentMintOwner },\n                        { name: 'Issuer', content: renderIssuer },\n                      ]}\n                    />\n                  ) : (\n                    <DesktopCreatorsAccordion\n                      creatorsContent={renderCreators}\n                      ownerContent={activeProfile && renderCurrentMintOwner}\n                      issuerContent={renderIssuer}\n                    />\n                  )}\n\n                  <StyledCardPropertiesAccordion\n                    header={\n                      <StyledAccordionTitle>Details</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardProperties>\n                      {renderCardProperties}\n                    </StyledCardProperties>\n                  </StyledCardPropertiesAccordion>\n                  {asset.supportedInterface === 'lsp8' && (\n                    <StyledCardPriceWrapper>\n                      <StyledCardPriceWrapperHeader>\n                        <StyledCardPriceLabel>Item Price</StyledCardPriceLabel>\n                      </StyledCardPriceWrapperHeader>\n                      {renderCardPrice}\n                    </StyledCardPriceWrapper>\n                  )}\n                  {isDesktop && (\n                    <CardInfoAccordion asset={asset} assetId={params.id} />\n                  )}\n                  {asset.supportedInterface === 'lsp8' && (\n                    <StyledMarketAccordion\n                      header={\n                        <StyledAccordionTitle>Market</StyledAccordionTitle>\n                      }\n                      enableToggle\n                    >\n                      {asset && (\n                        <CardMarket\n                          asset={asset}\n                          cardMarkets={asset?.markets}\n                          whiteListedTokens={asset?.whiteListedTokens}\n                        />\n                      )}\n                    </StyledMarketAccordion>\n                  )}\n                  {['lsp4', 'lsp8'].includes(asset.supportedInterface) && (\n                    <StyledHoldersAccordion\n                      header={\n                        <StyledAccordionTitle>\n                          Other Holders\n                        </StyledAccordionTitle>\n                      }\n                      enableToggle\n                    >\n                      {renderHolderPagination}\n                    </StyledHoldersAccordion>\n                  )}\n                </StyledAssetDetailContainer>\n              </StyledAssetDetailContent>\n            )\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../boot/types';\nimport { selectCardById } from '../../features/cards';\nimport { selectUserById } from '../../features/profiles';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\nimport { useUrlParams } from '../useUrlParams';\n\nexport const useOwnedMints = (\n  profileAddress: Address,\n  assetAddress: Address,\n  currentIndex: number,\n) => {\n  const { tokenId, network } = useUrlParams();\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[network], profileAddress),\n  );\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state.cards[network], assetAddress),\n  );\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards[network].status.fetchMetaData,\n  );\n  const ownedTokenIds = useMemo(\n    () =>\n      profile &&\n      profile.ownedAssets.find(\n        (item) =>\n          item.assetAddress.toLowerCase() === assetAddress.toLowerCase(),\n      )?.tokenIds,\n    [assetAddress, profile],\n  );\n\n  const currentTokenId = useMemo(() => {\n    let index: string = '0';\n    if (\n      asset?.supportedInterface === 'erc721' &&\n      metaDataStatus !== STATUS.FAILED\n    ) {\n      index = tokenId ? tokenId : '0';\n    } else if (asset?.supportedInterface === 'lsp8') {\n      index = ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '0';\n    }\n    return index;\n  }, [\n    asset?.supportedInterface,\n    currentIndex,\n    metaDataStatus,\n    ownedTokenIds,\n    tokenId,\n  ]);\n\n  return {\n    ownedTokenIds:\n      ownedTokenIds && ownedTokenIds.length > 0 ? ownedTokenIds : null,\n    currentTokenId,\n  };\n};\n","import { Dispatch, RefObject, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useAppDispatch } from '../../boot/store';\nimport { RootState } from '../../boot/types';\nimport { fetchMetaDataForTokenId } from '../../features/cards';\nimport { ICard } from '../../services/models';\nimport { STATUS } from '../../utility';\nimport { useUrlParams } from '../useUrlParams';\n\nexport const useMintNavigation = (\n  currentIndex: number,\n  setCurrentIndex: Dispatch<React.SetStateAction<number>>,\n  ownedTokenIds: number[] | null,\n  mintIdInputRef: RefObject<HTMLInputElement>,\n  asset: ICard | null,\n) => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const { network, address, tokenId } = useUrlParams();\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards[network].status.fetchMetaData,\n  );\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (nextIndex + 1).toString();\n    }\n    history.push(`/up/${network}/asset/${address}/${ownedTokenIds[nextIndex]}`);\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (previousIndex + 1).toString();\n    }\n    history.push(\n      `/up/${network}/asset/${address}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const mintChangeHelper = (mint: number) => {\n    if (ownedTokenIds && mint > 0 && mint <= ownedTokenIds.length) {\n      history.push(\n        `/up/${network}/asset/${address}/${ownedTokenIds[mint - 1]}`,\n      );\n      setCurrentIndex(mint - 1);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      ((ownedTokenIds && ownedTokenIds.length > 0) ||\n        asset?.supportedInterface === 'erc721') &&\n      asset &&\n      !(tokenId in asset.lsp8MetaData) &&\n      metaDataStatus === STATUS.IDLE\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: address,\n          network,\n          tokenId,\n          supportedInterface: asset.supportedInterface,\n        }),\n      );\n    }\n  }, [\n    address,\n    asset,\n    dispatch,\n    metaDataStatus,\n    network,\n    ownedTokenIds,\n    tokenId,\n  ]);\n\n  return {\n    nextMint,\n    previousMint,\n    mintChangeHelper,\n  };\n};\n"],"sourceRoot":""}