{"version":3,"sources":["features/profiles/ProfileCard/ProfileCard.tsx","pages/Profiles/styles.ts","pages/Profiles/Profiles.tsx"],"names":["ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","className","demo","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","StyledMainContent","styled","div","StyledHeroSection","BgFanzoneHero","StyledContentwrappar","md","StyledGreeting","StyledWelcomeHeading","h1","StyledDescription","p","StyledDivider","span","StyledProfilesHeader","StyledProfileHeading","StyledProfilesWrappar","lg","xl","button","Profiles","dispatch","useAppDispatch","demoProfiles","l14","mumbai","ethereum","userProfiles","useSelector","state","selectAllUsersItems","userData","filter","item","some","i","useEffect","fetchAllProfiles","addresses","renderProfiles","map","Search","Pagination","collectionAddresses"],"mappings":"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","file":"static/js/11.2e0729c4.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrappar,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrappar,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      className=\"animate-cardrender\"\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrappar demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrappar>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrappar demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrappar>\n    </StyledProfileCard>\n  );\n};\n","import styled from 'styled-components';\nimport { BgFanzoneHero } from '../../assets';\nimport { lg, md, xl } from '../../utility';\n\nexport const StyledMainContent = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: white;\n`;\n\nexport const StyledHeroSection = styled.div`\n  height: 243px;\n  width: 100%;\n  background: url(${BgFanzoneHero});\n  background-position: center;\n  background-repeat: repeat;\n  background-size: cover;\n`;\n\nexport const StyledContentwrappar = styled.div`\n  width: 100%;\n  padding: 0px 8px 0 8px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n\n  @media ${md} {\n    padding: 0 40px 0 40px;\n    max-width: 1440px;\n  }\n`;\n\nexport const StyledGreeting = styled.div`\n  padding-top: 20px;\n`;\n\nexport const StyledWelcomeHeading = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport const StyledDescription = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const StyledDivider = styled.span`\n  border-bottom: 1px solid #dfdfdf;\n  width: 100%;\n  margin-top: 20px;\n`;\n\nexport const StyledProfilesHeader = styled.div`\n  padding-top: 20px;\n  display: flex;\n`;\n\nexport const StyledProfileHeading = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin-right: auto;\n`;\n\nexport const StyledProfilesWrappar = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  width: 100%;\n  padding: 20px 0 20px 0;\n  justify-items: center;\n\n  @media ${md} {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n  @media ${lg} {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n  @media ${xl} {\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n  }\n`;\n\nexport const StyledErrorContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 40px auto 0 auto;\n  row-gap: 10px;\n`;\n\nexport const StyledError = styled.h1`\n  font-size: 24px;\n`;\n\nexport const StyledReloadButton = styled.button`\n  background: black;\n  padding: 8px 16px 8px 16px;\n  border-radius: 6px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import React, { useEffect } from 'react';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport { NetworkName, RootState } from '../../boot/types';\nimport { fetchAllProfiles, selectAllUsersItems } from '../../features/profiles';\nimport { IProfile } from '../../services/models';\nimport Pagination from '../../features/pagination/Pagination';\nimport {\n  StyledContentwrappar,\n  StyledDescription,\n  StyledGreeting,\n  StyledHeroSection,\n  StyledMainContent,\n  StyledDivider,\n  StyledWelcomeHeading,\n  StyledProfilesHeader,\n  StyledProfileHeading,\n  StyledProfilesWrappar,\n} from './styles';\nimport { Search } from '../../components/Search';\nimport { useAppDispatch } from '../../boot/store';\nimport { useParams } from 'react-router-dom';\n\ninterface IParams {\n  network: NetworkName;\n}\n\nconst Profiles: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n\n  const demoProfiles = {\n    l14: ['', ''],\n    mumbai: [\n      '0x0044FA45A42b78A8cbAF6764D770864CBC94214C',\n      '0x77de7a8c94789263Ba24D41D9D799190C73D3Acc',\n    ],\n    polygon: [\n      '0x775e1dA80Bbe4C507D7009AB8D3a45c87b7f9D8A',\n      '0x5e3Aa02aEE55c64a1253BFbe267CF9df94B8Cdbf',\n    ],\n    ethereum: ['', ''],\n  };\n\n  const demoAssets = {\n    l14: ['', ''],\n    mumbai: [\n      '0x8839E144Bd2EddfDBC53B5b6323008bb3CE3eb7F',\n      '0x9c7072122178107bf66571c1f3e379368e0e47a3',\n    ],\n    polygon: [\n      '0xd83Bc6fB61fD75beDe9d3999d7345b5C1cB8b393',\n      '0x90ada08949d5B32C9bF8d4DeCD27BE483bc5B0e2',\n    ],\n    ethereum: ['', ''],\n  };\n\n  const userProfiles = useSelector(\n    (state: RootState) => selectAllUsersItems(state.userData[params.network]),\n    // eslint-disable-next-line array-callback-return\n  )?.filter((item) => {\n    if (demoProfiles)\n      return demoProfiles[params.network].some((i) => {\n        return i === item.address && item.network === params.network;\n      });\n  });\n\n  const fetchDemoProfiles = () => {\n    if (userProfiles?.length === 0) {\n      dispatch(\n        fetchAllProfiles({\n          addresses: demoProfiles[params.network],\n          network: params.network,\n        }),\n      );\n    }\n  };\n\n  useEffect(() => {\n    fetchDemoProfiles();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.network]);\n\n  const renderProfiles = useMemo(\n    () =>\n      userProfiles?.map((userProfile: IProfile) => (\n        <ProfileCard\n          key={userProfile.address}\n          userProfile={userProfile}\n          type=\"demo\"\n        />\n      )),\n    [userProfiles],\n  );\n\n  return (\n    <StyledMainContent>\n      <StyledHeroSection></StyledHeroSection>\n      <StyledContentwrappar>\n        <StyledGreeting>\n          <StyledWelcomeHeading>\n            Welcome on Fanzone Profiles\n          </StyledWelcomeHeading>\n          <StyledDescription>\n            Fanzone Profiles displays any data from the Blockchain which follows\n            the standards of ERC725, LUKSO LSP1-3 and NFTs.\n          </StyledDescription>\n        </StyledGreeting>\n        <StyledDivider></StyledDivider>\n        <>\n          <StyledProfilesHeader>\n            <StyledProfileHeading>Profiles</StyledProfileHeading>\n            <Search />\n          </StyledProfilesHeader>\n          <StyledProfilesWrappar>{renderProfiles}</StyledProfilesWrappar>\n          <Pagination\n            type=\"demo\"\n            collectionAddresses={demoAssets[params.network]}\n          />\n        </>\n      </StyledContentwrappar>\n    </StyledMainContent>\n  );\n};\n\nexport default Profiles;\n"],"sourceRoot":""}