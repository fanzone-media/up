{"version":3,"sources":["components/InputField/InputField.tsx","components/TransactionStateWindow/styles.ts","components/TransactionStateWindow/TransactionStateWindow.tsx","components/InputField/styles.ts","utility/permissions.ts","pages/AssetDetails/BuyCardModal/styles.ts","components/ShareReferModal/styles.ts","components/ShareReferModal/ShareReferModal.tsx","hooks/useCopyText/useCopyText.ts","hooks/useQueryParams/useQueryParams.ts","boot/types.ts","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","utility/content/text.ts","utility/file.ts","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/TransferCardModal/TransferCardsModal.tsx","pages/ProfileDetails/WithdrawFundsModal/styles.ts","pages/ProfileDetails/WithdrawFundsModal/WithdrawFundsModal.tsx","hooks/useWithdrawFunds/useWitdrawFunds.ts","components/Tabs/styles.ts","components/Tabs/Tabs.tsx","pages/AddPermissions/styles.ts","pages/AddPermissions/AddPermissions.tsx","pages/ProfileDetails/ProfileSettingModal/ProfileSettingModal.tsx","pages/ProfileDetails/ProfileDetails.tsx"],"names":["InputField","name","label","type","changeHandler","align","placeholder","value","disabled","onBlurHandler","step","onChange","onBlur","StyledProcessingWindow","styled","div","height","StyledStateContent","StyledStateIcon","img","StyledStateHeading","h2","StyledStateDescription","p","StyledTryButton","button","TransactionStateWindow","state","transactionMessages","callback","transactionStatesIcons","loading","icon","PendingIcon","successful","SuccessIcon","failed","ErrorIcon","STATUS","IDLE","src","alt","mainHeading","description","FAILED","onClick","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","find","x","address","toLowerCase","permissions","StyledBuyCardModalContent","StyledInfoText","h3","theme","font","weight","regular","StyledPaymentText","StyledRadioGroup","StyledRadioInput","StyledRadioLabel","$checked","StyledSelectInputContainer","StyledUpAddressSelectInput","select","StyledUpAddressSelectLabel","StyledBuyStepsContainer","StyledBuyStep","StyledErrorMessage","StyledShareReferModalContent","StyledShareMessage","StyledSeparatorContainer","StyledDivider","StyledDivText","StyledShareViaLabel","StyledShareOptionsContainer","StyledShareLink","a","target","StyledInputError","ShareReferModal","network","pathName","onDismiss","getItems","useLocalStorage","selectInputRef","useRef","useState","copied","setCopied","copyText","text","window","navigator","clipboard","writeText","setTimeout","canCopy","useCopyText","savedProfiles","LOCAL_STORAGE_KEYS","UP","savedProfilesAddresses","Object","keys","length","referrerAddress","setReferrerAddress","customReferrerAddress","setCustomReferrerAddress","inputError","setInputError","event","currentTarget","getReferrer","isAddress","ref","defaultValue","map","item","variant","console","log","current","href","location","origin","Twitter","title","Facebook","as","Link","useQueryParams","search","useLocation","useMemo","URLSearchParams","StringBoolean","StyledProfileDetails","StyledProfileDetailsContent","StyledProfileNotFound","h1","StyledProfileCoverImg","StyledProfileInfoWrapper","StyledProfileInfo1","StyledProfileInfo1Content","screen","md","StyledProfileMediaWrapper","StyledProfileMedia","StyledProfileAddress","light","StyledProfileNameBioWrapper","lg","StyledProfileName","bolder","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledProfileSettingButton","StyledSettingIcon","StyledShareProfileWrapper","StyledShareIcon","StyledDropDownIcon","StyledAssetsWrapper","expand","StyledLinkIconWrapper","StyledLinkIcon","StyledOpenTransferModalButton","StyledOpenEditProfileModal","StyledWitdrawFundsButton","StyledShareProfileButton","animation","cardrender","StyledProfileImageWrapper","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","pulseAnimate","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","params","useParams","explorer","getChainExplorer","exploreUrl","rel","UniversalProfileIcon","sanitizeLink","url","replace","createImageFile","fetch","response","blob","data","metadata","File","socialLinks","ProfileEditModal","profile","linkFinder","useCallback","link","links","useSigner","signer","error","setError","setLoading","profileImage","backgroundImage","bio","facebook","twitter","instagram","editProfileForm","setEditProfileForm","useEffect","imageChangeHandler","files","fields","baseUrl","width","hash","backgroundImageHash","hashFunction","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","catch","finally","setUniversalProfileData","getImageUrl","includes","color","i","accept","TransferCardsModal","toAddress","cardAddress","ownedAssets","assetAddress","tokenId","transferCardForm","setTransferCardForm","useTransferLsp8Token","transferCard","transferState","key","htmlFor","ownedAsset","tokenIds","StyledWithdrawModalContent","StyledTokenLabel","StyledBalanceWrapper","StyledBalanceLabel","StyledBalanceValue","WithdrawFundsModal","whiteListedTokensInfo","setWhiteListedTokensInfo","balances","setBalances","useAccount","account","selectedTokenInput","setSelectedTokenInput","whiteListedtokensAddresses","getWhiteListedTokenAddresses","provider","useRpcProvider","useNetwork","networkData","withdrawState","setWithdrawState","balanceOf","tokenAddresses","profieAddress","Promise","all","tokenContract","ERC20__factory","connect","balance","withdrawFunds","tokenAddress","amount","chain","toast","position","LOADING","KeyManagerApi","transferBalanceViaKeyManager","then","SUCCESSFUL","transferBalanceViaUniversalProfile","resetState","useWitdrawFunds","fetchWhiteListedTokenInfo","LSP4DigitalAssetApi","fetchErc20TokenInfo","res","toString","decimals","selectedTokenBalance","selectedTokenDecimals","id","symbol","displayPrice","Number","StyledTabs","StyledTabsHeader","StyledTabsLabel","$active","Tabs","tabs","activeTab","setActiveTab","tab","visible","content","StyledAddPermissions","StyledLabel","StyledInputWrapper","StyledInputRow","StyledInput","StyledCheckboxInput","StyledPermissionInputWrapper","StyledSetPermisssionButton","AddPermissions","upAddress","addressTo","CHANGEOWNER","CHANGEPERMISSIONS","ADDPERMISSIONS","SETDATA","CALL","STATICCALL","DELEGATECALL","DEPLOY","TRANSFERVALUE","SIGN","permissionsForm","setpermissionsForm","checked","setPermissions","ethers","utils","addPermissions","ProfileSettingModal","permissionsSet","call","TRUE","setdata","addpermissions","canTransfer","canSetData","canAddPermissions","ProfileDetails","dispatch","useAppDispatch","pathname","query","setItem","setReferrer","useSelector","selectUserById","userData","add","profileError","profileStatus","status","isTablet","useMediaQuery","transfervalue","canTransferValue","get","currentProfile","fetchProfileByAddress","usePagination","issuedAssetsRange","range","setIssuedAssetsRange","setRange","ownedAssetsRange","setOwnedAssetsRange","issuedCards","selectAllCardItems","cards","filter","issuedAssets","slice","some","issuedCardStatus","issuedStatus","fetchIssuedCards","addresses","ownedCardStatus","ownedStatus","ownedCards","fetchOwnedCards","asset","renderLinks","linkTitle","Instagram","Globe","scrollTo","useModal","onDismissSettingModal","onPresentSettingModal","handlePresent","onDismissTransferCardsModal","onPresentTransferCardsModal","onDismissProfileEditModal","onPresentProfileEditModal","onDismissWithdrawFundsModal","onPresentWithdrawFundsModal","onDismissShareModal","onPresentShareModal","makeBlockie","ShareIcon","size","DropDownIcon","SettingIcon","components","digitalCard","MetaCard","nbrOfAllComponents","setComponentsRange"],"mappings":"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","file":"static/js/6.51f4b7a5.chunk.js","sourcesContent":["import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  align?: string;\n  placeholder?: string;\n  value?: string;\n  disabled?: boolean;\n  onBlurHandler?: (event: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nexport const InputField = ({\n  name,\n  label,\n  type,\n  changeHandler,\n  align,\n  placeholder,\n  value,\n  disabled,\n  onBlurHandler,\n}: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n        align={align}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n        onBlur={onBlurHandler}\n      />\n    </StyledInputContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledProcessingWindow = styled.div<{ height?: 'full' }>`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: ${({ height }) => (height ? '100%' : 'calc(100% - 11em)')};\n  bottom: 0;\n  left: -0.03em;\n  border-radius: 0.625em;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const StyledStateContent = styled.div`\n  text-align: center;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledStateIcon = styled.img`\n  height: 8.5em;\n`;\n\nexport const StyledStateHeading = styled.h2`\n  margin-top: -2em;\n`;\n\nexport const StyledStateDescription = styled.p``;\n\nexport const StyledTryButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  padding: 0.3em 0;\n`;\n","import { ErrorIcon, PendingIcon, SuccessIcon } from '../../assets';\nimport { STATUS } from '../../utility';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledProcessingWindow,\n  StyledStateContent,\n  StyledStateDescription,\n  StyledStateHeading,\n  StyledStateIcon,\n  StyledTryButton,\n} from './styles';\n\ninterface IProps {\n  state: STATUS;\n  height?: 'full';\n  callback?: () => any;\n  transactionMessages: {\n    loading: {\n      mainHeading: string;\n      description?: string;\n    };\n    successful: {\n      mainHeading: string;\n      description?: string;\n    };\n    failed: {\n      mainHeading: string;\n      description?: string;\n    };\n  };\n}\n\nexport const TransactionStateWindow = ({\n  state,\n  height,\n  transactionMessages,\n  callback,\n}: IProps) => {\n  const transactionStatesIcons = {\n    loading: {\n      icon: PendingIcon,\n    },\n    successful: {\n      icon: SuccessIcon,\n    },\n    failed: {\n      icon: ErrorIcon,\n    },\n  };\n  return (\n    <>\n      {state !== STATUS.IDLE && (\n        <StyledProcessingWindow height={height}>\n          <StyledStateContent>\n            <StyledStateIcon src={transactionStatesIcons[state].icon} alt=\"\" />\n            <StyledStateHeading>\n              {transactionMessages[state].mainHeading}\n            </StyledStateHeading>\n            <StyledStateDescription>\n              {transactionMessages[state]?.description}\n            </StyledStateDescription>\n            {callback && state === STATUS.FAILED && (\n              <StyledTryButton onClick={callback}>Try again</StyledTryButton>\n            )}\n          </StyledStateContent>\n        </StyledProcessingWindow>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 1rem;\n`;\n\nexport const StyledPaymentText = styled.p`\n  font-size: 0.9em;\n  font-weight: 700;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  column-gap: 0.2em;\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  text-align: center;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledBuyStepsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2em;\n  margin-top: 1.5em;\n  position: relative;\n`;\n\nexport const StyledBuyStep = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 0.5em;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  color: red;\n`;\n","import styled from 'styled-components';\n\nexport const StyledShareReferModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 1em;\n`;\n\nexport const StyledShareMessage = styled.p``;\n\nexport const StyledSeparatorContainer = styled.div`\n  display: flex;\n  width: 100%;\n  column-gap: 0.5em;\n`;\n\nexport const StyledDivider = styled.span`\n  border: 0.01em solid rgba(153, 153, 153, 1);\n  margin: auto 0;\n  width: 100%;\n`;\n\nexport const StyledDivText = styled.p``;\n\nexport const StyledShareViaLabel = styled.p``;\n\nexport const StyledShareOptionsContainer = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  display: flex;\n  align-items: center;\n  column-gap: 0.25em;\n`;\n\nexport const StyledInputError = styled.p`\n  color: red;\n`;\n","import { useRef, useState } from 'react';\nimport { isAddress } from 'web3-utils';\nimport { Facebook, Link, Twitter } from '../../assets';\nimport { NetworkName } from '../../boot/types';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport {\n  LOCAL_STORAGE_KEYS,\n  ProfilePermissionsLocal,\n  useLocalStorage,\n} from '../../hooks/useLocalStorage';\nimport {\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from '../../pages/AssetDetails/BuyCardModal/styles';\nimport { InputField } from '../InputField';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledDivider,\n  StyledDivText,\n  StyledInputError,\n  StyledSeparatorContainer,\n  StyledShareLink,\n  StyledShareMessage,\n  StyledShareOptionsContainer,\n  StyledShareReferModalContent,\n  StyledShareViaLabel,\n} from './styles';\n\ninterface IProps {\n  network: NetworkName;\n  pathName: string;\n  onDismiss: () => void;\n}\n\nexport const ShareReferModal = ({ network, pathName, onDismiss }: IProps) => {\n  const { getItems } = useLocalStorage();\n  const selectInputRef = useRef<HTMLSelectElement>(null);\n  const { copied, copyText } = useCopyText();\n  const savedProfiles = getItems(\n    LOCAL_STORAGE_KEYS.UP,\n  ) as ProfilePermissionsLocal;\n  const savedProfilesAddresses = savedProfiles[network]\n    ? Object.keys(savedProfiles[network])\n    : null;\n  const [referrerAddress, setReferrerAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [customReferrerAddress, setCustomReferrerAddress] = useState<boolean>(\n    savedProfilesAddresses ? false : true,\n  );\n  const [inputError, setInputError] = useState<string>('');\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setReferrerAddress(event.currentTarget.value);\n  };\n\n  const getReferrer = () => {\n    return isAddress(referrerAddress) ? `?referrer=${referrerAddress}` : '';\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    !isAddress(referrerAddress)\n      ? setInputError('wrong address')\n      : setInputError('');\n  };\n\n  return (\n    <StyledShareReferModalContent>\n      <StyledShareMessage>\n        Share this link and participate in 1% WETH market sales that came\n        through you\n      </StyledShareMessage>\n      {savedProfilesAddresses && (\n        <StyledSelectInputContainer>\n          <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n          <StyledUpAddressSelectInput\n            ref={selectInputRef}\n            defaultValue={savedProfilesAddresses[0]}\n            onChange={changeHandler}\n          >\n            {savedProfilesAddresses.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </StyledUpAddressSelectInput>\n        </StyledSelectInputContainer>\n      )}\n      {savedProfilesAddresses && (\n        <StyledSeparatorContainer>\n          <StyledDivider />\n          <StyledDivText>Or</StyledDivText>\n          <StyledDivider />\n        </StyledSeparatorContainer>\n      )}\n      {customReferrerAddress && (\n        <InputField\n          name=\"otherAddress\"\n          label=\"Address\"\n          type=\"text\"\n          changeHandler={changeHandler}\n          onBlurHandler={onBlurHandler}\n        />\n      )}\n      {inputError && customReferrerAddress && (\n        <StyledInputError>{inputError}</StyledInputError>\n      )}\n      {savedProfilesAddresses && (\n        <StyledModalButton\n          variant=\"gray\"\n          onClick={() => {\n            if (customReferrerAddress) {\n              console.log('here');\n              selectInputRef.current &&\n                setReferrerAddress(selectInputRef.current.value);\n            } else {\n              setReferrerAddress('');\n            }\n            setCustomReferrerAddress(!customReferrerAddress);\n          }}\n        >\n          {customReferrerAddress ? 'cancel input' : 'use other address'}\n        </StyledModalButton>\n      )}\n\n      <StyledShareOptionsContainer>\n        <StyledShareViaLabel>Share Via: </StyledShareViaLabel>\n        <StyledShareLink\n          href={`https://twitter.com/intent/tweet?url=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Twitter} alt=\"Twitter\" title=\"twitter\" />\n        </StyledShareLink>\n        <StyledShareLink\n          href={`https://www.facebook.com/sharer.php?u=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Facebook} alt=\"Facebook\" title=\"facebook\" />\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(`${window.location.origin}/#${pathName}${getReferrer()}`)\n          }\n        >\n          <img src={Link} alt=\"Copy Link\" title=\"copy link\" />\n          {copied ? 'Copied!' : 'Copy Link'}\n        </StyledShareLink>\n      </StyledShareOptionsContainer>\n      <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n        Cancel\n      </StyledModalButton>\n    </StyledShareReferModalContent>\n  );\n};\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<boolean>(false);\n\n  const copyText = (text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied((copied) => !copied);\n    setTimeout(() => {\n      setCopied((copied) => !copied);\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const useQueryParams = () => {\n  const { search } = useLocation();\n\n  return useMemo(() => new URLSearchParams(search), [search]);\n};\n","import { ICardState } from '../features/cards/types';\nimport { IUserDataSliceState } from '../features/profiles/types';\nimport { API } from '../services/api';\n\nexport type ThunkExtra = {\n  api: API;\n};\n\nexport type RootState = {\n  userData: IUserDataSliceState;\n  cards: ICardState;\n};\n\nexport type NetworkName = 'l14' | 'l16' | 'mumbai' | 'polygon' | 'ethereum';\n\nexport type AsyncReturnType<T extends (...args: any) => Promise<any>> =\n  T extends (...args: any) => Promise<infer R> ? R : any;\n\nexport type UnpackedType<T> = T extends (infer U)[] ? U : T;\n\nexport enum StringBoolean {\n  FALSE = '0',\n  TRUE = '1',\n}\n","import styled from 'styled-components';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 1.875rem;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 15em;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 1.25em 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    --profile-image-size: 11.25em;\n    --outer-columns-width: calc(\n      50% - 2.5em - calc(var(--profile-image-size) / 2)\n    );\n    align-items: center;\n    display: grid;\n    width: 1440px;\n    grid-template-columns:\n      var(--outer-columns-width) var(--profile-image-size)\n      var(--outer-columns-width);\n    grid-column-gap: 2.5em;\n    padding: 1.25em 2.5em;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrapper = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${({ theme }) => theme.screen.md} {\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    left: 50%;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  font-weight: ${({ theme }) => theme.font.weight.light};\n  letter-spacing: 1.5px;\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: min(0.875rem, 3.5vw);\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(100% - 12.85em);\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const StyledProfileNameBioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 0.25em;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    column-gap: 0.25em;\n    align-items: center;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 1.0625rem;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin: auto 0 auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    font-size: 1.125rem;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileBioWrapper = styled.div`\n  margin: auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(50% - 5.625em);\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin-right: 2.5em;\n  column-gap: 1.5em;\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${({ theme }) => theme.screen.md} {\n    max-width: 1440px;\n    padding: 0 2.5em;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 1.25em 0 1.25em 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  row-gap: 1.35em;\n  margin-top: 1.35em;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    margin-left: auto;\n    margin-top: 0;\n  }\n`;\n\nexport const StyledProfileSettingButton = styled.button`\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  height: 2em;\n  padding: 0 0.5em;\n  width: max-content;\n`;\n\nexport const StyledSettingIcon = styled.img`\n  height: 1.5em;\n`;\n\nexport const StyledShareProfileWrapper = styled.div`\n  position: relative;\n  overflow: visible;\n  width: max-content;\n`;\n\nexport const StyledShareIcon = styled.img`\n  height: 0.875em;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  display: inline-block;\n  margin-left: 0.5em;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0 2.5em;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIconWrapper = styled.a`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledOpenEditProfileModal = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledWitdrawFundsButton = styled(StyledOpenEditProfileModal)``;\n\nexport const StyledShareProfileButton = styled.button`\n  align-items: center;\n  column-gap: 1.25em;\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  padding: 0.5em 0.75em;\n  font-size: 0.9375rem;\n  overflow: hidden;\n  margin: auto 0;\n  display: flex;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0;\n    right: 0;\n    border-bottom-color: rgba(255, 255, 255, 0.15);\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    height: 2em;\n    padding: 0 0.5em;\n  }\n`;\n\nexport const StyledShareDropDown = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 100%;\n  background-color: rgba(59, 59, 59, 1);\n  border-width: 0px 1px 1px;\n  border-color: rgba(255, 255, 255, 0.15);\n  border-style: solid;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 10;\n  animation: ${({ theme }) => theme.animation.cardrender} 0.2s linear;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-top-width: 1px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    top: calc(100% + 0.5em);\n    width: max-content;\n  }\n`;\n\nexport const ShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  align-items: center;\n  display: flex;\n  column-gap: 1.25em;\n  padding: 0.5em 0.75em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: max-content;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\n\nexport const StyledProfileImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n`;\n\nexport const StyledProfileImg = styled.img`\n  border-radius: 50%;\n  height: calc(100% - 1em);\n  inset: 0;\n  margin: auto;\n  position: absolute;\n  width: calc(100% - 1em);\n`;\n\nexport const StyledBlockieImg = styled.img`\n  align-items: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  z-index: 10;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  height: calc(100% - 1em);\n  inset: 0;\n  position: absolute;\n  width: auto;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrapper,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const explorer = getChainExplorer(params.network);\n  return (\n    <StyledProfileImageWrapper>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {params.network in ['l14', 'l16'] && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrapper>\n  );\n};\n","export const sanitizeLink = (url: string) => {\n  return url.replace(/^.*\\/\\/[^/]+\\//, '');\n};\n","export const createImageFile = async (url: string) => {\n  let response = await fetch(url);\n  let data = await response.blob();\n  let metadata = {\n    type: 'image/jpeg',\n  };\n\n  return new File([data], url, metadata);\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport {\n  FileInput,\n  HiddenFileInput,\n  HiddenFileInputWrapper,\n} from '../../../components/InputField/styles';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { sanitizeLink } from '../../../utility/content/text';\nimport { createImageFile } from '../../../utility/file';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  FileEditWrapper,\n  MetaLabel,\n  MetaLabeledInput,\n  PreviewImage,\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n} from './styles';\n\ninterface IProps {\n  onDismiss: () => void;\n  profile: IProfile;\n}\n\ntype formInput = {\n  profileImage: File | null;\n  backgroundImage: File | null;\n  name: string;\n  bio: string;\n  facebook: string;\n  twitter: string;\n  instagram: string;\n};\n\ntype SocialLink = 'facebook' | 'twitter' | 'instagram';\n\nconst socialLinks = {\n  twitter: 'https://twitter.com/',\n  facebook: 'https://facebook.com/',\n  instagram: 'https://instagram.com/',\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  onDismiss,\n  profile,\n}: IProps) => {\n  const linkFinder = useCallback(\n    (title: SocialLink) => {\n      const link = profile.links.find(\n        (item) => item.title.toLowerCase() === title,\n      );\n      return link ? link.url : '';\n    },\n    [profile.links],\n  );\n\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profileImage: null,\n    backgroundImage: null,\n    name: profile.name,\n    bio: profile.description,\n    facebook: linkFinder('facebook'),\n    twitter: linkFinder('twitter'),\n    instagram: linkFinder('instagram'),\n  });\n\n  useEffect(() => {\n    (async () => {\n      setEditProfileForm({\n        ...editProfileForm,\n        profileImage: await createImageFile(profile.profileImage),\n        backgroundImage: await createImageFile(profile.backgroundImage),\n      });\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile.profileImage, profile.backgroundImage]);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      setEditProfileForm({\n        ...editProfileForm,\n        [event.currentTarget.name]: event.currentTarget.files[0],\n      });\n    }\n  };\n\n  const fields = [\n    { name: 'backgroundImage', label: 'Background Image', type: 'file' },\n    { name: 'profileImage', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    {\n      name: 'twitter',\n      label: 'Twitter',\n      type: 'text',\n      baseUrl: socialLinks.twitter,\n    },\n    {\n      name: 'facebook',\n      label: 'Facebook',\n      type: 'text',\n      baseUrl: socialLinks.facebook,\n    },\n    {\n      name: 'instagram',\n      label: 'Instagram',\n      type: 'text',\n      baseUrl: socialLinks.instagram,\n    },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name: editProfileForm.name,\n      description: editProfileForm.bio,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hash: profile.backgroundImageHash,\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.backgroundImage &&\n            editProfileForm.backgroundImage.name !== profile.backgroundImage\n              ? editProfileForm.backgroundImage\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          hash: profile.backgroundImageHash,\n          url:\n            editProfileForm.profileImage &&\n            editProfileForm.profileImage.name !== profile.profileImage\n              ? editProfileForm.profileImage\n              : profile.profileImage,\n        },\n      ],\n      links: [\n        {\n          title: 'facebook',\n          url:\n            editProfileForm.facebook.length > 0\n              ? `https://facebook.com/${editProfileForm.facebook}`\n              : linkFinder('facebook'),\n        },\n        {\n          title: 'twitter',\n          url:\n            editProfileForm.twitter.length > 0\n              ? `https://twitter.com/${editProfileForm.twitter}`\n              : linkFinder('twitter'),\n        },\n        {\n          title: 'instagram',\n          url:\n            editProfileForm.instagram.length > 0\n              ? `https://instagram.com/${editProfileForm.instagram}`\n              : linkFinder('instagram'),\n        },\n      ],\n    }),\n    [\n      editProfileForm.backgroundImage,\n      editProfileForm.bio,\n      editProfileForm.facebook,\n      editProfileForm.instagram,\n      editProfileForm.name,\n      editProfileForm.profileImage,\n      editProfileForm.twitter,\n      linkFinder,\n      profile.backgroundImage,\n      profile.backgroundImageHash,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n    if (profile.isOwnerKeyManager) {\n      signer &&\n        (await LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n          profile.owner,\n          profile.address,\n          data,\n          signer,\n        )\n          .catch((error) => {\n            setError(true);\n            // onDismiss();\n          })\n          .finally(() => {\n            setLoading(false);\n          }));\n    } else {\n      signer &&\n        (await LSP3ProfileApi.setUniversalProfileData(\n          profile.address,\n          data,\n          signer,\n        )\n          .catch((error) => {\n            setError(true);\n            // onDismiss();\n          })\n          .finally(() => {\n            setLoading(false);\n          }));\n    }\n  };\n\n  const getImageUrl = useCallback(\n    (url: string) =>\n      url.includes('ipfs.infura-ipfs.io')\n        ? url\n        : `https://ipfs.fanzone.io/${sanitizeLink(url)}`,\n    [],\n  );\n\n  return !loading && !error ? (\n    <StyledEditProfileModalContent>\n      {fields.map((item, i) => (\n        <StyledInputRow key={i}>\n          <StyledLabel>{item.label}</StyledLabel>\n          {item.type === 'textarea' && (\n            <StyledTextAreaInput\n              name={item.name}\n              onChange={changeHandler}\n              value={editProfileForm[item.name as keyof formInput] as string}\n            />\n          )}\n          {item.type === 'text' && (\n            <MetaLabeledInput>\n              {item.baseUrl && <MetaLabel>{item.baseUrl}</MetaLabel>}\n              <StyledInput\n                name={item.name}\n                type={item.type}\n                onChange={changeHandler}\n                value={sanitizeLink(\n                  editProfileForm[item.name as keyof formInput] as string,\n                )}\n              />\n            </MetaLabeledInput>\n          )}\n          {item.type === 'file' && (\n            <FileEditWrapper>\n              {(editProfileForm[item.name as keyof formInput] as File) && (\n                <PreviewImage\n                  alt={profile.name}\n                  src={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                />\n              )}\n              <HiddenFileInputWrapper>\n                <FileInput\n                  title={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                  fileName={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                />\n                <HiddenFileInput\n                  title={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                  name={item.name}\n                  onChange={imageChangeHandler}\n                  accept=\".jpg, .png\"\n                />\n              </HiddenFileInputWrapper>\n            </FileEditWrapper>\n          )}\n        </StyledInputRow>\n      ))}\n      <br />\n      <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n    </StyledEditProfileModalContent>\n  ) : (\n    <StyledErrorLoadingContent>\n      {!error ? (\n        <>\n          <StyledLoadingHolder>\n            <StyledLoader color=\"#ed7a2d\" />\n          </StyledLoadingHolder>\n          <StyledLoadingMessage>\n            confirm the metamask transaction and wait ....\n          </StyledLoadingMessage>\n        </>\n      ) : (\n        <StyledErrorText>Something went wrong</StyledErrorText>\n      )}\n    </StyledErrorLoadingContent>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport {\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n} from '../ProfileEditModal/styles';\nimport { StyledSelectInput, StyledTransferCardModalContent } from './styles';\nimport { Address } from '../../../utils/types';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IOwnedAssets } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { NetworkName } from '../../../boot/types';\n\ninterface IProps {\n  profile: {\n    address: Address;\n    owner: Address;\n    isOwnerKeyManager: boolean;\n    ownedAssets: IOwnedAssets[];\n  };\n  onDismiss: () => void;\n  network: NetworkName;\n}\n\ntype formInput = {\n  toAddress: string;\n  cardAddress: string;\n  tokenId: number | null;\n};\n\nexport const TransferCardsModal: React.FC<IProps> = ({\n  profile,\n  onDismiss,\n  network,\n}: IProps) => {\n  const [transferCardForm, setTransferCardForm] = useState<formInput>({\n    toAddress: '',\n    cardAddress: profile.ownedAssets[0].assetAddress,\n    tokenId: null,\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (\n      event.currentTarget.name === 'cardAddress' &&\n      event.currentTarget.value !== transferCardForm.cardAddress\n    ) {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n        tokenId: null,\n      });\n    } else {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n      });\n    }\n  };\n\n  const { transferCard, transferState, error } = useTransferLsp8Token(\n    transferCardForm.cardAddress,\n    transferCardForm.toAddress,\n    transferCardForm.tokenId,\n    profile,\n    network,\n  );\n\n  const fields = [\n    { name: 'cardAddress', label: 'Card Name', type: 'select' },\n    { name: 'tokenId', label: 'Token Id', type: 'select' },\n  ];\n\n  return (\n    <StyledTransferCardModalContent>\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={changeHandler}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n      />\n      {fields.map((item, key) => (\n        <StyledInputRow key={key}>\n          <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n          {item.type === 'select' && item.name === 'cardAddress' && (\n            <StyledSelectInput\n              name={item.name}\n              onChange={changeHandler}\n              defaultValue={profile.ownedAssets[0].assetAddress}\n            >\n              {profile.ownedAssets.map((ownedAsset, key) => (\n                <option\n                  key={key}\n                  value={ownedAsset.assetAddress}\n                  defaultValue={ownedAsset.assetAddress}\n                >\n                  {ownedAsset.assetAddress}\n                </option>\n              ))}\n            </StyledSelectInput>\n          )}\n          {item.type === 'select' && item.name === 'tokenId' && (\n            <StyledSelectInput name={item.name} onChange={changeHandler}>\n              <option>Select token id</option>\n              {profile.ownedAssets\n                .find(\n                  (ownedAsset) =>\n                    ownedAsset.assetAddress === transferCardForm.cardAddress,\n                )\n                ?.tokenIds.map((tokenId, key) => (\n                  <option key={key} value={tokenId}>\n                    {tokenId}\n                  </option>\n                ))}\n            </StyledSelectInput>\n          )}\n        </StyledInputRow>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton onClick={transferCard}>\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n    </StyledTransferCardModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledWithdrawModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  padding: 0 0.9em;\n  display: flex;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  top: -0.1em;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledTokenLabel = styled.p`\n  margin-left: 0.9em;\n`;\n\nexport const StyledBalanceWrapper = styled.div`\n  display: flex;\n  border-left: 1px solid white;\n  width: 50%;\n  margin-left: auto;\n  padding-left: 0.9em;\n`;\n\nexport const StyledBalanceLabel = styled.p``;\n\nexport const StyledBalanceValue = styled.p`\n  margin-left: auto;\n`;\n","import { BigNumber } from 'ethers';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { NetworkName } from '../../../boot/types';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useRpcProvider } from '../../../hooks/useRpcProvider';\nimport { useWitdrawFunds } from '../../../hooks/useWithdrawFunds';\nimport { LSP4DigitalAssetApi } from '../../../services/controllers/LSP4DigitalAsset';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport { Address } from '../../../utils/types';\nimport {\n  StyledBalanceLabel,\n  StyledBalanceValue,\n  StyledBalanceWrapper,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledTokenLabel,\n  StyledWithdrawModalContent,\n} from './styles';\n\ninterface IProps {\n  profile: IProfile;\n  network: NetworkName;\n  onDismiss: () => void;\n}\n\nexport const WithdrawFundsModal = ({ profile, network, onDismiss }: IProps) => {\n  const [whiteListedTokensInfo, setWhiteListedTokensInfo] = useState<\n    IWhiteListedTokens[]\n  >([]);\n  const [balances, setBalances] = useState<\n    Array<{ balance: BigNumber; address: string }>\n  >([]);\n  const [{ data: account }] = useAccount();\n  const [selectedTokenInput, setSelectedTokenInput] = useState<Address>('');\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const provider = useRpcProvider(network);\n  const { balanceOf, withdrawFunds, withdrawState, resetState } =\n    useWitdrawFunds(network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSelectedTokenInput(event.currentTarget.value);\n  };\n\n  const fetchWhiteListedTokenInfo = useCallback(async () => {\n    const res = await Promise.all(\n      whiteListedtokensAddresses.map(\n        async (address) =>\n          await LSP4DigitalAssetApi.fetchErc20TokenInfo(address, provider),\n      ),\n    );\n    setWhiteListedTokensInfo(res);\n  }, [provider, whiteListedtokensAddresses]);\n\n  const [selectedTokenBalance, selectedTokenDecimals] = useMemo(() => {\n    const balance = balances\n      .find(\n        (item) =>\n          item.address.toLowerCase() === selectedTokenInput.toLowerCase(),\n      )\n      ?.balance.toString();\n    const decimals = whiteListedTokensInfo.find(\n      (item) =>\n        item.tokenAddress.toLowerCase() === selectedTokenInput.toLowerCase(),\n    )?.decimals;\n    return [balance, decimals];\n  }, [balances, selectedTokenInput, whiteListedTokensInfo]);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'WITHDRAWING FUNDS. . .',\n    },\n    successful: {\n      mainHeading: 'WITHDRAW SUCCESSFULL',\n    },\n    failed: {\n      mainHeading: 'WITHDRAW FAILED',\n      description: 'Please try agian.',\n    },\n  };\n\n  useEffect(() => {\n    fetchWhiteListedTokenInfo();\n    balanceOf(whiteListedtokensAddresses, profile.address).then((res) => {\n      setBalances(res);\n    });\n  }, []);\n\n  return (\n    <StyledWithdrawModalContent>\n      {whiteListedTokensInfo.map((item) => (\n        <StyledRadioLabel\n          htmlFor=\"token\"\n          $checked={\n            selectedTokenInput.toLowerCase() === item.tokenAddress.toLowerCase()\n          }\n        >\n          <StyledRadioInput\n            name=\"payment\"\n            type=\"radio\"\n            id=\"token\"\n            value={item.tokenAddress}\n            onChange={changeHandler}\n          />\n          <StyledTokenLabel>{item.symbol}</StyledTokenLabel>\n          <StyledBalanceWrapper>\n            <StyledBalanceLabel>Balance: </StyledBalanceLabel>\n            <StyledBalanceValue>\n              {displayPrice(\n                selectedTokenBalance ? selectedTokenBalance : 0,\n                selectedTokenDecimals ? selectedTokenDecimals : 0,\n              )}\n            </StyledBalanceValue>\n          </StyledBalanceWrapper>\n        </StyledRadioLabel>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!selectedTokenBalance || Number(selectedTokenBalance) <= 0}\n          onClick={async () =>\n            account &&\n            (await withdrawFunds(\n              profile,\n              selectedTokenInput,\n              account.address,\n              selectedTokenBalance ? selectedTokenBalance : 0,\n            ))\n          }\n        >\n          withdraw to metamask\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={withdrawState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledWithdrawModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSigner, useNetwork } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IProfile } from '../../services/models';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\nimport { useRpcProvider } from '../useRpcProvider';\n\nexport const useWitdrawFunds = (network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [withdrawState, setWithdrawState] = useState<STATUS>(STATUS.IDLE);\n  const provider = useRpcProvider(network);\n\n  const balanceOf = async (\n    tokenAddresses: Address[],\n    profieAddress: Address,\n  ) => {\n    const balances = await Promise.all(\n      tokenAddresses.map(async (address) => {\n        const tokenContract = ERC20__factory.connect(address, provider);\n        const balance = await tokenContract.balanceOf(profieAddress);\n        return {\n          address,\n          balance,\n        };\n      }),\n    );\n    return balances;\n  };\n\n  const withdrawFunds = async (\n    profile: IProfile,\n    tokenAddress: Address,\n    toAddress: Address,\n    amount: BigNumberish,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setWithdrawState(STATUS.LOADING);\n    if (profile.isOwnerKeyManager) {\n      signer &&\n        (await KeyManagerApi.transferBalanceViaKeyManager(\n          tokenAddress,\n          profile.owner,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        )\n          .then(() => {\n            setWithdrawState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setWithdrawState(STATUS.FAILED);\n          }));\n    } else {\n      signer &&\n        (await LSP3ProfileApi.transferBalanceViaUniversalProfile(\n          tokenAddress,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        )\n          .then(() => {\n            setWithdrawState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setWithdrawState(STATUS.FAILED);\n          }));\n    }\n  };\n\n  return {\n    balanceOf,\n    withdrawFunds,\n    withdrawState,\n    error,\n    resetState: () => setWithdrawState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledTabs = styled.div``;\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import { ReactNode, useState } from 'react';\nimport { StyledTabs, StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n    visible: boolean;\n  }[];\n}\n\nexport const Tabs = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <StyledTabs>\n      <StyledTabsHeader>\n        {tabs.map((tab, i) => {\n          if (tab.visible) {\n            return (\n              <StyledTabsLabel\n                key={i}\n                $active={activeTab === i}\n                onClick={() => setActiveTab(i)}\n              >\n                {tab.name}\n              </StyledTabsLabel>\n            );\n          }\n        })}\n      </StyledTabsHeader>\n      {tabs[activeTab].content}\n    </StyledTabs>\n  );\n};\n","import styled from 'styled-components';\nimport { StyledInputRow } from '../ProfileDetails/ProfileEditModal/styles';\n\nexport const StyledAddPermissions = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 8px;\n`;\n\nexport const StyledNetworkLabel = styled.p`\n  color: white;\n  font-size: 25px;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n`;\n\nexport const StyledLabel = styled.label`\n  color: white;\n  width: 200px;\n`;\n\nexport const StyledInputWrapper = styled(StyledInputRow)`\n  display: flex;\n`;\n\nexport const StyledInput = styled.input`\n  margin: auto 0;\n  max-width: 350px;\n  width: 100%;\n`;\n\nexport const StyledCheckboxInput = styled.input`\n  margin: auto 10px auto 0;\n`;\n\nexport const StyledPermissionInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSetPermisssionButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 20px auto;\n  padding: 5px 10px;\n  border-radius: 8px;\n  color: white;\n`;\n","import { ethers } from 'ethers';\nimport React, { useState } from 'react';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport {\n  StyledAddPermissions,\n  StyledInputWrapper,\n  StyledInput,\n  StyledLabel,\n  StyledPermissionInputWrapper,\n  StyledCheckboxInput,\n  StyledSetPermisssionButton,\n  StyledNetworkLabel,\n} from './styles';\n\ninterface IProps {\n  upAddress: string;\n}\n\ntype formInput = {\n  addressTo: string;\n  permissions: {\n    CHANGEOWNER: boolean;\n    CHANGEPERMISSIONS: boolean;\n    ADDPERMISSIONS: boolean;\n    SETDATA: boolean;\n    CALL: boolean;\n    STATICCALL: boolean;\n    DELEGATECALL: boolean;\n    DEPLOY: boolean;\n    TRANSFERVALUE: boolean;\n    SIGN: boolean;\n  };\n};\n\nexport const AddPermissions = ({ upAddress }: IProps) => {\n  const [{ data }] = useSigner();\n  const [permissionsForm, setpermissionsForm] = useState<formInput>({\n    addressTo: '',\n    permissions: {\n      CHANGEOWNER: false,\n      CHANGEPERMISSIONS: false,\n      ADDPERMISSIONS: false,\n      SETDATA: false,\n      CALL: false,\n      STATICCALL: false,\n      DELEGATECALL: false,\n      DEPLOY: false,\n      TRANSFERVALUE: false,\n      SIGN: false,\n    },\n  });\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.type === 'checkbox') {\n      event.currentTarget.checked\n        ? setpermissionsForm({\n            ...permissionsForm,\n            permissions: {\n              ...permissionsForm.permissions,\n              [event.currentTarget.name]: true,\n            },\n          })\n        : setpermissionsForm({\n            ...permissionsForm,\n            permissions: {\n              ...permissionsForm.permissions,\n              [event.currentTarget.name]: false,\n            },\n          });\n    } else {\n      setpermissionsForm({\n        ...permissionsForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n      });\n    }\n  };\n\n  const setPermissions = async () => {\n    if (\n      ethers.utils.isAddress(upAddress) &&\n      ethers.utils.isAddress(permissionsForm.addressTo)\n    ) {\n      data &&\n        (await KeyManagerApi.addPermissions(\n          upAddress,\n          permissionsForm.addressTo,\n          permissionsForm.permissions,\n          data,\n        ));\n    }\n  };\n\n  return (\n    <StyledAddPermissions>\n      <StyledInputWrapper>\n        <StyledLabel>Grant permission to Address: </StyledLabel>\n        <StyledInput name=\"addressTo\" onChange={changeHandler}></StyledInput>\n      </StyledInputWrapper>\n      <StyledPermissionInputWrapper>\n        {Object.keys(permissionsForm.permissions).map((key) => (\n          <StyledInputWrapper key={key}>\n            <StyledCheckboxInput\n              type=\"checkbox\"\n              name={key}\n              id={key}\n              value={key}\n              onChange={changeHandler}\n            ></StyledCheckboxInput>\n            <StyledLabel htmlFor={key}>{key}</StyledLabel>\n          </StyledInputWrapper>\n        ))}\n      </StyledPermissionInputWrapper>\n      <StyledSetPermisssionButton onClick={setPermissions}>\n        Set Permissions\n      </StyledSetPermisssionButton>\n    </StyledAddPermissions>\n  );\n};\n","import { useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { StringBoolean } from '../../../boot/types';\nimport { Tabs } from '../../../components/Tabs';\nimport { IProfile } from '../../../services/models';\nimport { getAddressPermissionsOnUniversalProfile } from '../../../utility/permissions';\nimport { AddPermissions } from '../../AddPermissions';\nimport { ProfileEditModal } from '../ProfileEditModal';\n\ninterface IProps {\n  profile: IProfile;\n  onDismiss: () => void;\n}\n\nexport const ProfileSettingModal = ({ profile, onDismiss }: IProps) => {\n  const [{ data: account }] = useAccount();\n\n  const [canTransfer, canSetData, canAddPermissions] = useMemo(() => {\n    if (!account) return [false, false, false];\n\n    const permissionsSet = getAddressPermissionsOnUniversalProfile(\n      profile.permissionSet,\n      account.address,\n    );\n\n    return [\n      permissionsSet?.permissions.call === StringBoolean.TRUE,\n      permissionsSet?.permissions.setdata === StringBoolean.TRUE,\n      permissionsSet?.permissions.addpermissions === StringBoolean.TRUE,\n    ];\n  }, [account, profile]);\n\n  const tabs = [\n    {\n      name: 'Update info',\n      content: <ProfileEditModal profile={profile} onDismiss={onDismiss} />,\n      visible: canTransfer && canSetData,\n    },\n    {\n      name: 'Permissions',\n      content: <AddPermissions upAddress={profile.address} />,\n      visible: canTransfer && canAddPermissions,\n    },\n  ];\n\n  return <Tabs tabs={tabs} />;\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState, StringBoolean } from '../../boot/types';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { HideOnScreen, Pagination } from '../../components';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrapper,\n  StyledDropDownIcon,\n  StyledLinkIconWrapper,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrapper,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrapper,\n  StyledProfileName,\n  StyledProfileNameBioWrapper,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHolder,\n  StyledShareProfileButton,\n  StyledShareProfileWrapper,\n  StyledOpenEditProfileModal,\n  StyledWitdrawFundsButton,\n  StyledProfileSettingButton,\n  StyledSettingIcon,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  SettingIcon,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n  currentProfile,\n  fetchProfileByAddress,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport {\n  fetchIssuedCards,\n  fetchOwnedCards,\n  selectAllCardItems,\n} from '../../features/cards';\nimport { ICard, IProfile } from '../../services/models';\nimport { MetaCard } from '../../features/cards/MetaCard';\nimport { StyledProfileHeading, StyledProfilesHeader } from '../Profiles/styles';\nimport { TransferCardsModal } from './TransferCardModal/TransferCardsModal';\nimport { useModal } from '../../hooks/useModal';\nimport { usePagination } from '../../hooks/usePagination';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { WithdrawFundsModal } from './WithdrawFundsModal';\nimport { ProfileSettingModal } from './ProfileSettingModal';\nimport { useQueryParams } from '../../hooks/useQueryParams';\nimport { isAddress } from 'ethers/lib/utils';\nimport { ShareReferModal } from '../../components/ShareReferModal';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst ProfileDetails: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  let query = useQueryParams();\n  const { setItem, setReferrer } = useLocalStorage();\n  const [{ data: account }] = useAccount();\n  const [{ data: signer }] = useSigner();\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[params.network], params.add),\n  );\n\n  const profileError = useSelector(\n    (state: RootState) => state.userData[params.network].error,\n  );\n\n  const profileStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const isTablet = useMediaQuery(theme.screen.md);\n\n  const [canTransfer, canSetData, canTransferValue, canAddPermissions] =\n    useMemo(() => {\n      if (!profile || !account) return [false, false, false];\n\n      const permissionsSet = getAddressPermissionsOnUniversalProfile(\n        profile.permissionSet,\n        account.address,\n      );\n      console.log(permissionsSet);\n      return [\n        permissionsSet?.permissions.call === StringBoolean.TRUE,\n        permissionsSet?.permissions.setdata === StringBoolean.TRUE,\n        permissionsSet?.permissions.transfervalue === StringBoolean.TRUE,\n        permissionsSet?.permissions.addpermissions === StringBoolean.TRUE,\n      ];\n    }, [account, profile]);\n\n  useEffect(() => {\n    const referrerAddress = query.get('referrer');\n    referrerAddress &&\n      isAddress(referrerAddress) &&\n      setReferrer(params.network, referrerAddress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  useMemo(() => {\n    if (!account || !profile || !canTransfer || !canSetData) return;\n    setItem(params.network, params.add, profile.permissionSet);\n  }, [\n    account,\n    canSetData,\n    canTransfer,\n    params.add,\n    params.network,\n    profile,\n    setItem,\n  ]);\n\n  useEffect(() => {\n    dispatch(currentProfile(params.add));\n    if (!profile)\n      dispatch(\n        fetchProfileByAddress({ address: params.add, network: params.network }),\n      );\n  }, [dispatch, params.add, params.network, profile]);\n\n  const { range: issuedAssetsRange, setRange: setIssuedAssetsRange } =\n    usePagination();\n  const { range: ownedAssetsRange, setRange: setOwnedAssetsRange } =\n    usePagination();\n\n  const issuedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[params.network]),\n  ).filter((item) =>\n    profile?.issuedAssets\n      .slice(issuedAssetsRange[0], issuedAssetsRange[1] + 1)\n      .some((i) => i === item.address),\n  );\n\n  const issuedCardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].issuedStatus,\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.issuedAssets.length === 0) return;\n    dispatch(\n      fetchIssuedCards({\n        addresses: profile.issuedAssets.slice(\n          issuedAssetsRange[0],\n          issuedAssetsRange[1] + 1,\n        ),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, issuedAssetsRange]);\n\n  const ownedCardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].ownedStatus,\n  );\n\n  const ownedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[params.network]),\n  ).filter((item) =>\n    profile?.ownedAssets\n      .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1)\n      .some((i) => i.assetAddress === item.address),\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.ownedAssets.length === 0) return;\n    dispatch(\n      fetchOwnedCards({\n        addresses: profile.ownedAssets\n          .map((asset) => asset.assetAddress)\n          .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, ownedAssetsRange]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link, i) => {\n        const linkTitle = link.title.toLowerCase();\n        return link.url !== '' ? (\n          <StyledProfileLinks key={i}>\n            <StyledLinkIconWrapper\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <StyledLinkIcon\n                src={\n                  linkTitle === 'twitter'\n                    ? Twitter\n                    : linkTitle === 'instagram'\n                    ? Instagram\n                    : linkTitle === 'facebook'\n                    ? Facebook\n                    : Globe\n                }\n              />\n            </StyledLinkIconWrapper>\n          </StyledProfileLinks>\n        ) : (\n          <></>\n        );\n      }),\n    [profile?.links],\n  );\n\n  // const shareButtonHandler = useCallback(async () => {\n  //   try {\n  //     if (navigator.userAgent.includes('Safari')) {\n  //       throw new Error('Safari share list disabled');\n  //     }\n\n  //     await navigator.share({\n  //       title: `Fanzone.io Universal Profile – ${profile && profile.address}`,\n  //       text: `This is Fanzone.io's Universal Profile page for ${\n  //         profile && profile.address\n  //       }`,\n  //       url: `${window.location.origin}/#${pathname}`,\n  //     });\n  //     console.log('shared successfully');\n  //   } catch (err) {\n  //     onPresentShareModal();\n  //     console.error('Error: ' + err);\n  //   }\n  // }, [pathname, profile]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.add, profile]);\n\n  const {\n    handlePresent: onPresentSettingModal,\n    onDismiss: onDismissSettingModal,\n  } = useModal(\n    profile && (\n      <ProfileSettingModal\n        profile={profile}\n        onDismiss={() => onDismissSettingModal()}\n      />\n    ),\n    'Profile Settings Modal',\n    'Profile Settings',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardsModal,\n    onDismiss: onDismissTransferCardsModal,\n  } = useModal(\n    <TransferCardsModal\n      profile={{\n        address: profile?.address ? profile.address : '',\n        owner: profile?.owner ? profile.owner : '',\n        isOwnerKeyManager: profile?.isOwnerKeyManager\n          ? profile.isOwnerKeyManager\n          : false,\n        ownedAssets: profile?.ownedAssets ? profile.ownedAssets : [],\n      }}\n      onDismiss={() => onDismissTransferCardsModal()}\n      network={params.network}\n    />,\n    'Cards Transfer Modal',\n    'Transfer Card',\n  );\n\n  const {\n    handlePresent: onPresentProfileEditModal,\n    onDismiss: onDismissProfileEditModal,\n  } = useModal(\n    <ProfileEditModal\n      profile={profile ? profile : ({} as IProfile)}\n      onDismiss={() => onDismissProfileEditModal()}\n    />,\n    'Profile Edit Modal',\n    'Profile Edit',\n  );\n\n  const {\n    handlePresent: onPresentWithdrawFundsModal,\n    onDismiss: onDismissWithdrawFundsModal,\n  } = useModal(\n    profile && (\n      <WithdrawFundsModal\n        profile={profile}\n        network={params.network}\n        onDismiss={() => onDismissWithdrawFundsModal()}\n      />\n    ),\n    'Withdraw Funds Modal',\n    'Withdraw Funds',\n  );\n\n  const { handlePresent: onPresentShareModal, onDismiss: onDismissShareModal } =\n    useModal(\n      <ShareReferModal\n        network={params.network}\n        pathName={pathname}\n        onDismiss={() => onDismissShareModal()}\n      />,\n      'Profile Share Modal',\n      'Share Profile',\n    );\n\n  return (\n    <StyledProfileDetails>\n      {profileStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {profileError ? (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          ) : (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrapper>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrapper>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : params.add,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrapper>\n                    <StyledProfileNameBioWrapper>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledShareProfileHolder>\n                        {renderLinks}\n                        <StyledShareProfileWrapper>\n                          <StyledShareProfileButton\n                            onClick={onPresentShareModal}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            <HideOnScreen size=\"lg\">\n                              Share profile{' '}\n                              {!navigator['share'] && (\n                                <StyledDropDownIcon src={DropDownIcon} />\n                              )}\n                            </HideOnScreen>\n                          </StyledShareProfileButton>\n                        </StyledShareProfileWrapper>\n                      </StyledShareProfileHolder>\n                      {(canAddPermissions || canSetData) && canTransfer && (\n                        <StyledProfileSettingButton\n                          onClick={onPresentSettingModal}\n                        >\n                          <StyledSettingIcon src={SettingIcon} />\n                        </StyledProfileSettingButton>\n                      )}\n                    </StyledProfileNameBioWrapper>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{params.add}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrapper>\n              {profile &&\n                account &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton\n                    onClick={onPresentTransferCardsModal}\n                  >\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n              {signer &&\n                profile &&\n                account &&\n                (canSetData ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenEditProfileModal\n                    onClick={onPresentProfileEditModal}\n                  >\n                    Edit Profile\n                  </StyledOpenEditProfileModal>\n                )}\n              {canTransferValue && (\n                <StyledWitdrawFundsButton onClick={onPresentWithdrawFundsModal}>\n                  Withdraw Funds\n                </StyledWitdrawFundsButton>\n              )}\n              <StyledAssetsWrapper>\n                {profile && profile.issuedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Issued Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={issuedCardStatus}\n                      components={issuedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.issuedAssets.length}\n                      setComponentsRange={setIssuedAssetsRange}\n                    />\n                  </>\n                )}\n                {/* @TODO: Change names of components StyledProfilesHeader and StyledProfileHeading */}\n                {profile && profile.ownedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Owned Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={ownedCardStatus}\n                      components={ownedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.ownedAssets.length}\n                      setComponentsRange={setOwnedAssetsRange}\n                    />\n                  </>\n                )}\n              </StyledAssetsWrapper>\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n"],"sourceRoot":""}