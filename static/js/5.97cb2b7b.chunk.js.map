{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","features/pagination/styles.ts","hooks/useViewPort/useViewPort.ts","components/ModalOverlay/styles.ts","components/ModalOverlay/ModalOverlay.tsx","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/styles.ts","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","hooks/usePaginate/usePaginate.ts","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/AssetDetails.tsx","utility/permissions.ts"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","StyledPaginationWrapper","StyledAssetsHeader","StyledAssetsHeading","h1","StyledAssetsWrapper","md","lg","xl","StyledPaginationControls","StyledNextButton","button","StyledPreviousButton","StyledNextIcon","StyledPrevIcon","StyledPageNumButton","active","useViewPort","useState","window","innerWidth","screenWidth","setScreenWidth","useEffect","handleSize","addEventListener","removeEventListener","StyledModalOverlay","StyledModal","StyledCloseModalButton","StyledCloseButtonIcon","ModalOverlay","children","onClose","modalRef","useRef","useOutsideClick","ref","onClick","CloseIcon","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","mint","price","slice","StyledBuyCardModalContent","StyledModalHeader","StyledInfoText","StyledButtonGroup","StyledBuyButton","StyledCancelButton","BuyCardModal","StyledSellCardModalContent","StyledInputGroup","StyledPriceLabel","StyledPriceInput","input","StyledTokenSelectorDropDown","select","StyledSetPriceButton","SellCardModal","ownerProfile","whiteListedTokens","setWhiteListedTokens","amount","tokenAddress","sellForm","setSellForm","useSigner","signer","data","changeHandler","event","currentTarget","value","setCardForSale","a","isOwnerKeyManager","KeyManagerApi","setCardMarketViaKeyManager","owner","LSP4DigitalAssetApi","setMarketViaUniversalProfile","fetchAcceptedTokens","then","res","catch","step","onChange","map","item","i","symbol","StyledTabsHeader","StyledTabsLabel","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","content","StyledHolderPagination","StyledHolderPaginationGridContainer","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","totalItems","currentPage","setCurrentPage","pageCount","Math","ceil","limit","range","from","push","start","end","paginationGroup","usePaginate","allProfiles","selectUserIds","holders","selectAllUsersItems","filter","some","STATUS","LOADING","addresses","forEach","includes","fetchAssetHolders","changePage","pageNumber","Number","textContent","renderHolders","holder","findBalanceOf","id","getContent","dataTip","disabled","PrevIcon","NextIcon","StyledDesktopCreatorsAccordionWrapper","$expanded","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","expand","setExpand","AccordionToggleIcon","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","selectCardById","useAccount","account","ownerStatus","status","creators","cardError","cards","error","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","currentIndex","setCurrentIndex","openBuyModal","setOpenBuyModal","openSellModal","setOpenSellModal","ownedTokenIds","IDLE","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","indexOf","toString","ls8MetaData","fetchMetaDataForTokenId","tokenId","fetchAssetCreator","clearState","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","permissionSet","addressToCheck","_currentUsersPermissionsSet","x","undefined","permissions","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","label","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","marketsForOwnedTokens","markets","currentMintMarket","urlTokenIdMarket","cardInfo","valueType","totalSupply","renderOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","WethIcon","minimumAmount","toNumber","renderCardProperties","attributes","trait_type","color","image","href","exploreUrl","target","rel","previousIndex","BackwardsIcon","nextIndex","ForwardsIcon","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.97cb2b7b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '212px' : '117px')};\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledPaginationWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledAssetsHeader = styled.div`\n  padding-top: 20px;\n  display: flex;\n  text-transform: capitalize;\n`;\n\nexport const StyledAssetsHeading = styled.h1`\n  font-size: 24px;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin-right: auto;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  padding: 20px 0 20px 0;\n  column-gap: 20px;\n  row-gap: 20px;\n  grid-auto-flow: unset;\n  justify-items: center;\n\n  @media ${({ theme }) => theme.screen.md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const StyledPaginationControls = styled.div`\n  display: flex;\n  column-gap: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n`;\n\nexport const StyledNextButton = styled.button`\n  padding: 0 8px 0 8px;\n`;\n\nexport const StyledPreviousButton = styled(StyledNextButton)``;\n\nexport const StyledNextIcon = styled.img``;\n\nexport const StyledPrevIcon = styled.img``;\n\nexport const StyledPageNumButton = styled.button<{ active?: boolean }>`\n  padding: 2px 8px 2px 8px;\n  background: ${({ active }) => (active ? '#BCBCBC' : '')};\n  border-radius: 3px;\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useViewPort = () => {\n  const [screenWidth, setScreenWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const handleSize = () => {\n      setScreenWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleSize);\n\n    return () => window.removeEventListener('resize', handleSize);\n  }, []);\n\n  return { screenWidth };\n};\n","import styled from 'styled-components';\n\nexport const StyledModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const StyledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(49, 49, 49, 1);\n  border: 1px solid rgba(170, 170, 170, 1);\n  margin: auto;\n  padding: 1.5em 1em;\n  width: 100%;\n  max-width: 25em;\n`;\n\nexport const StyledCloseModalButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 1em 1em 0 0;\n`;\n\nexport const StyledCloseButtonIcon = styled.img``;\n","import React, { ReactNode, useRef } from 'react';\nimport { CloseIcon } from '../../assets';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport {\n  StyledCloseButtonIcon,\n  StyledCloseModalButton,\n  StyledModal,\n  StyledModalOverlay,\n} from './styles';\n\ninterface IProps {\n  children: ReactNode;\n  onClose: () => void;\n}\n\nexport const ModalOverlay: React.FC<IProps> = ({ children, onClose }) => {\n  const modalRef = useRef(null);\n  useOutsideClick(modalRef, onClose);\n  return (\n    <StyledModalOverlay>\n      <StyledModal ref={modalRef}>\n        <StyledCloseModalButton onClick={onClose}>\n          <StyledCloseButtonIcon src={CloseIcon} alt=\"\" />\n        </StyledCloseModalButton>\n        {children}\n      </StyledModal>\n    </StyledModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import { ModalOverlay } from '../../../components/ModalOverlay';\nimport { ICard } from '../../../services/models';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledCancelButton,\n  StyledInfoText,\n  StyledModalHeader,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price?: number;\n  cardImg: string;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n}: IProps) => {\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledBuyCardModalContent>\n        <StyledModalHeader>BUY CARD</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={price}\n          cardImg={cardImg}\n        />\n        <StyledInfoText>\n          Do you confirm the purchase of this card mint for xxx WETH?\n        </StyledInfoText>\n        <StyledButtonGroup>\n          <StyledBuyButton>Buy</StyledBuyButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledBuyCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSigner } from 'wagmi';\nimport { NetworkName } from '../../../boot/types';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { LSP4DigitalAssetApi } from '../../../services/controllers/LSP4DigitalAsset';\nimport { KeyManagerApi } from '../../../services/controllers/KeyManager';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledCancelButton,\n  StyledInputGroup,\n  StyledModalHeader,\n  StyledPriceInput,\n  StyledPriceLabel,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile } from '../../../services/models';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price?: number;\n  cardImg: string;\n  ownerProfile: IProfile;\n}\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const [whiteListedTokens, setWhiteListedTokens] =\n    useState<{ tokenAddress: string; symbol: string }[]>();\n  const [sellForm, setSellForm] = useState({\n    amount: 0,\n    tokenAddress: whiteListedTokens ? whiteListedTokens[0].tokenAddress : '',\n  });\n  const [{ data: signer }] = useSigner();\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const setCardForSale = async () => {\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        params.add,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        sellForm.tokenAddress,\n        sellForm.amount,\n        signer,\n      );\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        address,\n        ownerProfile.address,\n        mint,\n        sellForm.tokenAddress,\n        sellForm.amount,\n        signer,\n      );\n    }\n  };\n\n  useEffect(() => {\n    LSP4DigitalAssetApi.fetchAcceptedTokens(params.add, params.network)\n      .then((res) => {\n        setWhiteListedTokens(res);\n      })\n      .catch(() => {});\n  }, [params.add, params.network]);\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledSellCardModalContent>\n        <StyledModalHeader>SET CARD FOR SALE</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={price}\n          cardImg={cardImg}\n        />\n        <StyledInputGroup>\n          <StyledPriceLabel>Your price</StyledPriceLabel>\n          <StyledPriceInput\n            name=\"amount\"\n            type=\"number\"\n            step=\"any\"\n            onChange={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            <option>Token</option>\n            {whiteListedTokens?.map((item, i) => (\n              <option key={i} value={item.tokenAddress}>\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n        <StyledButtonGroup>\n          <StyledSetPriceButton onClick={setCardForSale}>\n            Set for sale\n          </StyledSetPriceButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledSellCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledHolderPagination = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 20px;\n`;\n\nexport const StyledHolderPaginationGridContainer = styled.div`\n  display: grid;\n  padding: 15px 0;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  row-gap: 20px;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { NextIcon, PrevIcon } from '../../../assets';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport {\n  StyledNextButton,\n  StyledNextIcon,\n  StyledPageNumButton,\n  StyledPaginationControls,\n  StyledPrevIcon,\n  StyledPreviousButton,\n} from '../../../features/pagination/styles';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n  selectUserIds,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePaginate } from '../../../hooks/usePaginate';\nimport { STATUS } from '../../../utility';\nimport {\n  StyledHolderPagination,\n  StyledHolderPaginationGridContainer,\n} from './styles';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const {\n    currentPage,\n    setCurrentPage,\n    pageCount,\n    paginationGroup,\n    start,\n    end,\n  } = usePaginate({ totalItems: holdersAddresses.length });\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses.slice(start, end).some((i) => {\n      return i === item.address;\n    });\n  });\n\n  useMemo(() => {\n    if (holderStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    holdersAddresses.slice(start, end).forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetHolders({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allProfiles, dispatch, end, holdersAddresses, params.network, start]);\n\n  const nextPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === pageCount ? currentPage : currentPage + 1,\n    );\n  };\n\n  const previousPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === 1 ? currentPage : currentPage - 1,\n    );\n  };\n\n  const changePage = (event: React.MouseEvent) => {\n    const pageNumber = Number(event.currentTarget.textContent);\n    setCurrentPage(pageNumber);\n  };\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <StyledHolderPagination>\n      <StyledHolderPaginationGridContainer>\n        {renderHolders}\n      </StyledHolderPaginationGridContainer>\n      {pageCount > 1 && (\n        <StyledPaginationControls>\n          <StyledPreviousButton\n            onClick={previousPage}\n            disabled={currentPage === 1 ? true : false}\n          >\n            <StyledPrevIcon src={PrevIcon} alt=\"\" />\n          </StyledPreviousButton>\n          {currentPage >= 3 && pageCount > 3 && (\n            <>\n              <StyledPageNumButton onClick={changePage}>1</StyledPageNumButton>\n              <p>...</p>\n            </>\n          )}\n          {paginationGroup().map((value) => (\n            <StyledPageNumButton\n              key={value}\n              active={currentPage === value ? true : false}\n              onClick={changePage}\n            >\n              {value}\n            </StyledPageNumButton>\n          ))}\n          {currentPage <= pageCount - 2 && pageCount > 3 && (\n            <>\n              <p>...</p>\n              <StyledPageNumButton onClick={changePage}>\n                {pageCount}\n              </StyledPageNumButton>\n            </>\n          )}\n          <StyledNextButton\n            onClick={nextPage}\n            disabled={currentPage === pageCount ? true : false}\n          >\n            <StyledNextIcon src={NextIcon} alt=\"\" />\n          </StyledNextButton>\n        </StyledPaginationControls>\n      )}\n    </StyledHolderPagination>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { useViewPort } from '../useViewPort';\n\ninterface IProps {\n  totalItems: number;\n}\n\nexport const usePaginate = ({ totalItems }: IProps) => {\n  const { screenWidth } = useViewPort();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const { pageCount, limit } = useMemo(() => {\n    if (screenWidth > 1280) {\n      return {\n        pageCount: Math.ceil(totalItems / 12),\n        limit: 12,\n      };\n    }\n    if (screenWidth > 1024) {\n      return {\n        pageCount: Math.ceil(totalItems / 10),\n        limit: 10,\n      };\n    }\n    if (screenWidth > 768) {\n      return {\n        pageCount: Math.ceil(totalItems / 8),\n        limit: 8,\n      };\n    }\n\n    if (screenWidth > 640) {\n      return {\n        pageCount: Math.ceil(totalItems / 6),\n        limit: 6,\n      };\n    }\n\n    return {\n      pageCount: Math.ceil(totalItems / 4),\n      limit: 4,\n    };\n  }, [screenWidth, totalItems]);\n\n  const range = (from: number, to: number) => {\n    const range: number[] = [];\n    let i = from;\n    while (i <= to) {\n      range.push(i);\n      i++;\n    }\n    return range;\n  };\n\n  const paginationGroup = () => {\n    if (pageCount === 2) {\n      return range(1, 2);\n    }\n    switch (currentPage) {\n      case 1:\n        return range(currentPage, currentPage + 2);\n      case pageCount:\n        return range(currentPage - 2, currentPage);\n      default:\n        return range(currentPage - 1, currentPage + 1);\n    }\n  };\n\n  const start = useMemo(\n    () => currentPage * limit - limit,\n    [currentPage, limit],\n  );\n  const end = useMemo(() => start + limit, [limit, start]);\n\n  return {\n    currentPage,\n    setCurrentPage,\n    pageCount,\n    limit,\n    paginationGroup,\n    start,\n    end,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  WethIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledTokenIcon,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledMakeOfferButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { getChainExplorer, STATUS } from '../../utility';\nimport { BuyCardModal } from './BuyCardModal';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [openBuyModal, setOpenBuyModal] = useState<boolean>(false);\n  const [openSellModal, setOpenSellModal] = useState<boolean>(false);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const dispatch = useAppDispatch();\n\n  // const tokenIdForSale = useMemo(\n  //   async () =>\n  //     params.id &&\n  //     (await LSP4DigitalAssetApi.getTokenSale(\n  //       params.add,\n  //       Number(params.id),\n  //       params.network,\n  //     )),\n  //   [params.add, params.network, params.id],\n  // );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(\n    () =>\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      ),\n    [currentIndex, marketsForOwnedTokens, ownedTokenIds],\n  );\n\n  const urlTokenIdMarket = useMemo(\n    () =>\n      asset?.markets.find((item) => Number(item.tokenId) === Number(params.id)),\n    [asset?.markets, params.id],\n  );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: '' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderOwner = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledTokenIcon src={WethIcon} alt=\"\" />\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount.toNumber()}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledBuyButton onClick={() => setOpenBuyModal(!openBuyModal)}>\n              Buy now\n            </StyledBuyButton>\n            <StyledMakeOfferButton>Make offer</StyledMakeOfferButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledTokenIcon src={WethIcon} alt=\"\" />\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Set price\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledTokenIcon src={WethIcon} alt=\"\" />\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount.toNumber()}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton>Withdraw from sale</StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentMintMarket,\n    currentUsersPermissionsSet,\n    openBuyModal,\n    openSellModal,\n    ownedTokenIds,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              {openBuyModal && asset && (\n                <BuyCardModal\n                  address={params.add}\n                  mint={1234}\n                  price={urlTokenIdMarket?.minimumAmount.toNumber()}\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0].image}\n                  onClose={() => setOpenBuyModal(!openBuyModal)}\n                />\n              )}\n              {openSellModal && asset && ownedTokenIds && activeProfile && (\n                <SellCardModal\n                  ownerProfile={activeProfile}\n                  address={params.add}\n                  mint={ownedTokenIds[currentIndex]}\n                  price={urlTokenIdMarket?.minimumAmount.toNumber()}\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0].image}\n                  onClose={() => setOpenSellModal(!openSellModal)}\n                />\n              )}\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <StyledMintControls>\n                      <StyledMintSkipButton onClick={previousMint}>\n                        <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                      <StyledMintSliderIndex>\n                        {currentIndex + 1}/{ownedTokenIds?.length}\n                      </StyledMintSliderIndex>\n                      <StyledMintSkipButton onClick={nextMint}>\n                        <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                    </StyledMintControls>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Issuer', content: renderOwner },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  issuerContent={renderOwner}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                <p>Market in progress...</p>\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined =>\n  permissionSet.find(\n    (x) => x.address.toLowerCase() === addressToCheck.toLowerCase(),\n  );\n"],"sourceRoot":""}