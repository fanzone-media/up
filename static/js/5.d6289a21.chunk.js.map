{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/useModal/useModal.ts","hooks/useTransferLsp8Token/useTransferLsp8Token.ts","hooks/usePagination/usePagination.ts","components/InputField/styles.ts","utility/permissions.ts","hooks/useLocalStorage/useLocalStorage.ts","components/InputField/InputField.tsx","hooks/useSellBuyLsp8Token/useSellBuyLsp8Token.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useErc20/useErc20.ts","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","useModal","content","key","persist","useContext","ModalContext","isOpen","onDismiss","onPresent","handlePresent","useCallback","useTransferLsp8Token","cardAddress","toAddress","tokenId","profile","callback","useState","transfering","setTransfering","error","setError","useSigner","signer","data","transferCard","a","isOwnerKeyManager","KeyManagerApi","transferCardViaKeyManager","owner","then","catch","finally","LSP3ProfileApi","transferCardViaUniversalProfile","usePagination","range","setRange","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","useLocalStorage","KEY_NAME","getItems","values","localStorage","getItem","JSON","parse","setItem","upAddress","prevValue","newValue","stringify","InputField","label","changeHandler","step","onChange","useSellBuyLsp8Token","useAccount","buyFromMarket","amount","universalProfileAddress","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","buyFromCardMarketViaKeyManager","LSP4DigitalAssetApi","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","setForSale","ownerProfile","mint","tokenAddress","decimals","setCardMarketViaKeyManager","convertPrice","setMarketViaUniversalProfile","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","price","slice","toString","StyledBuyCardModalContent","StyledInfoText","StyledToggleButtonGroup","StyledToggleButton","button","$active","StyledSelectInputContainer","StyledUpAddressSelectInput","select","StyledUpAddressSelectLabel","StyledButtonGroup","StyledBuyButton","StyledCancelButton","StyledApproveButton","BuyCardModal","onClose","whiteListedTokens","approve","account","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","spenderAddress","buyer","checkBalanceOf","checkAllowance","allowance","approveTokenViaKeyManager","approveTokenViaUniversalProfile","ownerAddress","balanceOf","useErc20","savedProfiles","savedProfilesAddresses","Object","keys","setUpAddress","toggleEOABuy","setToggleEOABuy","marketToken","i","displayPrice","onClick","map","item","value","event","currentTarget","undefined","symbol","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","StyledSetPriceButton","SellCardModal","marketTokenAddress","sellForm","setSellForm","selectedTokenDecimals","selectedToken","marketTokenDecimals","useEffect","disabled","StyledTabsHeader","StyledTabsLabel","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","STATUS","LOADING","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","status","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","setExpand","AccordionToggleIcon","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","StyledCardMarketBuy","CardMarket","cardMarkets","onBuyClick","findDecimals","findSymbol","market","Number","minimumAmount","acceptedToken","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","ownerStatus","creators","cardError","cards","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","currentIndex","setCurrentIndex","selectedMarketTokenId","setSelectedMarketTokenId","ownedTokenIds","marketsForOwnedTokens","markets","currentMintMarket","token","selectedMintMarket","ls8MetaData","image","onDismissBuyCardModal","onPresentBuyCardModal","onDismissSellCardModal","onPresentSellCardModal","IDLE","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","indexOf","push","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","cardInfo","valueType","totalSupply","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","color","href","exploreUrl","target","rel","previousIndex","BackwardsIcon","nextIndex","ForwardsIcon","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.d6289a21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useCallback, useContext } from 'react';\nimport { ModalContext, IOnPresent } from '../../context/ModalProvider';\n\nexport const useModal = (\n  ...[content, key, persist]: Parameters<IOnPresent>\n) => {\n  const { isOpen, onDismiss, onPresent } = useContext(ModalContext);\n\n  const handlePresent = useCallback(() => {\n    onPresent(content, key, persist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content, key, onPresent]);\n\n  return { handlePresent, onDismiss, isOpen };\n};\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [transfering, setTransfering] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const transferCard = async () => {\n    setTransfering(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    }\n  };\n\n  return { transferCard, transfering, error };\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import { IPermissionSet } from '../../services/models';\nimport { Address } from '../../utils/types';\n\ntype Item = {\n  [key: string]: IPermissionSet[];\n};\n\nexport const useLocalStorage = () => {\n  const KEY_NAME = 'fanzone.universalProfiles';\n\n  const setItem = (upAddress: Address, permissionSet: IPermissionSet[]) => {\n    const prevValue = getItems();\n    const newValue = {\n      ...prevValue,\n      [`${upAddress.toLowerCase()}`]: permissionSet,\n    };\n    localStorage.setItem(KEY_NAME, JSON.stringify(newValue));\n  };\n\n  const getItems = () => {\n    const values = localStorage.getItem(KEY_NAME);\n    if (!values) return;\n    return JSON.parse(values) as Item;\n  };\n\n  return { setItem, getItems };\n};\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const InputField = ({ name, label, type, changeHandler }: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n      />\n    </StyledInputContainer>\n  );\n};\n","import { BigNumber, BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice } from '../../utility';\n\nexport const useSellBuyLsp8Token = (\n  assetAddress: string,\n  network: NetworkName,\n) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [{ data: account }] = useAccount();\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n  };\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n  ) => {\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n  };\n\n  return { buyFromMarket, setForSale };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledToggleButtonGroup = styled.div`\n  border-radius: 0.5em;\n  width: max-content;\n  border: 1px solid rgba(153, 153, 153, 1);\n  margin: 0 auto;\n\n  button {\n    border-right: 1px solid rgba(153, 153, 153, 1);\n\n    :first-child {\n      border-radius: 0.4em 0 0 0.4em;\n    }\n\n    :last-child {\n      border-right: none;\n      border-radius: 0 0.4em 0.4em 0;\n    }\n  }\n`;\n\nexport const StyledToggleButton = styled.button<{ $active: boolean }>`\n  padding: 0.5em;\n  color: ${({ $active }) => ($active ? 'rgba(255, 129, 1, 1)' : 'white')};\n  background-color: ${({ $active }) =>\n    $active ? 'rgba(255, 255, 255, 0.2)' : ''};\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n\nexport const StyledApproveButton = styled(StyledCancelButton)``;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\nimport { useUrlParams } from '../../../hooks/useUrlParams';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledApproveButton,\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledCancelButton,\n  StyledInfoText,\n  StyledModalHeader,\n  StyledSelectInputContainer,\n  StyledToggleButton,\n  StyledToggleButtonGroup,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n  network,\n}: IProps) => {\n  const { approve } = useErc20({ tokenAddress, network });\n  const { buyFromMarket } = useSellBuyLsp8Token(address, network);\n  const { getItems } = useLocalStorage();\n  const savedProfiles = getItems();\n  const savedProfilesAddresses = savedProfiles\n    ? Object.keys(savedProfiles)\n    : null;\n  const [upAddress, setUpAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [toggleEOABuy, setToggleEOABuy] = useState<boolean>(false);\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUpAddress(event.currentTarget.value);\n  };\n\n  return (\n    <StyledBuyCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n        cardImg={cardImg}\n      />\n      <StyledToggleButtonGroup>\n        <StyledToggleButton\n          $active={!toggleEOABuy}\n          onClick={() => setToggleEOABuy(false)}\n        >\n          With UP\n        </StyledToggleButton>\n        <StyledToggleButton\n          $active={toggleEOABuy}\n          onClick={() => setToggleEOABuy(true)}\n        >\n          With EOA\n        </StyledToggleButton>\n      </StyledToggleButtonGroup>\n      {!toggleEOABuy &&\n        (savedProfilesAddresses ? (\n          <StyledSelectInputContainer>\n            <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n            <StyledUpAddressSelectInput>\n              {savedProfilesAddresses.map((item) => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n            </StyledUpAddressSelectInput>\n          </StyledSelectInputContainer>\n        ) : (\n          <InputField\n            name=\"universalProfileAddress\"\n            label=\"UP Address\"\n            type=\"text\"\n            changeHandler={changeHandler}\n          />\n        ))}\n      <StyledApproveButton\n        onClick={async () =>\n          await approve(\n            address,\n            price,\n            network,\n            !toggleEOABuy ? upAddress : undefined,\n          )\n        }\n      >\n        Check balance & Approve\n      </StyledApproveButton>\n      <StyledInfoText>\n        Do you confirm the purchase of this card mint for{' '}\n        {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n        {marketToken ? marketToken.symbol : ''}?\n      </StyledInfoText>\n      <StyledButtonGroup>\n        <StyledBuyButton\n          onClick={async () =>\n            await buyFromMarket(\n              address,\n              price,\n              mint,\n              !toggleEOABuy ? upAddress : undefined,\n            )\n          }\n        >\n          Buy\n        </StyledBuyButton>\n      </StyledButtonGroup>\n    </StyledBuyCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [error, setError] = useState();\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n    const balance = await checkBalanceOf(buyer);\n\n    const allowance =\n      balance >= amount && (await checkAllowance(buyer, spenderAddress));\n    if (allowance && allowance >= amount) {\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    } else {\n      await erc20Contract.approve(spenderAddress, amount);\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledCancelButton,\n  StyledInputGroup,\n  StyledModalHeader,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n  network,\n}: IProps) => {\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale } = useSellBuyLsp8Token(address, network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  useEffect(() => {}, []);\n\n  return (\n    <StyledSellCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={\n          price &&\n          displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n        }\n        cardImg={cardImg}\n      />\n      {whiteListedTokens && (\n        <StyledInputGroup>\n          <InputField\n            name=\"amount\"\n            label=\"Your Price\"\n            type=\"number\"\n            changeHandler={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            <option>Token</option>\n            {whiteListedTokens?.map((item, i) => (\n              <option key={i} value={item.tokenAddress}>\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n      )}\n      <StyledButtonGroup>\n        <StyledSetPriceButton\n          onClick={() =>\n            setForSale(\n              address,\n              ownerProfile,\n              mint,\n              sellForm.tokenAddress,\n              sellForm.amount,\n              selectedTokenDecimals,\n            )\n          }\n          disabled={!whiteListedTokens || whiteListedTokens?.length === 0}\n        >\n          Set for sale\n        </StyledSetPriceButton>\n      </StyledButtonGroup>\n    </StyledSellCardModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      {ownerContent && (\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Owner</StyledHeaderTitle>\n          </StyledHeader>\n          {ownerContent}\n        </StyledIssuerContainer>\n      )}\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledCardMarket,\n  StyledCardMarketBuy,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset?: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n  onBuyClick: (tokenId: number) => void;\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n  onBuyClick,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy>\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { BuyCardModal } from './BuyCardModal';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\nimport { useModal } from '../../hooks/useModal';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const history = useHistory();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [selectedMarketTokenId, setSelectedMarketTokenId] = useState<\n    number | null\n  >(null);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset?.markets.find(\n      (item) => Number(item.tokenId) === selectedMarketTokenId,\n    );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, selectedMarketTokenId]);\n\n  const dispatch = useAppDispatch();\n\n  const { transferCard } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    ownedTokenIds ? ownedTokenIds[currentIndex] : 0,\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const {\n    handlePresent: onPresentBuyCardModal,\n    onDismiss: onDismissBuyCardModal,\n  } = useModal(\n    asset && selectedMintMarket && (\n      <BuyCardModal\n        address={params.add}\n        mint={Number(selectedMintMarket.tokenId)}\n        price={selectedMintMarket.minimumAmount}\n        tokenAddress={selectedMintMarket.acceptedToken}\n        whiteListedTokens={asset.whiteListedTokens}\n        cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n        onClose={() => {\n          setSelectedMarketTokenId(null);\n          onDismissBuyCardModal();\n        }}\n        network={params.network}\n      />\n    ),\n    'Buy Card Modal',\n    'Buy Card',\n  );\n\n  const {\n    handlePresent: onPresentSellCardModal,\n    onDismiss: onDismissSellCardModal,\n  } = useModal(\n    asset && ownedTokenIds && activeProfile && (\n      <SellCardModal\n        ownerProfile={activeProfile}\n        address={params.add}\n        mint={ownedTokenIds[currentIndex]}\n        price={currentMintMarket ? currentMintMarket.minimumAmount : undefined}\n        marketTokenAddress={\n          currentMintMarket ? currentMintMarket.acceptedToken : undefined\n        }\n        cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n        onClose={() => onDismissSellCardModal()}\n        whiteListedTokens={asset.whiteListedTokens}\n        network={params.network}\n      />\n    ),\n    'Sell Card Modal',\n    'Sell Card',\n  );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledBuyButton\n              onClick={() => {\n                setSelectedMarketTokenId(Number(currentMintMarket.tokenId));\n                onPresentBuyCardModal();\n              }}\n            >\n              Buy now\n            </StyledBuyButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={onPresentSellCardModal}>\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              Transfer to metamask account\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton onClick={onPresentSellCardModal}>\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton>Withdraw from sale</StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              Transfer to metamask account\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentMintMarket,\n    currentUsersPermissionsSet,\n    onPresentBuyCardModal,\n    onPresentSellCardModal,\n    ownedTokenIds,\n    transferCard,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <StyledMintControls>\n                      <StyledMintSkipButton onClick={previousMint}>\n                        <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                      <StyledMintSliderIndex>\n                        {currentIndex + 1}/{ownedTokenIds?.length}\n                      </StyledMintSliderIndex>\n                      <StyledMintSkipButton onClick={nextMint}>\n                        <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                    </StyledMintControls>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Owner', content: renderCurrentMintOwner },\n                    { name: 'Issuer', content: renderIssuer },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  ownerContent={activeProfile && renderCurrentMintOwner}\n                  issuerContent={renderIssuer}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                <CardMarket\n                  asset={asset}\n                  cardMarkets={asset?.markets}\n                  whiteListedTokens={asset?.whiteListedTokens}\n                  onBuyClick={(tokenId: number) => {\n                    onPresentBuyCardModal();\n                    setSelectedMarketTokenId(tokenId);\n                  }}\n                />\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}