{"version":3,"sources":["components/ShareReferModal/styles.ts","components/ShareReferModal/ShareReferModal.tsx","hooks/useCopyText/useCopyText.ts","hooks/useQueryParams/useQueryParams.ts","boot/types.ts","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","utility/content/text.ts","utility/file.ts","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/TransferCardModal/TransferCardsModal.tsx","pages/ProfileDetails/WithdrawFundsModal/styles.ts","pages/ProfileDetails/WithdrawFundsModal/WithdrawFundsModal.tsx","hooks/useWithdrawFunds/useWitdrawFunds.ts","components/Tabs/styles.ts","components/Tabs/Tabs.tsx","pages/AddPermissions/styles.ts","pages/AddPermissions/AddPermissions.tsx","pages/ProfileDetails/ProfileSettingModal/ProfileSettingModal.tsx","pages/ProfileDetails/ProfileDetails.tsx"],"names":["StyledShareReferModalContent","styled","div","StyledShareMessage","p","StyledSeparatorContainer","StyledDivider","span","StyledDivText","StyledShareViaLabel","StyledShareOptionsContainer","StyledShareLink","a","attrs","target","StyledInputError","ShareReferModal","network","pathName","onDismiss","getItems","useLocalStorage","selectInputRef","useRef","useState","copied","setCopied","canCopy","window","navigator","clipboard","copyText","key","text","writeText","setTimeout","useCopyText","savedProfiles","LOCAL_STORAGE_KEYS","UP","savedProfilesAddresses","Object","keys","length","referrerAddress","setReferrerAddress","customReferrerAddress","setCustomReferrerAddress","inputError","setInputError","changeHandler","event","currentTarget","value","getReferrer","isAddress","ref","defaultValue","onChange","map","item","InputField","name","label","type","onBlurHandler","variant","onClick","current","href","location","origin","src","Twitter","alt","title","Facebook","as","Link","useQueryParams","search","useLocation","useMemo","URLSearchParams","StringBoolean","StyledProfileDetails","StyledProfileDetailsContent","StyledProfileNotFound","h1","StyledProfileCoverImg","img","StyledProfileInfoWrapper","StyledProfileInfo1","StyledProfileInfo1Content","theme","screen","md","StyledProfileMediaWrapper","StyledProfileMedia","StyledProfileAddress","font","weight","light","StyledProfileNameBioWrapper","lg","StyledProfileName","h2","bolder","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledProfileSettingButton","button","StyledSettingIcon","StyledShareProfileWrapper","StyledShareIcon","StyledDropDownIcon","StyledAssetsWrapper","expand","StyledLinkIconWrapper","StyledLinkIcon","StyledOpenTransferModalButton","StyledOpenEditProfileModal","StyledWitdrawFundsButton","StyledShareProfileButton","animation","cardrender","StyledProfileImageWrapper","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","pulseAnimate","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","params","useParams","explorer","getChainExplorer","exploreUrl","rel","icon","UniversalProfileIcon","sanitizeLink","url","replace","createImageFile","fetch","response","blob","data","metadata","File","socialLinks","ProfileEditModal","profile","setTabName","linkFinder","useCallback","link","links","find","toLowerCase","useSigner","signer","error","setError","loading","setLoading","txVerification","setTxVerification","profileImage","backgroundImage","bio","description","facebook","twitter","instagram","editProfileForm","setEditProfileForm","currentProfileImages","setCurrentProfileImages","useEffect","imageChangeHandler","files","addFile","then","path","imageUrl","catch","console","log","fields","baseUrl","width","height","hash","backgroundImageHash","hashFunction","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","address","setUniversalProfileData","transaction","wait","reload","getImageUrl","includes","ExclamationIcon","color","i","fileName","accept","TransferCardsModal","ownedCards","toAddress","cardAddress","ownedAssets","assetAddress","tokenId","transferCardForm","setTransferCardForm","selectedCard","setSelectedCard","useProfile","destinationProfile","profileAddressError","getProfile","isProfileLoading","card","useTransferLsp8Token","transferCard","transferState","ProfilePreview","profileError","align","placeholder","htmlFor","ownedAsset","tokenIds","StyledWithdrawModalContent","StyledRadioLabel","$checked","StyledRadioInput","input","StyledTokenLabel","StyledBalanceWrapper","StyledBalanceLabel","StyledBalanceValue","WithdrawFundsModal","whiteListedTokensInfo","setWhiteListedTokensInfo","balances","setBalances","useAccount","account","selectedTokenInput","setSelectedTokenInput","whiteListedtokensAddresses","getWhiteListedTokenAddresses","provider","useRpcProvider","useNetwork","networkData","STATUS","IDLE","withdrawState","setWithdrawState","balanceOf","tokenAddresses","profieAddress","Promise","all","tokenContract","ERC20__factory","connect","balance","withdrawFunds","tokenAddress","amount","chain","toast","position","LOADING","KeyManagerApi","transferBalanceViaKeyManager","SUCCESSFUL","FAILED","transferBalanceViaUniversalProfile","resetState","useWitdrawFunds","fetchWhiteListedTokenInfo","LSP4DigitalAssetApi","fetchErc20TokenInfo","res","toString","decimals","selectedTokenBalance","selectedTokenDecimals","id","symbol","displayPrice","disabled","Number","TransactionStateWindow","state","transactionMessages","mainHeading","successful","failed","callback","StyledTabs","StyledTabsHeader","StyledTabsLabel","$active","Tabs","tabs","activeTab","setActiveTab","tab","visible","content","StyledAddPermissions","StyledLabel","StyledInputWrapper","StyledInputRow","StyledInput","StyledCheckboxInput","StyledPermissionInputWrapper","StyledSetPermisssionButton","AddPermissions","upAddress","addressTo","permissions","CHANGEOWNER","CHANGEPERMISSIONS","ADDPERMISSIONS","SETDATA","CALL","STATICCALL","DELEGATECALL","DEPLOY","TRANSFERVALUE","SIGN","permissionsForm","setpermissionsForm","checked","setPermissions","ethers","utils","addPermissions","ProfileSettingModal","tabName","permissionsSet","getAddressPermissionsOnUniversalProfile","permissionSet","call","TRUE","setdata","addpermissions","canTransfer","canSetData","canAddPermissions","ProfileDetails","dispatch","useAppDispatch","pathname","query","setItem","setReferrer","useSelector","selectUserById","userData","add","fetchProfile","profileStatus","status","isTablet","useMediaQuery","transfervalue","canTransferValue","get","resetUserDataSliceInitialState","resetCardsSliceInitialState","currentProfile","fetchProfileByAddress","usePagination","issuedAssetsRange","range","setIssuedAssetsRange","setRange","ownedAssetsRange","setOwnedAssetsRange","issuedCards","selectAllCardItems","cards","filter","issuedAssets","slice","some","issuedCardStatus","fetchIssuedCards","addresses","ownedCardStatus","fetchOwnedCards","asset","renderLinks","linkTitle","Instagram","Globe","scrollTo","useModal","onDismissSettingModal","onPresentSettingModal","handlePresent","onDismissTransferCardsModal","onPresentTransferCardsModal","onDismissProfileEditModal","onPresentProfileEditModal","onDismissWithdrawFundsModal","onPresentWithdrawFundsModal","onDismissShareModal","onPresentShareModal","makeBlockie","ShareIcon","size","DropDownIcon","SettingIcon","components","digitalCard","MetaCard","nbrOfAllComponents","setComponentsRange"],"mappings":"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","file":"static/js/6.af9d626c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledShareReferModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 1em;\n`;\n\nexport const StyledShareMessage = styled.p``;\n\nexport const StyledSeparatorContainer = styled.div`\n  display: flex;\n  width: 100%;\n  column-gap: 0.5em;\n`;\n\nexport const StyledDivider = styled.span`\n  border: 0.01em solid rgba(153, 153, 153, 1);\n  margin: auto 0;\n  width: 100%;\n`;\n\nexport const StyledDivText = styled.p``;\n\nexport const StyledShareViaLabel = styled.p``;\n\nexport const StyledShareOptionsContainer = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  display: flex;\n  align-items: center;\n  column-gap: 0.25em;\n`;\n\nexport const StyledInputError = styled.p`\n  color: red;\n`;\n","import { useRef, useState } from 'react';\nimport { isAddress } from 'web3-utils';\nimport { Facebook, Link, Twitter } from '../../assets';\nimport { NetworkName } from '../../boot/types';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport {\n  LOCAL_STORAGE_KEYS,\n  ProfilePermissionsLocal,\n  useLocalStorage,\n} from '../../hooks/useLocalStorage';\nimport {\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from '../../pages/AssetDetails/BuyCardModal/styles';\nimport { InputField } from '../InputField';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledDivider,\n  StyledDivText,\n  StyledInputError,\n  StyledSeparatorContainer,\n  StyledShareLink,\n  StyledShareMessage,\n  StyledShareOptionsContainer,\n  StyledShareReferModalContent,\n  StyledShareViaLabel,\n} from './styles';\n\ninterface IProps {\n  network: NetworkName;\n  pathName: string;\n  onDismiss: () => void;\n}\n\nexport const ShareReferModal = ({ network, pathName, onDismiss }: IProps) => {\n  const { getItems } = useLocalStorage();\n  const selectInputRef = useRef<HTMLSelectElement>(null);\n  const { copied, copyText } = useCopyText();\n  const savedProfiles = getItems(\n    LOCAL_STORAGE_KEYS.UP,\n  ) as ProfilePermissionsLocal;\n  const savedProfilesAddresses =\n    savedProfiles && savedProfiles[network]\n      ? Object.keys(savedProfiles[network])\n      : null;\n  const [referrerAddress, setReferrerAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [customReferrerAddress, setCustomReferrerAddress] = useState<boolean>(\n    savedProfilesAddresses ? false : true,\n  );\n  const [inputError, setInputError] = useState<string>('');\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setReferrerAddress(event.currentTarget.value);\n  };\n\n  const getReferrer = () => {\n    return isAddress(referrerAddress) ? `?referrer=${referrerAddress}` : '';\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    !isAddress(referrerAddress)\n      ? setInputError('wrong address')\n      : setInputError('');\n  };\n\n  return (\n    <StyledShareReferModalContent>\n      <StyledShareMessage>\n        Share this link and participate in 1% WETH market sales that came\n        through you\n      </StyledShareMessage>\n      {savedProfilesAddresses && (\n        <StyledSelectInputContainer>\n          <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n          <StyledUpAddressSelectInput\n            ref={selectInputRef}\n            defaultValue={savedProfilesAddresses[0]}\n            onChange={changeHandler}\n          >\n            {savedProfilesAddresses.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </StyledUpAddressSelectInput>\n        </StyledSelectInputContainer>\n      )}\n      {savedProfilesAddresses && (\n        <StyledSeparatorContainer>\n          <StyledDivider />\n          <StyledDivText>Or</StyledDivText>\n          <StyledDivider />\n        </StyledSeparatorContainer>\n      )}\n      {customReferrerAddress && (\n        <InputField\n          name=\"otherAddress\"\n          label=\"Address\"\n          type=\"text\"\n          changeHandler={changeHandler}\n          onBlurHandler={onBlurHandler}\n        />\n      )}\n      {inputError && customReferrerAddress && (\n        <StyledInputError>{inputError}</StyledInputError>\n      )}\n      {savedProfilesAddresses && (\n        <StyledModalButton\n          variant=\"gray\"\n          onClick={() => {\n            if (customReferrerAddress) {\n              selectInputRef.current &&\n                setReferrerAddress(selectInputRef.current.value);\n            } else {\n              setReferrerAddress('');\n            }\n            setCustomReferrerAddress(!customReferrerAddress);\n          }}\n        >\n          {customReferrerAddress ? 'cancel input' : 'use other address'}\n        </StyledModalButton>\n      )}\n      <StyledShareViaLabel>Share Via: </StyledShareViaLabel>\n      <StyledShareOptionsContainer>\n        <StyledShareLink\n          href={`https://twitter.com/intent/tweet?url=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Twitter} alt=\"Twitter\" title=\"twitter\" />\n        </StyledShareLink>\n        <StyledShareLink\n          href={`https://www.facebook.com/sharer.php?u=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Facebook} alt=\"Facebook\" title=\"facebook\" />\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'link',\n              `${window.location.origin}/#${pathName}${getReferrer()}`,\n            )\n          }\n        >\n          <img src={Link} alt=\"Copy Link\" title=\"copy link\" />\n          {copied && copied['link'] ? 'Copied!' : 'Copy Link'}\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'embed',\n              `<iframe src=\"${window.location.origin}/#${pathName}\" title=\"Fanzone\"></iframe>`,\n            )\n          }\n        >\n          {`</>`} {copied && copied['embed'] ? 'Copied!' : 'Copy Embed'}\n        </StyledShareLink>\n      </StyledShareOptionsContainer>\n      <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n        Cancel\n      </StyledModalButton>\n    </StyledShareReferModalContent>\n  );\n};\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<{ [key: string]: boolean }>();\n\n  const copyText = (key: string, text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied({ ...copied, [key]: true });\n    setTimeout(() => {\n      setCopied({ ...copied, [key]: false });\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const useQueryParams = () => {\n  const { search } = useLocation();\n\n  return useMemo(() => new URLSearchParams(search), [search]);\n};\n","import { ICardState } from '../features/cards/types';\nimport { IUserDataSliceState } from '../features/profiles/types';\nimport { API } from '../services/api';\n\nexport type ThunkExtra = {\n  api: API;\n};\n\nexport type RootState = {\n  userData: IUserDataSliceState;\n  cards: ICardState;\n};\n\nexport type NetworkName = 'l14' | 'l16' | 'mumbai' | 'polygon' | 'ethereum';\n\nexport type AsyncReturnType<T extends (...args: any) => Promise<any>> =\n  T extends (...args: any) => Promise<infer R> ? R : any;\n\nexport type UnpackedType<T> = T extends (infer U)[] ? U : T;\n\nexport enum StringBoolean {\n  FALSE = '0',\n  TRUE = '1',\n}\n","import styled from 'styled-components';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 1.875rem;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 15em;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 1.25em 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    --profile-image-size: 11.25em;\n    --outer-columns-width: calc(\n      50% - 2.5em - calc(var(--profile-image-size) / 2)\n    );\n    align-items: center;\n    display: grid;\n    width: 1440px;\n    grid-template-columns:\n      var(--outer-columns-width) var(--profile-image-size)\n      var(--outer-columns-width);\n    grid-column-gap: 2.5em;\n    padding: 1.25em 2.5em;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrapper = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${({ theme }) => theme.screen.md} {\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    left: 50%;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  font-weight: ${({ theme }) => theme.font.weight.light};\n  letter-spacing: 1.5px;\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: min(0.875rem, 3.5vw);\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(100% - 12.85em);\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const StyledProfileNameBioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 0.25em;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    column-gap: 0.25em;\n    align-items: center;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 1.0625rem;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin: auto 0 auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    font-size: 1.125rem;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileBioWrapper = styled.div`\n  margin: auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(50% - 5.625em);\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin-right: 2.5em;\n  column-gap: 1.5em;\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${({ theme }) => theme.screen.md} {\n    max-width: 1440px;\n    padding: 0 2.5em;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 1.25em 0 1.25em 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  row-gap: 1.35em;\n  margin-top: 1.35em;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    margin-left: auto;\n    margin-top: 0;\n  }\n`;\n\nexport const StyledProfileSettingButton = styled.button`\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  height: 2em;\n  padding: 0 0.5em;\n  width: max-content;\n`;\n\nexport const StyledSettingIcon = styled.img`\n  height: 1.5em;\n`;\n\nexport const StyledShareProfileWrapper = styled.div`\n  position: relative;\n  overflow: visible;\n  width: max-content;\n`;\n\nexport const StyledShareIcon = styled.img`\n  height: 0.875em;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  display: inline-block;\n  margin-left: 0.5em;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0 2.5em;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIconWrapper = styled.a`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledOpenEditProfileModal = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledWitdrawFundsButton = styled(StyledOpenEditProfileModal)``;\n\nexport const StyledShareProfileButton = styled.button`\n  align-items: center;\n  column-gap: 1.25em;\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  padding: 0.5em 0.75em;\n  font-size: 0.9375rem;\n  overflow: hidden;\n  margin: auto 0;\n  display: flex;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0;\n    right: 0;\n    border-bottom-color: rgba(255, 255, 255, 0.15);\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    height: 2em;\n    padding: 0 0.5em;\n  }\n`;\n\nexport const StyledShareDropDown = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 100%;\n  background-color: rgba(59, 59, 59, 1);\n  border-width: 0px 1px 1px;\n  border-color: rgba(255, 255, 255, 0.15);\n  border-style: solid;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 10;\n  animation: ${({ theme }) => theme.animation.cardrender} 0.2s linear;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-top-width: 1px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    top: calc(100% + 0.5em);\n    width: max-content;\n  }\n`;\n\nexport const ShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  align-items: center;\n  display: flex;\n  column-gap: 1.25em;\n  padding: 0.5em 0.75em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: max-content;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\n\nexport const StyledProfileImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n`;\n\nexport const StyledProfileImg = styled.img`\n  border-radius: 50%;\n  height: calc(100% - 1em);\n  inset: 0;\n  margin: auto;\n  position: absolute;\n  width: calc(100% - 1em);\n`;\n\nexport const StyledBlockieImg = styled.img`\n  align-items: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  z-index: 10;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  height: calc(100% - 1em);\n  inset: 0;\n  position: absolute;\n  width: auto;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrapper,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const explorer = getChainExplorer(params.network);\n  return (\n    <StyledProfileImageWrapper>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {params.network in ['l14', 'l16'] && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrapper>\n  );\n};\n","export const sanitizeLink = (url: string) => {\n  return url.replace(/^.*\\/\\/[^/]+\\//, '');\n};\n","export const createImageFile = async (url: string) => {\n  let response = await fetch(url);\n  let data = await response.blob();\n  let metadata = {\n    type: 'image/jpeg',\n  };\n\n  return new File([data], url, metadata);\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport {\n  FileInput,\n  HiddenFileInput,\n  HiddenFileInputWrapper,\n} from '../../../components/InputField/styles';\nimport { addFile } from '../../../services/ipfsClient';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { sanitizeLink } from '../../../utility/content/text';\nimport { createImageFile } from '../../../utility/file';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport {\n  FileEditWrapper,\n  MetaLabel,\n  MetaLabeledInput,\n  PreviewImage,\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n  StyledErrorIcon,\n} from './styles';\nimport { ExclamationIcon } from '../../../assets';\n\ninterface IProps {\n  onDismiss: () => void;\n  profile: IProfile;\n  setTabName?: (name: string) => void;\n}\n\ntype formInput = {\n  profileImage: File | null;\n  backgroundImage: File | null;\n  name: string;\n  bio: string;\n  facebook: string;\n  twitter: string;\n  instagram: string;\n};\n\ntype SocialLink = 'facebook' | 'twitter' | 'instagram';\n\nconst socialLinks = {\n  twitter: 'https://twitter.com/',\n  facebook: 'https://facebook.com/',\n  instagram: 'https://instagram.com/',\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  onDismiss,\n  profile,\n  setTabName,\n}: IProps) => {\n  const linkFinder = useCallback(\n    (title: SocialLink) => {\n      const link = profile.links.find(\n        (item) => item.title.toLowerCase() === title,\n      );\n      return link ? link.url : '';\n    },\n    [profile.links],\n  );\n\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [txVerification, setTxVerification] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profileImage: null,\n    backgroundImage: null,\n    name: profile.name,\n    bio: profile.description,\n    facebook: linkFinder('facebook'),\n    twitter: linkFinder('twitter'),\n    instagram: linkFinder('instagram'),\n  });\n\n  const [currentProfileImages, setCurrentProfileImages] = useState({\n    profileImage: null,\n    backgroundImage: null,\n  });\n\n  useEffect(() => {\n    (async () => {\n      setEditProfileForm({\n        ...editProfileForm,\n        profileImage: await createImageFile(profile.profileImage),\n        backgroundImage: await createImageFile(profile.backgroundImage),\n      });\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile.profileImage, profile.backgroundImage]);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      const currentTarget = event.currentTarget;\n      addFile(event.currentTarget.files[0])\n        .then(async (path) => {\n          if (!path) {\n            return;\n          }\n          const imageUrl = `ipfs/${path.replace('ipfs://', '')}`;\n\n          setCurrentProfileImages({\n            ...currentProfileImages,\n            [currentTarget.name]: imageUrl,\n          });\n\n          setEditProfileForm({\n            ...editProfileForm,\n            [currentTarget.name]: currentTarget.files![0],\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const fields = [\n    { name: 'backgroundImage', label: 'Background Image', type: 'file' },\n    { name: 'profileImage', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    {\n      name: 'twitter',\n      label: 'Twitter',\n      type: 'text',\n      baseUrl: socialLinks.twitter,\n    },\n    {\n      name: 'facebook',\n      label: 'Facebook',\n      type: 'text',\n      baseUrl: socialLinks.facebook,\n    },\n    {\n      name: 'instagram',\n      label: 'Instagram',\n      type: 'text',\n      baseUrl: socialLinks.instagram,\n    },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name: editProfileForm.name,\n      description: editProfileForm.bio,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hash: profile.backgroundImageHash,\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.backgroundImage &&\n            editProfileForm.backgroundImage.name !== profile.backgroundImage\n              ? editProfileForm.backgroundImage\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          hash: profile.backgroundImageHash,\n          url:\n            editProfileForm.profileImage &&\n            editProfileForm.profileImage.name !== profile.profileImage\n              ? editProfileForm.profileImage\n              : profile.profileImage,\n        },\n      ],\n      links: [\n        {\n          title: 'facebook',\n          url:\n            editProfileForm.facebook.length > 0\n              ? `https://facebook.com/${editProfileForm.facebook}`\n              : linkFinder('facebook'),\n        },\n        {\n          title: 'twitter',\n          url:\n            editProfileForm.twitter.length > 0\n              ? `https://twitter.com/${editProfileForm.twitter}`\n              : linkFinder('twitter'),\n        },\n        {\n          title: 'instagram',\n          url:\n            editProfileForm.instagram.length > 0\n              ? `https://instagram.com/${editProfileForm.instagram}`\n              : linkFinder('instagram'),\n        },\n      ],\n    }),\n    [\n      editProfileForm.backgroundImage,\n      editProfileForm.bio,\n      editProfileForm.facebook,\n      editProfileForm.instagram,\n      editProfileForm.name,\n      editProfileForm.profileImage,\n      editProfileForm.twitter,\n      linkFinder,\n      profile.backgroundImage,\n      profile.backgroundImageHash,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n\n    if (!signer) {\n      return;\n    }\n\n    try {\n      const transaction = await (profile.isOwnerKeyManager\n        ? LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n            profile.owner,\n            profile.address,\n            data,\n            signer,\n          )\n        : LSP3ProfileApi.setUniversalProfileData(\n            profile.address,\n            data,\n            signer,\n          ));\n\n      setTxVerification(true);\n\n      await transaction.wait(1);\n\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n\n      if (setTabName) {\n        setTabName('Oops...');\n      }\n\n      setError(true);\n      return;\n    }\n\n    setLoading(false);\n    setTxVerification(false);\n    onDismiss();\n  };\n\n  const getImageUrl = useCallback((url: string) => {\n    return url.includes('ipfs.infura-ipfs.io')\n      ? url\n      : `https://ipfs.fanzone.io/${sanitizeLink(url)}`;\n  }, []);\n\n  return !loading && !error ? (\n    <StyledEditProfileModalContent>\n      {fields.map((item, i) => (\n        <StyledInputRow key={i}>\n          <StyledLabel>{item.label}</StyledLabel>\n          {item.type === 'textarea' && (\n            <StyledTextAreaInput\n              name={item.name}\n              onChange={changeHandler}\n              value={editProfileForm[item.name as keyof formInput] as string}\n            />\n          )}\n          {item.type === 'text' && (\n            <MetaLabeledInput>\n              {item.baseUrl && <MetaLabel>{item.baseUrl}</MetaLabel>}\n              <StyledInput\n                name={item.name}\n                type={item.type}\n                onChange={changeHandler}\n                value={sanitizeLink(\n                  editProfileForm[item.name as keyof formInput] as string,\n                )}\n              />\n            </MetaLabeledInput>\n          )}\n          {item.type === 'file' && (\n            <FileEditWrapper>\n              {(editProfileForm[item.name as keyof formInput] as File) && (\n                <PreviewImage\n                  alt={profile.name}\n                  src={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          currentProfileImages[\n                            item.name as keyof {\n                              profileImage: any;\n                              backgroundImage: any;\n                            }\n                          ] ||\n                            ((\n                              editProfileForm[\n                                item.name as keyof formInput\n                              ] as File\n                            ).name as string),\n                        )\n                      : ''\n                  }\n                />\n              )}\n              <HiddenFileInputWrapper>\n                <FileInput\n                  title={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                  fileName={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                />\n                <HiddenFileInput\n                  title={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                  name={item.name}\n                  onChange={imageChangeHandler}\n                  accept=\".jpg, .png\"\n                />\n              </HiddenFileInputWrapper>\n            </FileEditWrapper>\n          )}\n        </StyledInputRow>\n      ))}\n      <br />\n      <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n    </StyledEditProfileModalContent>\n  ) : (\n    <StyledErrorLoadingContent>\n      {!error ? (\n        <>\n          <StyledLoadingHolder>\n            <StyledLoader color=\"#ed7a2d\" width={40} />\n          </StyledLoadingHolder>\n          <StyledLoadingMessage>\n            {txVerification\n              ? 'Please wait, transaction is being verified ...'\n              : ' Confirm the metamask transaction and wait ...'}\n          </StyledLoadingMessage>\n        </>\n      ) : (\n        <StyledErrorText>\n          <StyledErrorIcon src={ExclamationIcon} />\n          Something went wrong, please try again\n        </StyledErrorText>\n      )}\n    </StyledErrorLoadingContent>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { ProfilePreview } from '../../AssetDetails/ProfilePreview';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { StyledInputRow, StyledLabel } from '../ProfileEditModal/styles';\nimport { StyledSelectInput, StyledTransferCardModalContent } from './styles';\nimport { Address } from '../../../utils/types';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { ICard, IOwnedAssets } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { NetworkName } from '../../../boot/types';\nimport { useProfile } from '../../../hooks/useProfile';\n\ninterface IProps {\n  profile: {\n    address: Address;\n    owner: Address;\n    isOwnerKeyManager: boolean;\n    ownedAssets: IOwnedAssets[];\n  };\n  ownedCards: ICard[];\n  onDismiss: () => void;\n  network: NetworkName;\n}\n\ntype formInput = {\n  toAddress: string;\n  cardAddress: string;\n  tokenId: number | null;\n};\n\nexport const TransferCardsModal: React.FC<IProps> = ({\n  profile,\n  onDismiss,\n  network,\n  ownedCards,\n}: IProps) => {\n  const [transferCardForm, setTransferCardForm] = useState<formInput>({\n    toAddress: '',\n    cardAddress: profile.ownedAssets[0].assetAddress,\n    tokenId: null,\n  });\n\n  const [selectedCard, setSelectedCard] = useState<ICard | null>(null);\n\n  const [\n    destinationProfile,\n    profileAddressError,\n    getProfile,\n    isProfileLoading,\n  ] = useProfile();\n\n  useEffect(() => {\n    setSelectedCard(ownedCards[0]);\n  }, [ownedCards]);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'cardName') {\n      const card = ownedCards.find(({ name }) => name === value);\n\n      setSelectedCard(card || null);\n\n      setTransferCardForm({\n        ...transferCardForm,\n        cardAddress: card?.address!,\n        tokenId: null,\n      });\n    } else {\n      if (name === \"receiver's address\") {\n        getProfile(value, network);\n      }\n\n      setTransferCardForm({\n        ...transferCardForm,\n        [name]: value,\n      });\n    }\n  };\n\n  const { transferCard, transferState, error } = useTransferLsp8Token(\n    transferCardForm.cardAddress,\n    transferCardForm.toAddress,\n    transferCardForm.tokenId,\n    profile,\n    network,\n  );\n\n  const fields = [\n    { name: 'cardName', label: 'Card Name', type: 'select' },\n    { name: 'cardAddress', label: 'Card Address', type: 'text' },\n    { name: 'tokenId', label: 'Token Id', type: 'select' },\n  ];\n\n  return (\n    <StyledTransferCardModalContent>\n      <ProfilePreview\n        profile={destinationProfile}\n        profileError={profileAddressError}\n        isProfileLoading={isProfileLoading}\n      />\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={changeHandler}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n      />\n      {fields.map((item, key) => (\n        <StyledInputRow key={key}>\n          <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n          {item.type === 'text' && item.name === 'cardAddress' && (\n            <p>{selectedCard?.address}</p>\n          )}\n          {item.type === 'select' && item.name === 'cardName' && (\n            <StyledSelectInput\n              name={item.name}\n              onChange={changeHandler}\n              value={selectedCard?.name || ''}\n            >\n              {ownedCards.map((card, key) => (\n                <option key={key} value={card.name} defaultValue={card.name}>\n                  {card.name}\n                </option>\n              ))}\n            </StyledSelectInput>\n          )}\n          {item.type === 'select' && item.name === 'tokenId' && (\n            <StyledSelectInput\n              name={item.name}\n              onChange={changeHandler}\n              value={transferCardForm.tokenId || 'Select token id'}\n            >\n              <option>Select token id</option>\n              {profile.ownedAssets\n                .find(\n                  (ownedAsset) =>\n                    ownedAsset.assetAddress === selectedCard?.address,\n                )\n                ?.tokenIds.map((tokenId, key) => (\n                  <option key={key} value={tokenId}>\n                    {tokenId}\n                  </option>\n                ))}\n            </StyledSelectInput>\n          )}\n        </StyledInputRow>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton onClick={transferCard}>\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n    </StyledTransferCardModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledWithdrawModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  padding: 0 0.9em;\n  display: flex;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  top: -0.1em;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledTokenLabel = styled.p`\n  margin-left: 0.9em;\n`;\n\nexport const StyledBalanceWrapper = styled.div`\n  display: flex;\n  border-left: 1px solid white;\n  width: 50%;\n  margin-left: auto;\n  padding-left: 0.9em;\n`;\n\nexport const StyledBalanceLabel = styled.p``;\n\nexport const StyledBalanceValue = styled.p`\n  margin-left: auto;\n`;\n","import { BigNumber } from 'ethers';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { NetworkName } from '../../../boot/types';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useRpcProvider } from '../../../hooks/useRpcProvider';\nimport { useWitdrawFunds } from '../../../hooks/useWithdrawFunds';\nimport { LSP4DigitalAssetApi } from '../../../services/controllers/LSP4DigitalAsset';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport { Address } from '../../../utils/types';\nimport {\n  StyledBalanceLabel,\n  StyledBalanceValue,\n  StyledBalanceWrapper,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledTokenLabel,\n  StyledWithdrawModalContent,\n} from './styles';\n\ninterface IProps {\n  profile: IProfile;\n  network: NetworkName;\n  onDismiss: () => void;\n}\n\nexport const WithdrawFundsModal = ({ profile, network, onDismiss }: IProps) => {\n  const [whiteListedTokensInfo, setWhiteListedTokensInfo] = useState<\n    IWhiteListedTokens[]\n  >([]);\n  const [balances, setBalances] = useState<\n    Array<{ balance: BigNumber; address: string }>\n  >([]);\n  const [{ data: account }] = useAccount();\n  const [selectedTokenInput, setSelectedTokenInput] = useState<Address>('');\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const provider = useRpcProvider(network);\n  const { balanceOf, withdrawFunds, withdrawState, resetState } =\n    useWitdrawFunds(network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSelectedTokenInput(event.currentTarget.value);\n  };\n\n  const fetchWhiteListedTokenInfo = useCallback(async () => {\n    const res = await Promise.all(\n      whiteListedtokensAddresses.map(\n        async (address) =>\n          await LSP4DigitalAssetApi.fetchErc20TokenInfo(address, provider),\n      ),\n    );\n    setWhiteListedTokensInfo(res);\n  }, [provider, whiteListedtokensAddresses]);\n\n  const [selectedTokenBalance, selectedTokenDecimals] = useMemo(() => {\n    const balance = balances\n      .find(\n        (item) =>\n          item.address.toLowerCase() === selectedTokenInput.toLowerCase(),\n      )\n      ?.balance.toString();\n    const decimals = whiteListedTokensInfo.find(\n      (item) =>\n        item.tokenAddress.toLowerCase() === selectedTokenInput.toLowerCase(),\n    )?.decimals;\n    return [balance, decimals];\n  }, [balances, selectedTokenInput, whiteListedTokensInfo]);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'WITHDRAWING FUNDS. . .',\n    },\n    successful: {\n      mainHeading: 'WITHDRAW SUCCESSFULL',\n    },\n    failed: {\n      mainHeading: 'WITHDRAW FAILED',\n      description: 'Please try agian.',\n    },\n  };\n\n  useEffect(() => {\n    fetchWhiteListedTokenInfo();\n    balanceOf(whiteListedtokensAddresses, profile.address).then((res) => {\n      setBalances(res);\n    });\n  }, []);\n\n  return (\n    <StyledWithdrawModalContent>\n      {whiteListedTokensInfo.map((item) => (\n        <StyledRadioLabel\n          htmlFor=\"token\"\n          $checked={\n            selectedTokenInput.toLowerCase() === item.tokenAddress.toLowerCase()\n          }\n        >\n          <StyledRadioInput\n            name=\"payment\"\n            type=\"radio\"\n            id=\"token\"\n            value={item.tokenAddress}\n            onChange={changeHandler}\n          />\n          <StyledTokenLabel>{item.symbol}</StyledTokenLabel>\n          <StyledBalanceWrapper>\n            <StyledBalanceLabel>Balance: </StyledBalanceLabel>\n            <StyledBalanceValue>\n              {displayPrice(\n                selectedTokenBalance ? selectedTokenBalance : 0,\n                selectedTokenDecimals ? selectedTokenDecimals : 0,\n              )}\n            </StyledBalanceValue>\n          </StyledBalanceWrapper>\n        </StyledRadioLabel>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!selectedTokenBalance || Number(selectedTokenBalance) <= 0}\n          onClick={async () =>\n            account &&\n            (await withdrawFunds(\n              profile,\n              selectedTokenInput,\n              account.address,\n              selectedTokenBalance ? selectedTokenBalance : 0,\n            ))\n          }\n        >\n          withdraw to metamask\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={withdrawState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledWithdrawModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSigner, useNetwork } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IProfile } from '../../services/models';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\nimport { useRpcProvider } from '../useRpcProvider';\n\nexport const useWitdrawFunds = (network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [withdrawState, setWithdrawState] = useState<STATUS>(STATUS.IDLE);\n  const provider = useRpcProvider(network);\n\n  const balanceOf = async (\n    tokenAddresses: Address[],\n    profieAddress: Address,\n  ) => {\n    const balances = await Promise.all(\n      tokenAddresses.map(async (address) => {\n        const tokenContract = ERC20__factory.connect(address, provider);\n        const balance = await tokenContract.balanceOf(profieAddress);\n        return {\n          address,\n          balance,\n        };\n      }),\n    );\n    return balances;\n  };\n\n  const withdrawFunds = async (\n    profile: IProfile,\n    tokenAddress: Address,\n    toAddress: Address,\n    amount: BigNumberish,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setWithdrawState(STATUS.LOADING);\n    if (profile.isOwnerKeyManager) {\n      signer &&\n        (await KeyManagerApi.transferBalanceViaKeyManager(\n          tokenAddress,\n          profile.owner,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        )\n          .then(() => {\n            setWithdrawState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setWithdrawState(STATUS.FAILED);\n          }));\n    } else {\n      signer &&\n        (await LSP3ProfileApi.transferBalanceViaUniversalProfile(\n          tokenAddress,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        )\n          .then(() => {\n            setWithdrawState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setWithdrawState(STATUS.FAILED);\n          }));\n    }\n  };\n\n  return {\n    balanceOf,\n    withdrawFunds,\n    withdrawState,\n    error,\n    resetState: () => setWithdrawState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledTabs = styled.div``;\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import { ReactNode, useState } from 'react';\nimport { StyledTabs, StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n    visible: boolean;\n  }[];\n}\n\nexport const Tabs = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <StyledTabs>\n      <StyledTabsHeader>\n        {tabs.map((tab, i) => {\n          if (tab.visible) {\n            return (\n              <StyledTabsLabel\n                key={i}\n                $active={activeTab === i}\n                onClick={() => setActiveTab(i)}\n              >\n                {tab.name}\n              </StyledTabsLabel>\n            );\n          }\n        })}\n      </StyledTabsHeader>\n      {tabs[activeTab].content}\n    </StyledTabs>\n  );\n};\n","import styled from 'styled-components';\nimport { StyledInputRow } from '../ProfileDetails/ProfileEditModal/styles';\n\nexport const StyledAddPermissions = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 8px;\n`;\n\nexport const StyledNetworkLabel = styled.p`\n  color: white;\n  font-size: 25px;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n`;\n\nexport const StyledLabel = styled.label`\n  color: white;\n  width: 200px;\n`;\n\nexport const StyledInputWrapper = styled(StyledInputRow)`\n  display: flex;\n`;\n\nexport const StyledInput = styled.input`\n  margin: auto 0;\n  max-width: 350px;\n  width: 100%;\n`;\n\nexport const StyledCheckboxInput = styled.input`\n  margin: auto 10px auto 0;\n`;\n\nexport const StyledPermissionInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSetPermisssionButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 20px auto;\n  padding: 5px 10px;\n  border-radius: 8px;\n  color: white;\n`;\n","import { ethers } from 'ethers';\nimport React, { useState } from 'react';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport {\n  StyledAddPermissions,\n  StyledInputWrapper,\n  StyledInput,\n  StyledLabel,\n  StyledPermissionInputWrapper,\n  StyledCheckboxInput,\n  StyledSetPermisssionButton,\n  StyledNetworkLabel,\n} from './styles';\n\ninterface IProps {\n  upAddress: string;\n}\n\ntype formInput = {\n  addressTo: string;\n  permissions: {\n    CHANGEOWNER: boolean;\n    CHANGEPERMISSIONS: boolean;\n    ADDPERMISSIONS: boolean;\n    SETDATA: boolean;\n    CALL: boolean;\n    STATICCALL: boolean;\n    DELEGATECALL: boolean;\n    DEPLOY: boolean;\n    TRANSFERVALUE: boolean;\n    SIGN: boolean;\n  };\n};\n\nexport const AddPermissions = ({ upAddress }: IProps) => {\n  const [{ data }] = useSigner();\n  const [permissionsForm, setpermissionsForm] = useState<formInput>({\n    addressTo: '',\n    permissions: {\n      CHANGEOWNER: false,\n      CHANGEPERMISSIONS: false,\n      ADDPERMISSIONS: false,\n      SETDATA: false,\n      CALL: false,\n      STATICCALL: false,\n      DELEGATECALL: false,\n      DEPLOY: false,\n      TRANSFERVALUE: false,\n      SIGN: false,\n    },\n  });\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.type === 'checkbox') {\n      event.currentTarget.checked\n        ? setpermissionsForm({\n            ...permissionsForm,\n            permissions: {\n              ...permissionsForm.permissions,\n              [event.currentTarget.name]: true,\n            },\n          })\n        : setpermissionsForm({\n            ...permissionsForm,\n            permissions: {\n              ...permissionsForm.permissions,\n              [event.currentTarget.name]: false,\n            },\n          });\n    } else {\n      setpermissionsForm({\n        ...permissionsForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n      });\n    }\n  };\n\n  const setPermissions = async () => {\n    if (\n      ethers.utils.isAddress(upAddress) &&\n      ethers.utils.isAddress(permissionsForm.addressTo)\n    ) {\n      data &&\n        (await KeyManagerApi.addPermissions(\n          upAddress,\n          permissionsForm.addressTo,\n          permissionsForm.permissions,\n          data,\n        ));\n    }\n  };\n\n  return (\n    <StyledAddPermissions>\n      <StyledInputWrapper>\n        <StyledLabel>Grant permission to Address: </StyledLabel>\n        <StyledInput name=\"addressTo\" onChange={changeHandler}></StyledInput>\n      </StyledInputWrapper>\n      <StyledPermissionInputWrapper>\n        {Object.keys(permissionsForm.permissions).map((key) => (\n          <StyledInputWrapper key={key}>\n            <StyledCheckboxInput\n              type=\"checkbox\"\n              name={key}\n              id={key}\n              value={key}\n              onChange={changeHandler}\n            ></StyledCheckboxInput>\n            <StyledLabel htmlFor={key}>{key}</StyledLabel>\n          </StyledInputWrapper>\n        ))}\n      </StyledPermissionInputWrapper>\n      <StyledSetPermisssionButton onClick={setPermissions}>\n        Set Permissions\n      </StyledSetPermisssionButton>\n    </StyledAddPermissions>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { useAccount } from 'wagmi';\nimport { StringBoolean } from '../../../boot/types';\nimport { Tabs } from '../../../components/Tabs';\nimport { IProfile } from '../../../services/models';\nimport { getAddressPermissionsOnUniversalProfile } from '../../../utility/permissions';\nimport { AddPermissions } from '../../AddPermissions';\nimport { ProfileEditModal } from '../ProfileEditModal';\n\ninterface IProps {\n  profile: IProfile;\n  onDismiss: () => void;\n}\n\nexport const ProfileSettingModal = ({ profile, onDismiss }: IProps) => {\n  const [{ data: account }] = useAccount();\n\n  const [tabName, setTabName] = useState('');\n\n  const [canTransfer, canSetData, canAddPermissions] = useMemo(() => {\n    if (!account) return [false, false, false];\n\n    const permissionsSet = getAddressPermissionsOnUniversalProfile(\n      profile.permissionSet,\n      account.address,\n    );\n\n    return [\n      permissionsSet?.permissions.call === StringBoolean.TRUE,\n      permissionsSet?.permissions.setdata === StringBoolean.TRUE,\n      permissionsSet?.permissions.addpermissions === StringBoolean.TRUE,\n    ];\n  }, [account, profile]);\n\n  const tabs = [\n    {\n      name: tabName || 'Update Info',\n      content: (\n        <ProfileEditModal\n          profile={profile}\n          onDismiss={onDismiss}\n          setTabName={(name: string) => setTabName(name)}\n        />\n      ),\n      visible: canTransfer && canSetData,\n    },\n    {\n      name: 'Permissions',\n      content: <AddPermissions upAddress={profile.address} />,\n      visible: canTransfer && canAddPermissions,\n    },\n  ];\n\n  return <Tabs tabs={tabs} />;\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState, StringBoolean } from '../../boot/types';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { HideOnScreen, Pagination } from '../../components';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrapper,\n  StyledDropDownIcon,\n  StyledLinkIconWrapper,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrapper,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrapper,\n  StyledProfileName,\n  StyledProfileNameBioWrapper,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHolder,\n  StyledShareProfileButton,\n  StyledShareProfileWrapper,\n  StyledOpenEditProfileModal,\n  StyledWitdrawFundsButton,\n  StyledProfileSettingButton,\n  StyledSettingIcon,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  SettingIcon,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n  currentProfile,\n  fetchProfileByAddress,\n  resetUserDataSliceInitialState,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport {\n  fetchIssuedCards,\n  fetchOwnedCards,\n  resetCardsSliceInitialState,\n  selectAllCardItems,\n} from '../../features/cards';\nimport { ICard, IProfile } from '../../services/models';\nimport { MetaCard } from '../../features/cards/MetaCard';\nimport { StyledProfileHeading, StyledProfilesHeader } from '../Profiles/styles';\nimport { TransferCardsModal } from './TransferCardModal/TransferCardsModal';\nimport { useModal } from '../../hooks/useModal';\nimport { usePagination } from '../../hooks/usePagination';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { WithdrawFundsModal } from './WithdrawFundsModal';\nimport { ProfileSettingModal } from './ProfileSettingModal';\nimport { useQueryParams } from '../../hooks/useQueryParams';\nimport { isAddress } from 'ethers/lib/utils';\nimport { ShareReferModal } from '../../components/ShareReferModal';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst ProfileDetails: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  let query = useQueryParams();\n  const { setItem, setReferrer } = useLocalStorage();\n  const [{ data: account }] = useAccount();\n  const [{ data: signer }] = useSigner();\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[params.network], params.add),\n  );\n\n  const profileError = useSelector(\n    (state: RootState) => state.userData[params.network].error.fetchProfile,\n  );\n\n  const profileStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status.fetchProfile,\n  );\n\n  const isTablet = useMediaQuery(theme.screen.md);\n\n  const [canTransfer, canSetData, canTransferValue, canAddPermissions] =\n    useMemo(() => {\n      if (!profile || !account) return [false, false, false];\n\n      const permissionsSet = getAddressPermissionsOnUniversalProfile(\n        profile.permissionSet,\n        account.address,\n      );\n      return [\n        permissionsSet?.permissions.call === StringBoolean.TRUE,\n        permissionsSet?.permissions.setdata === StringBoolean.TRUE,\n        permissionsSet?.permissions.transfervalue === StringBoolean.TRUE,\n        permissionsSet?.permissions.addpermissions === StringBoolean.TRUE,\n      ];\n    }, [account, profile]);\n\n  useEffect(() => {\n    const referrerAddress = query.get('referrer');\n    referrerAddress &&\n      isAddress(referrerAddress) &&\n      setReferrer(params.network, referrerAddress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  useMemo(() => {\n    if (!account || !profile || !canTransfer || !canSetData) return;\n    setItem(params.network, params.add, profile.permissionSet);\n  }, [\n    account,\n    canSetData,\n    canTransfer,\n    params.add,\n    params.network,\n    profile,\n    setItem,\n  ]);\n\n  useEffect(() => {\n    dispatch(resetUserDataSliceInitialState(params.network));\n    dispatch(resetCardsSliceInitialState(params.network));\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    dispatch(currentProfile(params.add));\n    if (!profile)\n      dispatch(\n        fetchProfileByAddress({ address: params.add, network: params.network }),\n      );\n  }, [dispatch, params.add, params.network, profile]);\n\n  const { range: issuedAssetsRange, setRange: setIssuedAssetsRange } =\n    usePagination();\n  const { range: ownedAssetsRange, setRange: setOwnedAssetsRange } =\n    usePagination();\n\n  const issuedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[params.network]),\n  ).filter((item) =>\n    profile?.issuedAssets\n      .slice(issuedAssetsRange[0], issuedAssetsRange[1] + 1)\n      .some((i) => i === item.address),\n  );\n\n  const issuedCardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status.fetchIssuedCards,\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.issuedAssets.length === 0) return;\n    dispatch(\n      fetchIssuedCards({\n        addresses: profile.issuedAssets.slice(\n          issuedAssetsRange[0],\n          issuedAssetsRange[1] + 1,\n        ),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, issuedAssetsRange]);\n\n  const ownedCardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status.fetchOwnedCards,\n  );\n\n  const ownedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[params.network]),\n  ).filter((item) =>\n    profile?.ownedAssets\n      .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1)\n      .some((i) => i.assetAddress === item.address),\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.ownedAssets.length === 0) return;\n    dispatch(\n      fetchOwnedCards({\n        addresses: profile.ownedAssets\n          .map((asset) => asset.assetAddress)\n          .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, ownedAssetsRange]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link, i) => {\n        const linkTitle = link.title.toLowerCase();\n        return link.url !== '' ? (\n          <StyledProfileLinks key={i}>\n            <StyledLinkIconWrapper\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <StyledLinkIcon\n                src={\n                  linkTitle === 'twitter'\n                    ? Twitter\n                    : linkTitle === 'instagram'\n                    ? Instagram\n                    : linkTitle === 'facebook'\n                    ? Facebook\n                    : Globe\n                }\n              />\n            </StyledLinkIconWrapper>\n          </StyledProfileLinks>\n        ) : (\n          <></>\n        );\n      }),\n    [profile?.links],\n  );\n\n  // const shareButtonHandler = useCallback(async () => {\n  //   try {\n  //     if (navigator.userAgent.includes('Safari')) {\n  //       throw new Error('Safari share list disabled');\n  //     }\n\n  //     await navigator.share({\n  //       title: `Fanzone.io Universal Profile – ${profile && profile.address}`,\n  //       text: `This is Fanzone.io's Universal Profile page for ${\n  //         profile && profile.address\n  //       }`,\n  //       url: `${window.location.origin}/#${pathname}`,\n  //     });\n  //     console.log('shared successfully');\n  //   } catch (err) {\n  //     onPresentShareModal();\n  //     console.error('Error: ' + err);\n  //   }\n  // }, [pathname, profile]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.add, profile]);\n\n  const {\n    handlePresent: onPresentSettingModal,\n    onDismiss: onDismissSettingModal,\n  } = useModal(\n    profile && (\n      <ProfileSettingModal\n        profile={profile}\n        onDismiss={() => onDismissSettingModal()}\n      />\n    ),\n    'Profile Settings Modal',\n    'Profile Settings',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardsModal,\n    onDismiss: onDismissTransferCardsModal,\n  } = useModal(\n    profile && (\n      <TransferCardsModal\n        profile={profile}\n        ownedCards={ownedCards}\n        onDismiss={() => onDismissTransferCardsModal()}\n        network={params.network}\n      />\n    ),\n    'Cards Transfer Modal',\n    'Transfer Card',\n  );\n\n  const {\n    handlePresent: onPresentProfileEditModal,\n    onDismiss: onDismissProfileEditModal,\n  } = useModal(\n    <ProfileEditModal\n      profile={profile ? profile : ({} as IProfile)}\n      onDismiss={() => onDismissProfileEditModal()}\n    />,\n    'Profile Edit Modal',\n    'Profile Edit',\n  );\n\n  const {\n    handlePresent: onPresentWithdrawFundsModal,\n    onDismiss: onDismissWithdrawFundsModal,\n  } = useModal(\n    profile && (\n      <WithdrawFundsModal\n        profile={profile}\n        network={params.network}\n        onDismiss={() => onDismissWithdrawFundsModal()}\n      />\n    ),\n    'Withdraw Funds Modal',\n    'Withdraw Funds',\n  );\n\n  const { handlePresent: onPresentShareModal, onDismiss: onDismissShareModal } =\n    useModal(\n      <ShareReferModal\n        network={params.network}\n        pathName={pathname}\n        onDismiss={() => onDismissShareModal()}\n      />,\n      'Profile Share Modal',\n      'Share Profile',\n    );\n\n  return (\n    <StyledProfileDetails>\n      {profileStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {profileError ? (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          ) : (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrapper>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrapper>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : params.add,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrapper>\n                    <StyledProfileNameBioWrapper>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledShareProfileHolder>\n                        {renderLinks}\n                        <StyledShareProfileWrapper>\n                          <StyledShareProfileButton\n                            onClick={onPresentShareModal}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            <HideOnScreen size=\"lg\">\n                              Share profile{' '}\n                              {!navigator['share'] && (\n                                <StyledDropDownIcon src={DropDownIcon} />\n                              )}\n                            </HideOnScreen>\n                          </StyledShareProfileButton>\n                        </StyledShareProfileWrapper>\n                      </StyledShareProfileHolder>\n                      {(canAddPermissions || canSetData) && canTransfer && (\n                        <StyledProfileSettingButton\n                          onClick={onPresentSettingModal}\n                        >\n                          <StyledSettingIcon src={SettingIcon} />\n                        </StyledProfileSettingButton>\n                      )}\n                    </StyledProfileNameBioWrapper>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{params.add}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrapper>\n              {profile &&\n                account &&\n                profile.ownedAssets.length > 0 &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton\n                    onClick={onPresentTransferCardsModal}\n                  >\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n              {signer &&\n                profile &&\n                account &&\n                (canSetData ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenEditProfileModal\n                    onClick={onPresentProfileEditModal}\n                  >\n                    Edit Profile\n                  </StyledOpenEditProfileModal>\n                )}\n              {canTransferValue && (\n                <StyledWitdrawFundsButton onClick={onPresentWithdrawFundsModal}>\n                  Withdraw Funds\n                </StyledWitdrawFundsButton>\n              )}\n              <StyledAssetsWrapper>\n                {profile && profile.issuedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Issued Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={issuedCardStatus}\n                      components={issuedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.issuedAssets.length}\n                      setComponentsRange={setIssuedAssetsRange}\n                    />\n                  </>\n                )}\n                {/* @TODO: Change names of components StyledProfilesHeader and StyledProfileHeading */}\n                {profile && profile.ownedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Owned Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={ownedCardStatus}\n                      components={ownedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.ownedAssets.length}\n                      setComponentsRange={setOwnedAssetsRange}\n                    />\n                  </>\n                )}\n              </StyledAssetsWrapper>\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n"],"sourceRoot":""}