{"version":3,"sources":["components/Accordion/styles.ts","components/Accordion/Accordion.tsx","pages/AssetDetails/styles.ts","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","components/Modal/styles.ts","components/Modal/Modal.tsx","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/TransferCardModal/styles.ts","pages/ProfileDetails/TransferCardModal/TransferCardModal.tsx","pages/ProfileDetails/ProfileDetails.tsx"],"names":["StyledAccordionWrapper","styled","div","$expanded","md","StyledAccordionHeader","StyledAccordionTitle","h3","StyledAccordionToggleButton","button","StyledAccordiomToggleIcon","img","Accordion","title","children","enableToggle","useState","expand","setExpand","onClick","src","AccordionToggleIcon","alt","StyledAssetDetailsContentWrappar","StyledCardError","h1","StyledLoadingHolder","StyledLoader","Puff","StyledAssetDetailContent","xl","StyledExplorerIcon","pulseAnimate","StyledCardMainDetails","p","StyledMediaWrapper","BgMetaCard","StyledMedia","StyledMintControls","StyledMintSkipButton","StyledMintSkipButtonImg","StyledMintSliderIndex","StyledCardInfoWrapper","StyledCardPriceWrapper","StyledCardPriceWrapperHeader","StyledCardPriceLabel","StyledQuickActions","StyledReloadPriceAction","StyledActionIcon","StyledCardPriceValueWrapper","StyledTokenIcon","StyledCardPriceValue","StyledActionsButtonWrapper","StyledBuyButton","StyledMakeOfferButton","StyledCardInfoAccordion","StyledCardInfo","StyledCardInfoContainer","StyledCardInfoLabel","StyledCardInfoValue","StyledCardPropertiesAccordion","StyledCardProperties","sm","lg","StyledCardPropertyContainer","StyledCardPropertyIconWrapper","StyledCardPropertyIcon","StyledCardProperty","StyledCardPropertyLabel","StyledCardPropertyValue","StyledMarketAccordion","StyledHoldersAccordion","StyledProfileDetails","StyledProfileDetailsContent","StyledProfileNotFound","StyledProfileCoverImg","StyledProfileInfoWrappar","StyledProfileInfo1","StyledProfileInfo1Content","StyledProfileMediaWrappar","StyledProfileMedia","StyledProfileAddress","StyledProfileNameBioWrappar","StyledProfileName","h2","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledShareProfileWrappar","StyledShareIcon","StyledDropDownIcon","StyledShareProfileHeader","StyledTwitterShare","a","StyledTwitterIcon","StyledFaceBookShare","StyledFacebookIcon","StyledCopyLink","StyledCopyLinkIcon","StyledAssetsWrappar","StyledLinkIcon","StyledOpenTransferModalButton","StyledProfileImageWrappar","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","params","useParams","explorer","getChainExplorer","network","href","exploreUrl","target","rel","icon","className","UniversalProfileIcon","StyledModalContainer","StyledModalHeader","StyledModalHeading","StyledCloseModalButton","Modal","onClose","heading","ProfileEditModal","isOpen","signer","profile","error","setError","loading","setLoading","profile_image","background_image","name","bio","editProfileForm","setEditProfileForm","changeHandler","event","currentTarget","value","imageChangeHandler","files","data","useMemo","length","description","backgroundImage","width","height","hashFunction","url","profileImage","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","address","catch","finally","setUniversalProfileData","add","color","label","type","map","item","i","onChange","accept","StyledTransferCardModalContent","StyledSelectInput","select","TransferCardModal","selectecAddress","toAddress","cardAddress","tokenId","transferCardForm","setTransferCardForm","tranferCard","KeyManagerApi","transferCardViaKeyManager","then","window","location","reload","transferCardViaUniversalProfile","useEffect","ownedAssets","ownedAsset","selected","assetAddress","find","tokenIds","disabled","ethers","utils","isAddress","ProfileDetails","dispatch","useAppDispatch","useAccount","useSigner","openEditProfileModal","setOpenEditProfileModal","openTransferCardModal","setOpenTransferCardModal","preSelectedAssetAddress","setPreSelectedAssetAddress","useSelector","state","selectUserById","userData","profileError","profileStatus","status","isShare","setIsShare","copied","setCopied","isTablet","useMediaQuery","keyManagerSetDataPermission","permissionSet","some","set","toLowerCase","permissions","keyManagerCallPermission","call","toggleTransferModal","currentProfile","fetchProfileByAddress","renderIssuedAssetsPagination","Pagination","collectionAddresses","issuedAssets","renderOwnedAssetsPagination","transferPermission","renderLinks","links","link","linkTitle","Twitter","Instagram","Facebook","Globe","scrollTo","makeBlockie","ShareIcon","DropDownIcon","navigator","clipboard","writeText","setTimeout","Link"],"mappings":"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","file":"static/js/8.5aef3a71.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { md } from '../../utility';\n\nexport const StyledAccordionWrapper = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  border-bottom: 1px solid rgba(223, 223, 223, 0.2);\n  height: 40px;\n\n  @media ${md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledAccordionTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionTitle,\n  StyledAccordionToggleButton,\n  StyledAccordionWrapper,\n} from './styles';\n\ninterface IProps {\n  title: string;\n  children: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const Accordion: React.FC<IProps> = ({\n  title,\n  children,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledAccordionWrapper $expanded={expand}>\n      <StyledAccordionHeader $expanded={expand}>\n        <StyledAccordionTitle>{title}</StyledAccordionTitle>\n        {enableToggle && (\n          <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n            <StyledAccordiomToggleIcon\n              $expanded={expand}\n              src={AccordionToggleIcon}\n              alt=\"\"\n            />\n          </StyledAccordionToggleButton>\n        )}\n      </StyledAccordionHeader>\n      {expand && children}\n    </StyledAccordionWrapper>\n  );\n};\n","import { Puff } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport { BgMetaCard } from '../../assets';\nimport { Accordion } from '../../components/Accordion';\nimport { pulseAnimate } from '../../features/cards/MetaCard/styles';\nimport { lg, md, sm, xl } from '../../utility';\n\nexport const StyledAssetDetailsContentWrappar = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nexport const StyledCardError = styled.h1`\n  font-size: 30px;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledLoadingHolder = styled.div`\n  margin: auto;\n`;\n\nexport const StyledLoader = styled(Puff)`\n  margin: 0 auto 0 auto;\n  height: 400px;\n`;\n\nexport const StyledAssetDetailContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n\n  @media ${md} {\n    max-width: 1440px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 48px 40px 0 40px;\n    row-gap: 30px;\n  }\n\n  @media ${xl} {\n    padding: 48px 40px 0 40px;\n  }\n`;\n\n// export const StyledGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(2, 392px);\n//     margin: 0 auto 0 auto;\n//     column-gap: 20px;\n//   }\n\n//   @media ${xl} {\n//     grid-template-columns: 2fr 1fr;\n//     column-gap: 10px;\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledAssetDetailGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n//   column-gap: 10px;\n//   row-gap: 20px;\n\n//   @media ${xl} {\n//     grid-template-columns: repeat(2, 1fr);\n//   }\n// `;\n\n// export const StyledMediaWrappar = styled.div`\n//   position: relative;\n//   background: url(${BgMetaCard});\n//   background-position: center;\n//   background-repeat: no-repeat;\n//   background-size: cover;\n//   display: flex;\n//   height: 473px;\n\n//   @media ${sm} {\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//   }\n// `;\n\n// export const StyledMetaCardImg = styled.img`\n//   width: 221px;\n//   margin: auto;\n// `;\n\n// export const StyledStatsName = styled.h1`\n//   position: absolute;\n//   left: 5%;\n//   margin-top: 10px;\n//   font-size: 24px;\n//   font-weight: 700;\n// `;\n\n// export const StyledUniversalProfileIcon = styled.img`\n//   position: absolute;\n//   width: 44px;\n//   height: 44px;\n//   bottom: 5%;\n//   left: 10%;\n//   animation: ${pulseAnimate} 2s ease-in-out infinite;\n// `;\n\nexport const StyledExplorerIcon = styled.img`\n  position: absolute;\n  width: 44px;\n  height: 44px;\n  bottom: 0;\n  left: 0;\n  margin: 0 0 20px 20px;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n`;\n\n// export const StyledDetailsWrappar = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 10px 0px 0px 0px;\n\n//   @media ${sm} {\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     min-height: 473px;\n//   }\n// `;\n\n// export const StyledCardInfoLabel = styled.h2`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin: 0 8px 10px 8px;\n//   border-width: 0 0 1px 0;\n//   border-style: solid;\n//   border-color: white;\n//   padding-bottom: 5px;\n\n//   @media ${sm} {\n//     margin: 0 20px 5px 20px;\n//   }\n// `;\n\n// export const StyledInfoGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 35% 1fr;\n//   padding: 0 8px 5px 8px;\n//   row-gap: 10px;\n\n//   @media ${sm} {\n//     padding: 0 20px 0 20px;\n//   }\n// `;\n\nexport const StyledLabel = styled.p`\n  font-size: 15px;\n`;\n\n// export const StyledValue = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   text-transform: capitalize;\n// `;\n\n// export const StyledFullName = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   margin: 0 10px 0 10px;\n//   padding: 15px 0 15px 0;\n//   border-width: 2px 0 2px 0;\n//   border-style: solid;\n//   border-color: rgba(255, 255, 255, 0.25);\n//   line-height: 17px;\n\n//   @media ${sm} {\n//     margin: 0;\n//     padding: 15px 20px 15px 20px;\n//     border-width: 2px 0 0 0;\n//     margin-top: auto;\n//   }\n// `;\n\n// export const StyledExtraInfo = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   height: max-content;\n//   padding: 0 8px 0 8px;\n//   margin-top: 20px;\n\n//   @media ${sm} {\n//     padding: 0;\n//   }\n\n//   @media ${lg} {\n//     margin: 0;\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     padding: 15px 10px 15px 10px;\n//   }\n// `;\n\n// export const StyledIssuerLabel = styled.h3`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin-bottom: 10px;\n\n//   @media ${lg} {\n//     width: 116px;\n//     border-width: 0 0 1px 0;\n//     border-style: solid;\n//     border-color: rgba(223, 223, 223, 1);\n//   }\n// `;\n\n// export const StyledCreatorLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n// `;\n\n// export const StyledHolderLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n//   margin-left: 8px;\n//   border: none;\n\n//   @media ${sm} {\n//     margin-left: 48px;\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledIssuerWrappar = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   justify-items: center;\n//   column-gap: 5px;\n//   row-gap: 10px;\n//   /*\n//     @media ${sm} {\n//         grid-template-columns: repeat(3, 1fr);\n//     } */\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(3, 1fr);\n//   }\n// `;\n\n// export const StyledCreatorWrappar = styled(StyledIssuerWrappar)``;\n\n// export const StyledHolderWrappar = styled(StyledIssuerWrappar)`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   margin: 0 8px 0 8px;\n//   justify-items: center;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(5, 1fr);\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//     grid-template-columns: repeat(6, 1fr);\n//   }\n// `;\n\n// Re designed styled components\n\nexport const StyledCardMainDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 20px;\n    height: 590px;\n  }\n`;\n\nexport const StyledMediaWrapper = styled.div`\n  position: relative;\n  display: flex;\n  background: url(${BgMetaCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 445px;\n\n  @media ${md} {\n    width: 50%;\n    border-radius: 10px;\n    border: 1px solid rgba(255, 255, 255, 0.25);\n    height: 100%;\n  }\n`;\n\nexport const StyledMedia = styled.img`\n  width: 230px;\n  margin: auto;\n`;\n\nexport const StyledMintControls = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: max-content;\n  display: flex;\n  column-gap: 20px;\n  margin: 0 20px 20px 0;\n`;\n\nexport const StyledMintSkipButton = styled.button`\n  background: rgba(255, 255, 255, 0.12);\n  border-radius: 100%;\n  height: 40px;\n  width: 40px;\n  display: flex;\n`;\n\nexport const StyledMintSkipButtonImg = styled.img`\n  margin: auto;\n`;\n\nexport const StyledMintSliderIndex = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    width: 50%;\n    row-gap: 20px;\n  }\n`;\n\nexport const StyledCardPriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  row-gap: 10px;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 98.49%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledCardPriceWrapperHeader = styled.div`\n  display: flex;\n`;\n\nexport const StyledCardPriceLabel = styled.p``;\n\nexport const StyledQuickActions = styled.div`\n  display: grid;\n  width: 110px;\n  height: 30px;\n  grid-template-columns: repeat(3, 1fr);\n  margin-left: auto;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n`;\n\nexport const StyledReloadPriceAction = styled.button`\n  display: flex;\n  border-right: 1px solid rgba(255, 255, 255, 0.15);\n`;\n\nexport const StyledShareCardAction = styled(StyledReloadPriceAction)``;\n\nexport const StyledOptionAction = styled(StyledReloadPriceAction)`\n  border-right: none;\n`;\n\nexport const StyledActionIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledCardPriceValueWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledTokenIcon = styled.img``;\n\nexport const StyledCardPriceValue = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledActionsButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 10px;\n  }\n`;\n\nexport const StyledBuyButton = styled.button`\n  width: 100%;\n  background: rgba(255, 129, 1, 1);\n  border-radius: 5px;\n  padding: 7px 0;\n\n  @media ${md} {\n    width: 50%;\n  }\n`;\n\nexport const StyledMakeOfferButton = styled(StyledBuyButton)`\n  background: rgba(255, 255, 255, 0.2);\n`;\n\nexport const StyledCardInfoAccordion = styled(Accordion)``;\n\nexport const StyledCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const StyledCardInfoContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: auto 0;\n`;\n\nexport const StyledCardInfoLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n  width: 50%;\n`;\n\nexport const StyledCardInfoValue = styled.p`\n  width: 50%;\n`;\n\nexport const StyledCardPropertiesAccordion = styled(Accordion)``;\n\nexport const StyledCardProperties = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  row-gap: 20px;\n  padding: 20px 0;\n\n  @media ${sm} {\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 20px;\n  }\n\n  @media ${md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media ${lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport const StyledCardPropertyContainer = styled.div`\n  display: flex;\n  padding: 15px 20px;\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.06);\n  column-gap: 10px;\n`;\n\nexport const StyledCardPropertyIconWrapper = styled.div`\n  display: flex;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  height: 50px;\n  width: 50px;\n`;\n\nexport const StyledCardPropertyIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledCardProperty = styled.div``;\n\nexport const StyledCardPropertyLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n`;\n\nexport const StyledCardPropertyValue = styled.p``;\n\nexport const StyledMarketAccordion = styled(Accordion)``;\n\nexport const StyledHoldersAccordion = styled(Accordion)``;\n","import styled from 'styled-components';\nimport { md } from '../../utility';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 30px;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 243px;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrappar = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 8px 0 8px;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 20px 0 20px 0;\n  width: 100%;\n\n  @media ${md} {\n    display: grid;\n    width: 1440px;\n    grid-template-columns: calc(50% - 90px) 180px calc(50% - 90px);\n    padding: 20px 40px 20px 40px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrappar = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n\n  @media ${md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n\n  @media ${md} {\n    position: absolute;\n    bottom: 50%;\n    transform: translate3d(0, 50%, 0);\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  width: calc(100% - 180px);\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: 14px;\n\n  @media ${md} {\n    width: 100%;\n    font-size: 16px;\n  }\n`;\n\nexport const StyledProfileNameBioWrappar = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 5px;\n  width: 100%;\n\n  @media ${md} {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 17px;\n  font-weight: 700;\n  margin: auto 0 auto 0;\n\n  @media ${md} {\n    font-size: 15px;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: 700;\n  font-size: 15px;\n`;\n\nexport const StyledProfileBioWrappar = styled.div`\n  margin: auto 0 auto 0;\n\n  @media ${md} {\n    width: calc(50% - 90px);\n    margin-left: auto;\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 15px;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin: auto 0 auto 0;\n  column-gap: 10px;\n\n  @media ${md} {\n    margin: auto 0 auto auto;\n  }\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 8px 0 8px;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${md} {\n    max-width: 1440px;\n    padding: 0 40px 0 40px;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 20px 0 20px 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  position: relative;\n\n  @media ${md} {\n    margin-left: auto;\n  }\n`;\n\nexport const StyledShareProfileWrappar = styled.div<{ expand: boolean }>`\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  width: 162px;\n  height: ${({ expand }) => (expand ? '160px' : '37px')};\n  display: flex;\n  flex-direction: column;\n  padding: 6px;\n  overflow: hidden;\n  margin: auto 0;\n  position: ${({ expand }) => (expand ? 'absolute' : '')};\n\n  @media ${md} {\n    margin: 0;\n    right: 0;\n  }\n`;\n\nexport const StyledShareIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrappar = styled.div`\n  width: 100%;\n  padding: 0 8px 0 8px;\n\n  @media ${md} {\n    padding: 0 40px 0 40px;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 20px auto;\n  padding: 5px 10px;\n  border-radius: 8px;\n\n  @media ${md} {\n    margin: 0 auto;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\nimport { md } from '../../../utility';\n\nexport const StyledProfileImageWrappar = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n  width: 120px;\n  height: 120px;\n\n  @media ${md} {\n    width: 175px;\n    height: 175px;\n  }\n`;\n\nexport const StyledProfileImg = styled.img`\n  object-fit: cover;\n  object-position: center;\n  border-radius: 100%;\n  width: 110px;\n  margin: auto;\n\n  @media ${md} {\n    width: 160px;\n  }\n`;\n\nexport const StyledBlockieImg = styled.img`\n  position: absolute;\n  z-index: -10;\n  width: 100%;\n  border-radius: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n\n  @media ${md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  position: absolute;\n  width: 30px;\n  top: 50%;\n  right: -14px;\n  margin-top: -15px;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n\n  @media ${md} {\n    right: -20px;\n    width: 50px;\n    margin-top: -25px;\n  }\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrappar,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const explorer = getChainExplorer(params.network);\n  return (\n    <StyledProfileImageWrappar>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {params.network === 'l14' && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          className=\"\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrappar>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledModalContainer = styled.div`\n  position: absolute;\n  max-width: 500px;\n  width: 100%;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  z-index: 9999;\n  background-color: black;\n  border-radius: 20px;\n  padding: 10px;\n`;\n\nexport const StyledModalHeader = styled.div`\n  width: 100%;\n  display: flex;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n`;\n\nexport const StyledModalHeading = styled.h2`\n  font-size: 20px;\n`;\n\nexport const StyledCloseModalButton = styled.button`\n  margin-left: auto;\n`;\n","import React from 'react';\nimport {\n  StyledCloseModalButton,\n  StyledModalContainer,\n  StyledModalHeader,\n  StyledModalHeading,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  heading: string;\n  children: JSX.Element;\n}\n\nexport const Modal: React.FC<IProps> = ({\n  onClose,\n  heading,\n  children,\n}: IProps) => {\n  return (\n    <StyledModalContainer>\n      <StyledModalHeader>\n        <StyledModalHeading>{heading}</StyledModalHeading>\n        <StyledCloseModalButton onClick={onClose}>close</StyledCloseModalButton>\n      </StyledModalHeader>\n      {children}\n    </StyledModalContainer>\n  );\n};\n","import { Signer } from 'ethers';\nimport React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../../boot/types';\nimport { Modal } from '../../../components/Modal';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n} from './styles';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  onClose: () => void;\n  signer: Signer;\n  profile: IProfile;\n}\n\ntype formInput = {\n  profile_image: File | null;\n  background_image: File | null;\n  name: string;\n  bio: string;\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  isOpen,\n  onClose,\n  signer,\n  profile,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profile_image: null,\n    background_image: null,\n    name: '',\n    bio: '',\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      setEditProfileForm({\n        ...editProfileForm,\n        [event.currentTarget.name]: event.currentTarget.files[0],\n      });\n    }\n  };\n\n  const fields = [\n    { name: 'background_image', label: 'Background Image', type: 'file' },\n    { name: 'profile_image', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name:\n        editProfileForm.name.length > 0 ? editProfileForm.name : profile.name,\n      description:\n        editProfileForm.bio.length > 0\n          ? editProfileForm.bio\n          : profile.description,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.background_image !== null\n              ? editProfileForm.background_image\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.profile_image !== null\n              ? editProfileForm.profile_image\n              : profile.profileImage,\n        },\n      ],\n    }),\n    [\n      editProfileForm.background_image,\n      editProfileForm.bio,\n      editProfileForm.name,\n      editProfileForm.profile_image,\n      profile.backgroundImage,\n      profile.description,\n      profile.name,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n    if (profile.isOwnerKeyManager) {\n      await LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n        profile.owner,\n        profile.address,\n        data,\n        signer,\n      )\n        .catch((error) => {\n          setError(true);\n          onClose();\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      await LSP3ProfileApi.setUniversalProfileData(params.add, data, signer)\n        .catch((error) => {\n          setError(true);\n          onClose();\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  const extendedClose = () => {\n    setError(false);\n    onClose();\n  };\n\n  return isOpen ? (\n    <Modal heading=\"Edit Profile\" onClose={extendedClose}>\n      {!loading && !error ? (\n        <StyledEditProfileModalContent>\n          {fields.map((item, i) => (\n            <StyledInputRow key={i}>\n              <StyledLabel>{item.label}</StyledLabel>\n              {item.type === 'textarea' && (\n                <StyledTextAreaInput\n                  name={item.name}\n                  onChange={changeHandler}\n                />\n              )}\n              {(item.type === 'text' || item.type === 'file') && (\n                <StyledInput\n                  name={item.name}\n                  type={item.type}\n                  onChange={\n                    item.type === 'file' ? imageChangeHandler : changeHandler\n                  }\n                  accept={item.type === 'file' ? '.jpg, .png' : ''}\n                />\n              )}\n            </StyledInputRow>\n          ))}\n          <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n        </StyledEditProfileModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait ....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  ) : (\n    <></>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTransferCardModalContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectInput = styled.select`\n  color: black;\n  width: 200px;\n`;\n","import { ethers, Signer } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from '../../../components/Modal';\nimport { KeyManagerApi } from '../../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport { IProfile } from '../../../services/models';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n} from '../ProfileEditModal/styles';\nimport { StyledSelectInput, StyledTransferCardModalContent } from './styles';\n\ninterface IProps {\n  isOpen: boolean;\n  onClose: () => void;\n  signer: Signer;\n  profile: IProfile;\n  selectecAddress?: string;\n}\n\ntype formInput = {\n  toAddress: string;\n  cardAddress: string;\n  tokenId: number | null;\n};\n\nexport const TransferCardModal: React.FC<IProps> = ({\n  isOpen,\n  onClose,\n  signer,\n  profile,\n  selectecAddress,\n}: IProps) => {\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [transferCardForm, setTransferCardForm] = useState<formInput>({\n    toAddress: '',\n    cardAddress: selectecAddress ? selectecAddress : '',\n    tokenId: null,\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (\n      event.currentTarget.name === 'cardAddress' &&\n      event.currentTarget.value !== transferCardForm.cardAddress\n    ) {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n        tokenId: null,\n      });\n    } else {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n      });\n    }\n  };\n\n  const tranferCard = async () => {\n    setLoading(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        transferCardForm.cardAddress,\n        profile.address,\n        profile.owner,\n        transferCardForm.tokenId ? transferCardForm.tokenId : 0,\n        transferCardForm.toAddress,\n        signer,\n      )\n        .then(() => {\n          onClose();\n          window.location.reload();\n        })\n        .catch((error) => {\n          setError(true);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        transferCardForm.cardAddress,\n        profile.address,\n        transferCardForm.tokenId ? transferCardForm.tokenId : 0,\n        transferCardForm.toAddress,\n        signer,\n      )\n        .then(() => {\n          onClose();\n        })\n        .catch(() => {\n          setError(true);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  const disabledTransfer = () => {\n    if (\n      transferCardForm.tokenId &&\n      ethers.utils.isAddress(transferCardForm.toAddress) &&\n      ethers.utils.isAddress(transferCardForm.cardAddress)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const extendedClose = () => {\n    setError(false);\n    onClose();\n  };\n\n  useEffect(() => {}, [selectecAddress]);\n\n  const fields = [\n    { name: 'toAddress', label: 'To', type: 'text' },\n    { name: 'cardAddress', label: 'Card Name', type: 'select' },\n    { name: 'tokenId', label: 'Token Id', type: 'select' },\n  ];\n\n  return isOpen ? (\n    <Modal heading=\"Transfer Cards\" onClose={extendedClose}>\n      {!loading && !error ? (\n        <StyledTransferCardModalContent>\n          {fields.map((item, i) => (\n            <StyledInputRow key={i}>\n              <StyledLabel>{item.label}</StyledLabel>\n              {item.type === 'text' && (\n                <StyledInput\n                  name={item.name}\n                  type={item.type}\n                  onChange={changeHandler}\n                />\n              )}\n              {item.type === 'select' && item.name === 'cardAddress' && (\n                <StyledSelectInput name={item.name} onChange={changeHandler}>\n                  <option>Select token address</option>\n                  {profile.ownedAssets.map((ownedAsset) => (\n                    <option\n                      selected={ownedAsset.assetAddress === selectecAddress}\n                      key={ownedAsset.assetAddress}\n                      value={ownedAsset.assetAddress}\n                    >\n                      {ownedAsset.assetAddress}\n                    </option>\n                  ))}\n                </StyledSelectInput>\n              )}\n              {item.type === 'select' && item.name === 'tokenId' && (\n                <StyledSelectInput name={item.name} onChange={changeHandler}>\n                  <option>Select token id</option>\n                  {profile.ownedAssets\n                    .find(\n                      (ownedAsset) =>\n                        ownedAsset.assetAddress ===\n                        transferCardForm.cardAddress,\n                    )\n                    ?.tokenIds.map((tokenId) => (\n                      <option key={tokenId} value={tokenId}>\n                        {tokenId}\n                      </option>\n                    ))}\n                </StyledSelectInput>\n              )}\n            </StyledInputRow>\n          ))}\n          <StyledSaveButton onClick={tranferCard} disabled={disabledTransfer()}>\n            Transfer Card\n          </StyledSaveButton>\n        </StyledTransferCardModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait for transaction\n                success....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  ) : (\n    <></>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport { useAppDispatch } from '../../boot/store';\nimport Pagination from '../../features/pagination/Pagination';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrappar,\n  StyledCopyLink,\n  StyledCopyLinkIcon,\n  StyledDropDownIcon,\n  StyledFacebookIcon,\n  StyledFaceBookShare,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrappar,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrappar,\n  StyledProfileName,\n  StyledProfileNameBioWrappar,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHeader,\n  StyledShareProfileHolder,\n  StyledShareProfileWrappar,\n  StyledTwitterIcon,\n  StyledTwitterShare,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  Link,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { md } from '../../utility';\nimport {\n  currentProfile,\n  fetchProfileByAddress,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { TransferCardModal } from './TransferCardModal';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst ProfileDetails: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n\n  const [{ data }] = useAccount();\n  const [{ data: signer }] = useSigner();\n  const [openEditProfileModal, setOpenEditProfileModal] =\n    useState<boolean>(false);\n  const [openTransferCardModal, setOpenTransferCardModal] =\n    useState<boolean>(false);\n  const [preSelectedAssetAddress, setPreSelectedAssetAddress] =\n    useState<string>();\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[params.network], params.add),\n  );\n\n  const profileError = useSelector(\n    (state: RootState) => state.userData[params.network].error,\n  );\n\n  const profileStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const [isShare, setIsShare] = useState<boolean>(false);\n\n  const [copied, setCopied] = useState<boolean>(false);\n\n  const isTablet = useMediaQuery(md);\n\n  const keyManagerSetDataPermission = useMemo(\n    () =>\n      profile &&\n      data &&\n      profile.permissionSet.length > 0 &&\n      profile.permissionSet.some(\n        (set) =>\n          set.address.toLowerCase() === data.address.toLowerCase() &&\n          set.permissions.setData === '1',\n      ),\n    [data, profile],\n  );\n\n  const keyManagerCallPermission = useMemo(\n    () =>\n      profile &&\n      data &&\n      profile.permissionSet.length > 0 &&\n      profile.permissionSet.some(\n        (set) =>\n          set.address.toLowerCase() === data.address.toLowerCase() &&\n          set.permissions.call === '1',\n      ),\n    [data, profile],\n  );\n\n  const toggleTransferModal = (address: string) => {\n    setPreSelectedAssetAddress(address);\n    setOpenTransferCardModal(true);\n  };\n\n  useEffect(() => {\n    dispatch(currentProfile(params.add));\n    if (!profile)\n      dispatch(\n        fetchProfileByAddress({ address: params.add, network: params.network }),\n      );\n  }, [dispatch, params.add, params.network, profile]);\n\n  const renderIssuedAssetsPagination = useMemo(\n    () => (\n      <Pagination\n        type=\"issued\"\n        openTransferCardModal={toggleTransferModal}\n        collectionAddresses={profile ? profile.issuedAssets : []}\n      />\n    ),\n    [profile],\n  );\n\n  const renderOwnedAssetsPagination = useMemo(() => {\n    return (\n      <Pagination\n        type=\"owned\"\n        profile={profile}\n        openTransferCardModal={toggleTransferModal}\n        transferPermission={keyManagerCallPermission}\n        collectionAddresses={\n          profile ? profile.ownedAssets.map((item) => item.assetAddress) : []\n        }\n      />\n    );\n  }, [keyManagerCallPermission, profile]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link) => {\n        const linkTitle = link.title.toLowerCase();\n        if (linkTitle === 'twitter') {\n          return (\n            <a href={link.url} target=\"_blank\" rel=\"noreferrer\" key={link.url}>\n              <StyledLinkIcon src={Twitter} />\n            </a>\n          );\n        }\n        if (linkTitle === 'instagram') {\n          return (\n            <a href={link.url} target=\"_blank\" rel=\"noreferrer\" key={link.url}>\n              <StyledLinkIcon src={Instagram} />\n            </a>\n          );\n        }\n        if (linkTitle === 'facebook') {\n          return (\n            <a href={link.url} target=\"_blank\" rel=\"noreferrer\" key={link.url}>\n              <StyledLinkIcon src={Facebook} />\n            </a>\n          );\n        }\n        return (\n          <a href={link.url} target=\"_blank\" rel=\"noreferrer\" key={link.url}>\n            <StyledLinkIcon src={Globe} />\n          </a>\n        );\n      }),\n    [profile?.links],\n  );\n\n  const copyLink = () => {\n    navigator.clipboard.writeText(window.location.href);\n    setCopied((copied) => !copied);\n    setTimeout(() => {\n      setCopied((copied) => !copied);\n    }, 2000);\n  };\n\n  const shareButtonHandler = () => {\n    setIsShare((isShare) => !isShare);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.add, profile]);\n\n  return (\n    <StyledProfileDetails>\n      {signer &&\n        profile &&\n        data &&\n        (keyManagerSetDataPermission ||\n          profile.owner.toLowerCase() === data.address.toLowerCase()) && (\n          <ProfileEditModal\n            isOpen={openEditProfileModal}\n            onClose={() => setOpenEditProfileModal(false)}\n            signer={signer}\n            profile={profile}\n          />\n        )}\n      {signer &&\n        profile &&\n        data &&\n        profile.ownedAssets.length > 0 &&\n        (keyManagerCallPermission ||\n          profile.owner.toLowerCase() === data.address.toLowerCase()) && (\n          <TransferCardModal\n            isOpen={openTransferCardModal}\n            onClose={() => setOpenTransferCardModal(false)}\n            signer={signer}\n            profile={profile}\n            selectecAddress={preSelectedAssetAddress}\n          />\n        )}\n      {profileStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {profileError ? (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          ) : (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrappar>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrappar>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : params.add,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrappar>\n                    <StyledProfileNameBioWrappar>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledProfileLinks>{renderLinks}</StyledProfileLinks>\n                      <StyledShareProfileHolder>\n                        <StyledShareProfileWrappar expand={isShare}>\n                          <StyledShareProfileHeader\n                            expand={isShare}\n                            onClick={shareButtonHandler}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            Share Profile\n                            <StyledDropDownIcon src={DropDownIcon} />\n                          </StyledShareProfileHeader>\n                          <StyledTwitterShare\n                            expand={isShare}\n                            href={`https://twitter.com/intent/tweet?url=${window.location.href}&text=${profile?.name}`}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <StyledTwitterIcon src={Twitter} />\n                            Twitter\n                          </StyledTwitterShare>\n                          <StyledFaceBookShare\n                            href={`https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <StyledFacebookIcon src={Facebook} />\n                            Facebook\n                          </StyledFaceBookShare>\n                          <StyledCopyLink onClick={copyLink}>\n                            <StyledCopyLinkIcon src={Link} />\n                            {copied ? 'Copied' : 'Copy Link'}\n                          </StyledCopyLink>\n                        </StyledShareProfileWrappar>\n                      </StyledShareProfileHolder>\n                    </StyledProfileNameBioWrappar>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{params.add}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrappar>\n              {signer &&\n                profile &&\n                data &&\n                profile.ownedAssets.length > 0 &&\n                (keyManagerCallPermission ||\n                  profile.owner.toLowerCase() ===\n                    data.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton\n                    onClick={() => setOpenTransferCardModal(true)}\n                  >\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n              <StyledAssetsWrappar>\n                {profile && profile.issuedAssets.length > 0 ? (\n                  renderIssuedAssetsPagination\n                ) : (\n                  <></>\n                )}\n                {profile &&\n                  profile.ownedAssets.length > 0 &&\n                  renderOwnedAssetsPagination}\n              </StyledAssetsWrappar>\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n"],"sourceRoot":""}