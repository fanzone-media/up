{"version":3,"sources":["features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/useDefaultAddresses/useDefaultAddresses.ts","pages/Profiles/Profiles.tsx"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","$demo","screen","sm","StyledProfileDetailWrapper","div","StyledProfileDetail","p","font","weight","regular","img","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","type","network","useUrlParams","to","Web3","utils","toChecksumAddress","address","src","makeBlockie","alt","profileImage","name","useDefaultAddresses","params","useParams","useState","addresses","setAddresses","error","setError","useEffect","getDefaultAddresses","then","result","Profiles","dispatch","useAppDispatch","profileAddresses","errorLoadingProfileAddresses","assetsAddresses","errorLoadingAssetsAddresses","isTablet","useMediaQuery","md","usePagination","profilesRange","range","setProfilesRange","setRange","assetsRange","setAssetsRange","resetUserDataSliceInitialState","resetCardsSliceInitialState","length","fetchAllProfiles","slice","userProfiles","useSelector","state","selectAllUsersItems","userData","filter","item","some","i","owner","userProfilesState","status","cards","selectAllCardItems","fetchAllCards","assetsState","nftIconParams","url","NftShowcaseIcon","text","NftBuyAndSellIcon","NftGrantPermissionIcon","NftTransferIcon","NftPersonaliseIcon","NftExchangeIcon","LuksoBadge","Lukso","map","components","nbrOfAllComponents","setComponentsRange","asset","MetaCard","digitalCard"],"mappings":"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","file":"static/js/7.35f466e3.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ $demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ $demo }) => ($demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ $demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ $demo }) => ($demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ $demo?: boolean }>`\n  display: flex;\n  width: ${({ $demo }) => ($demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ $demo }) => ($demo ? '18px' : '14px')};\n  margin-right: ${({ $demo }) => ($demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ $demo?: boolean }>`\n  font-size: ${({ $demo }) => ($demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ $demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ $demo }) => ($demo ? '10px' : '8px')};\n  margin-right: ${({ $demo }) => ($demo ? '10px' : '8px')};\n  width: ${({ $demo }) => ($demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ $demo?: boolean }>`\n  font-size: ${({ $demo }) => ($demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ $demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ $demo }) => ($demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ $demo?: boolean }>`\n  width: ${({ $demo }) => ($demo ? '141px' : '89px')};\n  height: ${({ $demo }) => ($demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ $demo }) => ($demo ? '154px' : '89px')};\n    width: ${({ $demo }) => ($demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ $demo?: boolean }>`\n  height: ${({ $demo }) => ($demo ? '121px' : '80px')};\n  width: ${({ $demo }) => ($demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ $demo }) => ($demo ? '132px' : '80px')};\n    height: ${({ $demo }) => ($demo ? '132px' : '80px')};\n  }\n`;\n","import React from 'react';\nimport { IProfile } from '../../../services/models';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport Web3 from 'web3';\nimport { useUrlParams } from '../../../hooks/useUrlParams';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  type,\n}: Iprops) => {\n  const { network } = useUrlParams();\n\n  return (\n    <StyledProfileCard\n      to={\n        `/up/${network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      $demo={type === 'demo' ? true : false}\n    >\n      <StyledProfileMedia $demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          $demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          $demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper $demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName $demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\nimport { getDefaultAddresses } from '../../utility/content/addresses';\nimport { Address } from '../../utils/types';\n\nexport const useDefaultAddresses = (\n  type: 'profileAddresses' | 'assetsAddresses',\n) => {\n  const params = useParams<{ network: NetworkName }>();\n  const [addresses, setAddresses] = useState<Array<Address>>([]);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    getDefaultAddresses(params.network, type).then(\n      (result) => {\n        setAddresses(result);\n      },\n      (error) => {\n        setError(error);\n      },\n    );\n  }, [params.network, type]);\n\n  return { addresses, error };\n};\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport { RootState } from '../../boot/types';\nimport {\n  fetchAllProfiles,\n  resetUserDataSliceInitialState,\n  selectAllUsersItems,\n} from '../../features/profiles';\nimport { ICard, IProfile } from '../../services/models';\nimport { Pagination } from '../../components';\nimport {\n  StyledContentwrappar,\n  StyledDescription,\n  StyledHeaderSection,\n  StyledHeaderContent,\n  StyledMainContent,\n  StyledHeading,\n  StyledDivider,\n  StyledProfilesHeader,\n  StyledProfileHeaderText,\n  StyledImg,\n  StyledInfoSection,\n  StyledInfoHeading,\n  StyledInfoContent,\n  StyledLuksoBadge,\n  StyledLuksoIcon,\n  StyledLuksoLogo,\n  StyledAd,\n  StyledNftInfoSection,\n  StyledNftInfo,\n  StyledNftInfoIcon,\n  StyledNftInfoText,\n} from './styles';\nimport { Search } from '../../components';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport {\n  fetchAllCards,\n  resetCardsSliceInitialState,\n  selectAllCardItems,\n} from '../../features/cards';\nimport { MetaCard } from '../../features/cards/MetaCard';\nimport { useDefaultAddresses } from '../../hooks/useDefaultAddresses';\nimport { usePagination } from '../../hooks/usePagination';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n  LuksoBadge,\n  Lukso,\n  NftShowcaseIcon,\n  NftBuyAndSellIcon,\n  NftGrantPermissionIcon,\n  NftTransferIcon,\n  NftPersonaliseIcon,\n  NftExchangeIcon,\n} from '../../assets';\nimport { useUrlParams } from '../../hooks/useUrlParams';\n\nconst Profiles: React.FC = () => {\n  const { network } = useUrlParams();\n  const dispatch = useAppDispatch();\n\n  const { addresses: profileAddresses, error: errorLoadingProfileAddresses } =\n    useDefaultAddresses('profileAddresses');\n  const { addresses: assetsAddresses, error: errorLoadingAssetsAddresses } =\n    useDefaultAddresses('assetsAddresses');\n\n  const isTablet = useMediaQuery(theme.screen.md);\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n  const { range: assetsRange, setRange: setAssetsRange } = usePagination();\n\n  useEffect(() => {\n    dispatch(resetUserDataSliceInitialState(network));\n    dispatch(resetCardsSliceInitialState(network));\n  }, [dispatch, network]);\n\n  useEffect(() => {\n    if (profileAddresses.length === 0) return;\n    dispatch(\n      fetchAllProfiles({\n        addresses: profileAddresses.slice(\n          profilesRange[0],\n          profilesRange[1] + 1,\n        ),\n        network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, profileAddresses, network, profilesRange]);\n\n  const userProfiles = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[network]).filter((item) =>\n      profileAddresses\n        .slice(profilesRange[0], profilesRange[1] + 1)\n        .some((i) => i === item.address && item.owner !== ''),\n    ),\n  );\n\n  const userProfilesState = useSelector(\n    (state: RootState) => state.userData[network].status.fetchAllProfiles,\n  );\n\n  const cards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[network]),\n  ).filter((item) =>\n    assetsAddresses\n      .slice(assetsRange[0], assetsRange[1] + 1)\n      .some((i) => i === item.address),\n  );\n\n  useEffect(() => {\n    if (assetsAddresses.length === 0) return;\n    dispatch(\n      fetchAllCards({\n        addresses: assetsAddresses.slice(assetsRange[0], assetsRange[1] + 1),\n        network,\n      }),\n    );\n  }, [dispatch, assetsAddresses, network, assetsRange]);\n\n  const assetsState = useSelector(\n    (state: RootState) => state.cards[network].status.fetchAllCards,\n  );\n\n  const nftIconParams = [\n    {\n      url: NftShowcaseIcon,\n      text: 'Collect, interact and showcase your digital assets, most important share your passion.',\n    },\n    {\n      url: NftBuyAndSellIcon,\n      text: 'Be safe and secure by giving different levels of permissions to decentral Apps, wallets and vaults.',\n    },\n    {\n      url: NftGrantPermissionIcon,\n      text: 'Personalize your own Universal Profile with profile and header picture, social media links and more.',\n    },\n    {\n      url: NftTransferIcon,\n      text: 'Buy, sell and auction your NFTs decentrally right from Universal Profiles, where they already are.',\n    },\n    {\n      url: NftPersonaliseIcon,\n      text: 'Have true digital ownership of your profile, tokens (LSP7, LSP8, …) and over any other dApps.',\n    },\n    {\n      url: NftExchangeIcon,\n      text: 'Universal Profiles sync seamlessly with mobile and regular web applications, like FANZONE.io',\n    },\n  ];\n\n  return (\n    <StyledMainContent>\n      <StyledHeaderSection>\n        {!isTablet && (\n          <StyledLuksoLogo>\n            <StyledLuksoBadge>\n              <StyledImg src={LuksoBadge} />\n            </StyledLuksoBadge>\n            <StyledLuksoIcon>\n              <StyledImg src={Lukso} />\n            </StyledLuksoIcon>\n          </StyledLuksoLogo>\n        )}\n        <StyledHeaderContent>\n          <StyledHeading>Token & NFT Wallet With Vault Manager</StyledHeading>\n          <StyledDescription>\n            Fanzone is backed by an amazing remote teamof 20+ creative & driven\n            individuals.\n          </StyledDescription>\n        </StyledHeaderContent>\n        {isTablet && <StyledAd />}\n      </StyledHeaderSection>\n      {!isTablet && <StyledAd />}\n      <StyledContentwrappar>\n        <StyledInfoSection>\n          {isTablet && (\n            <StyledLuksoLogo>\n              <StyledLuksoBadge>\n                <StyledImg src={LuksoBadge} />\n              </StyledLuksoBadge>\n              <StyledLuksoIcon>\n                <StyledImg src={Lukso} />\n              </StyledLuksoIcon>\n            </StyledLuksoLogo>\n          )}\n          <StyledInfoContent>\n            <StyledInfoHeading>What can you do with your UP?</StyledInfoHeading>\n            <StyledDescription>\n              Your Universal Profile can act as your digital identity and\n              digital reputation in Web3 and Metaverse.\n            </StyledDescription>\n            <StyledDescription>\n              We believe this is the most advanced and decentral identity\n              standard (ERC725), created by Fabian Vogelsteller and brought\n              forward through LUKSO and its vision.{' '}\n            </StyledDescription>\n            <StyledDescription>\n              Instead of plain old wallets, a Universal Profile can be\n              customized like a social media profile - but is in your complete\n              control. It’s easy to use and fun, so it’s ready for mass\n              adoption.\n            </StyledDescription>\n          </StyledInfoContent>\n        </StyledInfoSection>\n        {isTablet && <StyledDivider />}\n        <StyledNftInfoSection>\n          {nftIconParams.map(({ url, text }, i) => (\n            <StyledNftInfo key={i}>\n              <StyledNftInfoIcon>\n                <StyledImg src={url} />\n              </StyledNftInfoIcon>\n              <StyledNftInfoText>{text}</StyledNftInfoText>\n            </StyledNftInfo>\n          ))}\n        </StyledNftInfoSection>\n        {isTablet && <StyledDivider />}\n        <>\n          {errorLoadingProfileAddresses ? (\n            <StyledProfilesHeader>\n              <StyledProfileHeaderText>\n                Error loading profiles\n              </StyledProfileHeaderText>\n            </StyledProfilesHeader>\n          ) : (\n            <>\n              <StyledProfilesHeader>\n                <StyledProfileHeaderText>Profiles</StyledProfileHeaderText>\n                <Search />\n              </StyledProfilesHeader>\n              <Pagination\n                status={userProfilesState}\n                components={userProfiles.map((userProfile: IProfile) => (\n                  <ProfileCard\n                    key={userProfile.address}\n                    userProfile={userProfile}\n                    type=\"demo\"\n                  />\n                ))}\n                nbrOfAllComponents={profileAddresses.length}\n                setComponentsRange={setProfilesRange}\n              />\n            </>\n          )}\n          {errorLoadingAssetsAddresses ? (\n            <StyledProfilesHeader>\n              <StyledProfileHeaderText>\n                Error loading assets\n              </StyledProfileHeaderText>\n            </StyledProfilesHeader>\n          ) : (\n            <>\n              <StyledProfilesHeader>\n                <StyledProfileHeaderText>Assets</StyledProfileHeaderText>\n                <Search />\n              </StyledProfilesHeader>\n              <Pagination\n                status={assetsState}\n                components={cards.map((asset: ICard) => (\n                  <MetaCard\n                    key={asset.address}\n                    digitalCard={asset}\n                    type=\"demo\"\n                  />\n                ))}\n                nbrOfAllComponents={assetsAddresses.length}\n                setComponentsRange={setAssetsRange}\n              />\n            </>\n          )}\n        </>\n      </StyledContentwrappar>\n    </StyledMainContent>\n  );\n};\n\nexport default Profiles;\n"],"sourceRoot":""}