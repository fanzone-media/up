{"version":3,"sources":["components/TransactionStateWindow/styles.ts","components/TransactionStateWindow/TransactionStateWindow.tsx","components/InputField/styles.ts","utility/permissions.ts","boot/types.ts","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","utility/content/text.ts","utility/file.ts","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/TransferCardModal/TransferCardsModal.tsx","pages/ProfileDetails/WithdrawFundsModal/styles.ts","pages/ProfileDetails/WithdrawFundsModal/WithdrawFundsModal.tsx","hooks/useWithdrawFunds/useWitdrawFunds.ts","pages/ProfileDetails/ProfileDetails.tsx","hooks/useCopyText/useCopyText.ts"],"names":["StyledProcessingWindow","styled","div","height","StyledStateContent","StyledStateIcon","img","StyledStateHeading","h2","StyledStateDescription","p","StyledTryButton","button","TransactionStateWindow","state","transactionMessages","callback","transactionStatesIcons","loading","icon","PendingIcon","successful","SuccessIcon","failed","ErrorIcon","STATUS","IDLE","src","alt","mainHeading","description","FAILED","onClick","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","align","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","type","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","find","x","address","toLowerCase","permissions","StringBoolean","StyledProfileDetails","StyledProfileDetailsContent","StyledProfileNotFound","h1","StyledProfileCoverImg","StyledProfileInfoWrapper","StyledProfileInfo1","StyledProfileInfo1Content","theme","screen","md","StyledProfileMediaWrapper","StyledProfileMedia","StyledProfileAddress","font","weight","light","StyledProfileNameBioWrapper","lg","StyledProfileName","bolder","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledShareProfileWrapper","StyledShareIcon","StyledDropDownIcon","StyledAssetsWrapper","a","expand","StyledLinkIconWrapper","StyledLinkIcon","StyledOpenTransferModalButton","StyledOpenEditProfileModal","StyledWitdrawFundsButton","StyledShareProfileButton","isShare","StyledShareDropDown","animation","cardrender","ShareLink","target","StyledProfileImageWrapper","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","pulseAnimate","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","params","useParams","explorer","getChainExplorer","network","href","exploreUrl","rel","UniversalProfileIcon","sanitizeLink","url","replace","createImageFile","fetch","response","blob","data","metadata","File","socialLinks","ProfileEditModal","onDismiss","profile","linkFinder","useCallback","title","link","links","item","useSigner","signer","useState","error","setError","setLoading","profileImage","backgroundImage","name","bio","facebook","twitter","instagram","editProfileForm","setEditProfileForm","useEffect","changeHandler","event","currentTarget","value","imageChangeHandler","files","fields","label","baseUrl","useMemo","width","hash","backgroundImageHash","hashFunction","length","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","catch","finally","setUniversalProfileData","getImageUrl","includes","color","map","i","onChange","accept","TransferCardsModal","toAddress","cardAddress","tokenId","transferCardForm","setTransferCardForm","useTransferLsp8Token","transferCard","transferState","key","htmlFor","id","defaultValue","ownedAssets","assetAddress","ownedAsset","tokenIds","StyledWithdrawModalContent","StyledRadioLabel","$checked","StyledRadioInput","StyledTokenLabel","StyledBalanceWrapper","StyledBalanceLabel","StyledBalanceValue","WithdrawFundsModal","whiteListedTokensInfo","setWhiteListedTokensInfo","balances","setBalances","useAccount","account","selectedTokenInput","setSelectedTokenInput","whiteListedtokensAddresses","getWhiteListedTokenAddresses","provider","useRpcProvider","withdrawState","setWithdrawState","balanceOf","tokenAddresses","profieAddress","Promise","all","tokenContract","ERC20__factory","connect","balance","withdrawFunds","tokenAddress","amount","LOADING","KeyManagerApi","transferBalanceViaKeyManager","then","SUCCESSFUL","transferBalanceViaUniversalProfile","resetState","useWitdrawFunds","fetchWhiteListedTokenInfo","LSP4DigitalAssetApi","fetchErc20TokenInfo","res","toString","decimals","selectedTokenBalance","selectedTokenDecimals","symbol","displayPrice","variant","disabled","Number","ProfileDetails","dispatch","useAppDispatch","pathname","useLocation","useSelector","selectUserById","userData","add","profileError","profileStatus","status","setIsShare","copied","setCopied","copyText","text","window","navigator","clipboard","writeText","setTimeout","canCopy","useCopyText","setItem","useLocalStorage","isTablet","useMediaQuery","permissionsSet","call","TRUE","transferValue","canTransfer","canSetData","canTransferValue","currentProfile","fetchProfileByAddress","usePagination","issuedAssetsRange","range","setIssuedAssetsRange","setRange","ownedAssetsRange","setOwnedAssetsRange","issuedCards","selectAllCardItems","cards","filter","issuedAssets","slice","some","issuedCardStatus","issuedStatus","fetchIssuedCards","addresses","ownedCardStatus","ownedStatus","ownedCards","fetchOwnedCards","asset","renderLinks","linkTitle","Twitter","Instagram","Facebook","Globe","shareButtonRef","useRef","useOutsideClick","shareButtonHandler","share","location","origin","console","log","scrollTo","useModal","onDismissTransferCardsModal","onPresentTransferCardsModal","handlePresent","onDismissProfileEditModal","onPresentProfileEditModal","onDismissWithdrawFundsModal","onPresentWithdrawFundsModal","makeBlockie","ref","ShareIcon","size","DropDownIcon","as","Link","components","digitalCard","MetaCard","nbrOfAllComponents","setComponentsRange"],"mappings":"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","file":"static/js/6.815b8384.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledProcessingWindow = styled.div<{ height?: 'full' }>`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: ${({ height }) => (height ? '100%' : 'calc(100% - 11em)')};\n  bottom: 0;\n  left: -0.03em;\n  border-radius: 0.625em;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const StyledStateContent = styled.div`\n  text-align: center;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledStateIcon = styled.img`\n  height: 8.5em;\n`;\n\nexport const StyledStateHeading = styled.h2`\n  margin-top: -2em;\n`;\n\nexport const StyledStateDescription = styled.p``;\n\nexport const StyledTryButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  padding: 0.3em 0;\n`;\n","import { ErrorIcon, PendingIcon, SuccessIcon } from '../../assets';\nimport { STATUS } from '../../utility';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledProcessingWindow,\n  StyledStateContent,\n  StyledStateDescription,\n  StyledStateHeading,\n  StyledStateIcon,\n  StyledTryButton,\n} from './styles';\n\ninterface IProps {\n  state: STATUS;\n  height?: 'full';\n  callback?: () => any;\n  transactionMessages: {\n    loading: {\n      mainHeading: string;\n      description?: string;\n    };\n    successful: {\n      mainHeading: string;\n      description?: string;\n    };\n    failed: {\n      mainHeading: string;\n      description?: string;\n    };\n  };\n}\n\nexport const TransactionStateWindow = ({\n  state,\n  height,\n  transactionMessages,\n  callback,\n}: IProps) => {\n  const transactionStatesIcons = {\n    loading: {\n      icon: PendingIcon,\n    },\n    successful: {\n      icon: SuccessIcon,\n    },\n    failed: {\n      icon: ErrorIcon,\n    },\n  };\n  return (\n    <>\n      {state !== STATUS.IDLE && (\n        <StyledProcessingWindow height={height}>\n          <StyledStateContent>\n            <StyledStateIcon src={transactionStatesIcons[state].icon} alt=\"\" />\n            <StyledStateHeading>\n              {transactionMessages[state].mainHeading}\n            </StyledStateHeading>\n            <StyledStateDescription>\n              {transactionMessages[state]?.description}\n            </StyledStateDescription>\n            {callback && state === STATUS.FAILED && (\n              <StyledTryButton onClick={callback}>Try again</StyledTryButton>\n            )}\n          </StyledStateContent>\n        </StyledProcessingWindow>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import { ICardState } from '../features/cards/types';\nimport { IUserDataSliceState } from '../features/profiles/types';\nimport { API } from '../services/api';\n\nexport type ThunkExtra = {\n  api: API;\n};\n\nexport type RootState = {\n  userData: IUserDataSliceState;\n  cards: ICardState;\n};\n\nexport type NetworkName = 'l14' | 'mumbai' | 'polygon' | 'ethereum';\n\nexport type AsyncReturnType<T extends (...args: any) => Promise<any>> =\n  T extends (...args: any) => Promise<infer R> ? R : any;\n\nexport type UnpackedType<T> = T extends (infer U)[] ? U : T;\n\nexport enum StringBoolean {\n  FALSE = '0',\n  TRUE = '1',\n}\n","import styled from 'styled-components';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 1.875rem;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 15em;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 1.25em 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    --profile-image-size: 11.25em;\n    --outer-columns-width: calc(\n      50% - 2.5em - calc(var(--profile-image-size) / 2)\n    );\n    align-items: center;\n    display: grid;\n    width: 1440px;\n    grid-template-columns:\n      var(--outer-columns-width) var(--profile-image-size)\n      var(--outer-columns-width);\n    grid-column-gap: 2.5em;\n    padding: 1.25em 2.5em;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrapper = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${({ theme }) => theme.screen.md} {\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    left: 50%;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  font-weight: ${({ theme }) => theme.font.weight.light};\n  letter-spacing: 1.5px;\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: min(0.875rem, 3.5vw);\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(100% - 12.85em);\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const StyledProfileNameBioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 0.25em;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 1.0625rem;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin: auto 0 auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    font-size: 1.125rem;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileBioWrapper = styled.div`\n  margin: auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(50% - 5.625em);\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin-right: 2.5em;\n  column-gap: 1.5em;\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${({ theme }) => theme.screen.md} {\n    max-width: 1440px;\n    padding: 0 2.5em;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 1.25em 0 1.25em 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  row-gap: 1.35em;\n  margin-top: 1.35em;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    margin-left: auto;\n    margin-top: 0;\n  }\n`;\n\nexport const StyledShareProfileWrapper = styled.div`\n  position: relative;\n  overflow: visible;\n  width: max-content;\n`;\n\nexport const StyledShareIcon = styled.img`\n  height: 0.875em;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  display: inline-block;\n  margin-left: 0.5em;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0 2.5em;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIconWrapper = styled.a`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledOpenEditProfileModal = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledWitdrawFundsButton = styled(StyledOpenEditProfileModal)``;\n\nexport const StyledShareProfileButton = styled.button<{ isShare: boolean }>`\n  align-items: center;\n  column-gap: 1.25em;\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  padding: 0.5em 0.75em;\n  font-size: 0.9375rem;\n  overflow: hidden;\n  margin: auto 0;\n  display: flex;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0;\n    right: 0;\n    border-bottom-color: rgba(255, 255, 255, 0.15);\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n\n  ${({ isShare }) =>\n    isShare &&\n    `\n    border-bottom-color: transparent;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n`;\n\nexport const StyledShareDropDown = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 100%;\n  background-color: rgba(59, 59, 59, 1);\n  border-width: 0px 1px 1px;\n  border-color: rgba(255, 255, 255, 0.15);\n  border-style: solid;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 10;\n  animation: ${({ theme }) => theme.animation.cardrender} 0.2s linear;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-top-width: 1px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    top: calc(100% + 0.5em);\n    width: max-content;\n  }\n`;\n\nexport const ShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  align-items: center;\n  display: flex;\n  column-gap: 1.25em;\n  padding: 0.5em 0.75em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: max-content;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\n\nexport const StyledProfileImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n`;\n\nexport const StyledProfileImg = styled.img`\n  border-radius: 50%;\n  height: calc(100% - 1em);\n  inset: 0;\n  margin: auto;\n  position: absolute;\n  width: calc(100% - 1em);\n`;\n\nexport const StyledBlockieImg = styled.img`\n  align-items: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  z-index: 10;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  height: calc(100% - 1em);\n  inset: 0;\n  position: absolute;\n  width: auto;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrapper,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const explorer = getChainExplorer(params.network);\n  return (\n    <StyledProfileImageWrapper>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {params.network === 'l14' && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrapper>\n  );\n};\n","export const sanitizeLink = (url: string) => {\n  return url.replace(/^.*\\/\\/[^/]+\\//, '');\n};\n","export const createImageFile = async (url: string) => {\n  let response = await fetch(url);\n  let data = await response.blob();\n  let metadata = {\n    type: 'image/jpeg',\n  };\n\n  return new File([data], url, metadata);\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { Modal } from '../../../components';\nimport {\n  FileInput,\n  HiddenFileInput,\n  HiddenFileInputWrapper,\n} from '../../../components/InputField/styles';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { sanitizeLink } from '../../../utility/content/text';\nimport { createImageFile } from '../../../utility/file';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport {\n  FileEditWrapper,\n  MetaLabel,\n  MetaLabeledInput,\n  PreviewImage,\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n} from './styles';\n\ninterface IProps {\n  onDismiss: () => void;\n  profile: IProfile;\n}\n\ntype formInput = {\n  profileImage: File | null;\n  backgroundImage: File | null;\n  name: string;\n  bio: string;\n  facebook: string;\n  twitter: string;\n  instagram: string;\n};\n\ntype SocialLink = 'facebook' | 'twitter' | 'instagram';\n\nconst socialLinks = {\n  twitter: 'https://twitter.com/',\n  facebook: 'https://facebook.com/',\n  instagram: 'https://instagram.com/',\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  onDismiss,\n  profile,\n}: IProps) => {\n  const linkFinder = useCallback(\n    (title: SocialLink) => {\n      const link = profile.links.find(\n        (item) => item.title.toLowerCase() === title,\n      );\n      return link ? link.url : '';\n    },\n    [profile.links],\n  );\n\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profileImage: null,\n    backgroundImage: null,\n    name: profile.name,\n    bio: profile.description,\n    facebook: linkFinder('facebook'),\n    twitter: linkFinder('twitter'),\n    instagram: linkFinder('instagram'),\n  });\n\n  useEffect(() => {\n    (async () => {\n      setEditProfileForm({\n        ...editProfileForm,\n        profileImage: await createImageFile(profile.profileImage),\n        backgroundImage: await createImageFile(profile.backgroundImage),\n      });\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile.profileImage, profile.backgroundImage]);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      setEditProfileForm({\n        ...editProfileForm,\n        [event.currentTarget.name]: event.currentTarget.files[0],\n      });\n    }\n  };\n\n  const fields = [\n    { name: 'backgroundImage', label: 'Background Image', type: 'file' },\n    { name: 'profileImage', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    {\n      name: 'twitter',\n      label: 'Twitter',\n      type: 'text',\n      baseUrl: socialLinks.twitter,\n    },\n    {\n      name: 'facebook',\n      label: 'Facebook',\n      type: 'text',\n      baseUrl: socialLinks.facebook,\n    },\n    {\n      name: 'instagram',\n      label: 'Instagram',\n      type: 'text',\n      baseUrl: socialLinks.instagram,\n    },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name: editProfileForm.name,\n      description: editProfileForm.bio,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hash: profile.backgroundImageHash,\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.backgroundImage &&\n            editProfileForm.backgroundImage.name !== profile.backgroundImage\n              ? editProfileForm.backgroundImage\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          hash: profile.backgroundImageHash,\n          url:\n            editProfileForm.profileImage &&\n            editProfileForm.profileImage.name !== profile.profileImage\n              ? editProfileForm.profileImage\n              : profile.profileImage,\n        },\n      ],\n      links: [\n        {\n          title: 'facebook',\n          url:\n            editProfileForm.facebook.length > 0\n              ? `https://facebook.com/${editProfileForm.facebook}`\n              : linkFinder('facebook'),\n        },\n        {\n          title: 'twitter',\n          url:\n            editProfileForm.twitter.length > 0\n              ? `https://twitter.com/${editProfileForm.twitter}`\n              : linkFinder('twitter'),\n        },\n        {\n          title: 'instagram',\n          url:\n            editProfileForm.instagram.length > 0\n              ? `https://instagram.com/${editProfileForm.instagram}`\n              : linkFinder('instagram'),\n        },\n      ],\n    }),\n    [\n      editProfileForm.backgroundImage,\n      editProfileForm.bio,\n      editProfileForm.facebook,\n      editProfileForm.instagram,\n      editProfileForm.name,\n      editProfileForm.profileImage,\n      editProfileForm.twitter,\n      linkFinder,\n      profile.backgroundImage,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n    if (profile.isOwnerKeyManager) {\n      signer &&\n        (await LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n          profile.owner,\n          profile.address,\n          data,\n          signer,\n        )\n          .catch((error) => {\n            setError(true);\n            // onDismiss();\n          })\n          .finally(() => {\n            setLoading(false);\n          }));\n    } else {\n      signer &&\n        (await LSP3ProfileApi.setUniversalProfileData(\n          profile.address,\n          data,\n          signer,\n        )\n          .catch((error) => {\n            setError(true);\n            // onDismiss();\n          })\n          .finally(() => {\n            setLoading(false);\n          }));\n    }\n  };\n\n  const getImageUrl = useCallback(\n    (url: string) =>\n      url.includes('ipfs.infura-ipfs.io')\n        ? url\n        : `https://ipfs.infura.io/${sanitizeLink(url)}`,\n    [],\n  );\n\n  return (\n    <Modal>\n      {!loading && !error ? (\n        <StyledEditProfileModalContent>\n          {fields.map((item, i) => (\n            <StyledInputRow key={i}>\n              <StyledLabel>{item.label}</StyledLabel>\n              {item.type === 'textarea' && (\n                <StyledTextAreaInput\n                  name={item.name}\n                  onChange={changeHandler}\n                  value={\n                    editProfileForm[item.name as keyof formInput] as string\n                  }\n                />\n              )}\n              {item.type === 'text' && (\n                <MetaLabeledInput>\n                  {item.baseUrl && <MetaLabel>{item.baseUrl}</MetaLabel>}\n                  <StyledInput\n                    name={item.name}\n                    type={item.type}\n                    onChange={changeHandler}\n                    value={sanitizeLink(\n                      editProfileForm[item.name as keyof formInput] as string,\n                    )}\n                  />\n                </MetaLabeledInput>\n              )}\n              {item.type === 'file' && (\n                <FileEditWrapper>\n                  {(editProfileForm[item.name as keyof formInput] as File) && (\n                    <PreviewImage\n                      alt={profile.name}\n                      src={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                    />\n                  )}\n                  <HiddenFileInputWrapper>\n                    <FileInput\n                      title={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                      fileName={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                    />\n                    <HiddenFileInput\n                      title={\n                        (editProfileForm[item.name as keyof formInput] as File)\n                          ? getImageUrl(\n                              (\n                                editProfileForm[\n                                  item.name as keyof formInput\n                                ] as File\n                              ).name as string,\n                            )\n                          : ''\n                      }\n                      name={item.name}\n                      onChange={imageChangeHandler}\n                      accept=\".jpg, .png\"\n                    />\n                  </HiddenFileInputWrapper>\n                </FileEditWrapper>\n              )}\n            </StyledInputRow>\n          ))}\n          <br />\n          <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n        </StyledEditProfileModalContent>\n      ) : (\n        <StyledErrorLoadingContent>\n          {!error ? (\n            <>\n              <StyledLoadingHolder>\n                <StyledLoader color=\"#ed7a2d\" />\n              </StyledLoadingHolder>\n              <StyledLoadingMessage>\n                confirm the metamask transaction and wait ....\n              </StyledLoadingMessage>\n            </>\n          ) : (\n            <StyledErrorText>Something went wrong</StyledErrorText>\n          )}\n        </StyledErrorLoadingContent>\n      )}\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport {\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n} from '../ProfileEditModal/styles';\nimport { StyledSelectInput, StyledTransferCardModalContent } from './styles';\nimport { Address } from '../../../utils/types';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IOwnedAssets } from '../../../services/models';\n\ninterface IProps {\n  profile: {\n    address: Address;\n    owner: Address;\n    isOwnerKeyManager: boolean;\n    ownedAssets: IOwnedAssets[];\n  };\n  onDismiss: () => void;\n}\n\ntype formInput = {\n  toAddress: string;\n  cardAddress: string;\n  tokenId: number | null;\n};\n\nexport const TransferCardsModal: React.FC<IProps> = ({\n  profile,\n  onDismiss,\n}: IProps) => {\n  const [transferCardForm, setTransferCardForm] = useState<formInput>({\n    toAddress: '',\n    cardAddress: '',\n    tokenId: null,\n  });\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (\n      event.currentTarget.name === 'cardAddress' &&\n      event.currentTarget.value !== transferCardForm.cardAddress\n    ) {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n        tokenId: null,\n      });\n    } else {\n      setTransferCardForm({\n        ...transferCardForm,\n        [event.currentTarget.name]: event.currentTarget.value,\n      });\n    }\n  };\n\n  const { transferCard, transferState, error } = useTransferLsp8Token(\n    transferCardForm.cardAddress,\n    transferCardForm.toAddress,\n    transferCardForm.tokenId,\n    profile,\n  );\n\n  const fields = [\n    { name: 'toAddress', label: 'To', type: 'text' },\n    { name: 'cardAddress', label: 'Card Name', type: 'select' },\n    { name: 'tokenId', label: 'Token Id', type: 'select' },\n  ];\n\n  return (\n    <StyledTransferCardModalContent>\n      {fields.map((item, key) => (\n        <StyledInputRow key={key}>\n          <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n          {item.type === 'text' && (\n            <StyledInput\n              id={item.name}\n              name={item.name}\n              type={item.type}\n              onChange={changeHandler}\n            />\n          )}\n          {item.type === 'select' && item.name === 'cardAddress' && (\n            <StyledSelectInput\n              name={item.name}\n              onChange={changeHandler}\n              defaultValue={profile.ownedAssets[0].assetAddress}\n            >\n              <option>Token address</option>\n              {profile.ownedAssets.map((ownedAsset, key) => (\n                <option\n                  key={key}\n                  value={ownedAsset.assetAddress}\n                  defaultValue={ownedAsset.assetAddress}\n                >\n                  {ownedAsset.assetAddress}\n                </option>\n              ))}\n            </StyledSelectInput>\n          )}\n          {item.type === 'select' && item.name === 'tokenId' && (\n            <StyledSelectInput name={item.name} onChange={changeHandler}>\n              <option>Select token id</option>\n              {profile.ownedAssets\n                .find(\n                  (ownedAsset) =>\n                    ownedAsset.assetAddress === transferCardForm.cardAddress,\n                )\n                ?.tokenIds.map((tokenId, key) => (\n                  <option key={key} value={tokenId}>\n                    {tokenId}\n                  </option>\n                ))}\n            </StyledSelectInput>\n          )}\n        </StyledInputRow>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton onClick={transferCard}>\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n    </StyledTransferCardModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledWithdrawModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  padding: 0 0.9em;\n  display: flex;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  top: -0.1em;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledTokenLabel = styled.p`\n  margin-left: 0.9em;\n`;\n\nexport const StyledBalanceWrapper = styled.div`\n  display: flex;\n  border-left: 1px solid white;\n  width: 50%;\n  margin-left: auto;\n  padding-left: 0.9em;\n`;\n\nexport const StyledBalanceLabel = styled.p``;\n\nexport const StyledBalanceValue = styled.p`\n  margin-left: auto;\n`;\n","import { BigNumber } from 'ethers';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { NetworkName } from '../../../boot/types';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useRpcProvider } from '../../../hooks/useRpcProvider';\nimport { useWitdrawFunds } from '../../../hooks/useWithdrawFunds';\nimport { LSP4DigitalAssetApi } from '../../../services/controllers/LSP4DigitalAsset';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice, STATUS } from '../../../utility';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport { Address } from '../../../utils/types';\nimport {\n  StyledBalanceLabel,\n  StyledBalanceValue,\n  StyledBalanceWrapper,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledTokenLabel,\n  StyledWithdrawModalContent,\n} from './styles';\n\ninterface IProps {\n  profile: IProfile;\n  network: NetworkName;\n  onDismiss: () => void;\n}\n\nexport const WithdrawFundsModal = ({ profile, network, onDismiss }: IProps) => {\n  const [whiteListedTokensInfo, setWhiteListedTokensInfo] = useState<\n    IWhiteListedTokens[]\n  >([]);\n  const [balances, setBalances] = useState<\n    Array<{ balance: BigNumber; address: string }>\n  >([]);\n  const [{ data: account }] = useAccount();\n  const [selectedTokenInput, setSelectedTokenInput] = useState<Address>('');\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const provider = useRpcProvider(network);\n  const { balanceOf, withdrawFunds, withdrawState, resetState } =\n    useWitdrawFunds(network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSelectedTokenInput(event.currentTarget.value);\n  };\n\n  const fetchWhiteListedTokenInfo = useCallback(async () => {\n    const res = await Promise.all(\n      whiteListedtokensAddresses.map(\n        async (address) =>\n          await LSP4DigitalAssetApi.fetchErc20TokenInfo(address, provider),\n      ),\n    );\n    setWhiteListedTokensInfo(res);\n  }, [provider, whiteListedtokensAddresses]);\n\n  const [selectedTokenBalance, selectedTokenDecimals] = useMemo(() => {\n    const balance = balances\n      .find(\n        (item) =>\n          item.address.toLowerCase() === selectedTokenInput.toLowerCase(),\n      )\n      ?.balance.toString();\n    const decimals = whiteListedTokensInfo.find(\n      (item) =>\n        item.tokenAddress.toLowerCase() === selectedTokenInput.toLowerCase(),\n    )?.decimals;\n    return [balance, decimals];\n  }, [balances, selectedTokenInput, whiteListedTokensInfo]);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'WITHDRAWING FUNDS. . .',\n    },\n    successful: {\n      mainHeading: 'WITHDRAW SUCCESSFULL',\n    },\n    failed: {\n      mainHeading: 'WITHDRAW FAILED',\n      description: 'Please try agian.',\n    },\n  };\n\n  useEffect(() => {\n    fetchWhiteListedTokenInfo();\n    balanceOf(whiteListedtokensAddresses, profile.address).then((res) => {\n      setBalances(res);\n    });\n  }, []);\n\n  return (\n    <StyledWithdrawModalContent>\n      {whiteListedTokensInfo.map((item) => (\n        <StyledRadioLabel\n          htmlFor=\"token\"\n          $checked={\n            selectedTokenInput.toLowerCase() === item.tokenAddress.toLowerCase()\n          }\n        >\n          <StyledRadioInput\n            name=\"payment\"\n            type=\"radio\"\n            id=\"token\"\n            value={item.tokenAddress}\n            onChange={changeHandler}\n          />\n          <StyledTokenLabel>{item.symbol}</StyledTokenLabel>\n          <StyledBalanceWrapper>\n            <StyledBalanceLabel>Balance: </StyledBalanceLabel>\n            <StyledBalanceValue>\n              {displayPrice(\n                selectedTokenBalance ? selectedTokenBalance : 0,\n                selectedTokenDecimals ? selectedTokenDecimals : 0,\n              )}\n            </StyledBalanceValue>\n          </StyledBalanceWrapper>\n        </StyledRadioLabel>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!selectedTokenBalance || Number(selectedTokenBalance) <= 0}\n          onClick={async () =>\n            account &&\n            (await withdrawFunds(\n              profile,\n              selectedTokenInput,\n              account.address,\n              selectedTokenBalance ? selectedTokenBalance : 0,\n            ))\n          }\n        >\n          withdraw to metamask\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={withdrawState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledWithdrawModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IProfile } from '../../services/models';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\nimport { useRpcProvider } from '../useRpcProvider';\n\nexport const useWitdrawFunds = (network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [withdrawState, setWithdrawState] = useState<STATUS>(STATUS.IDLE);\n  const provider = useRpcProvider(network);\n\n  const balanceOf = async (\n    tokenAddresses: Address[],\n    profieAddress: Address,\n  ) => {\n    const balances = await Promise.all(\n      tokenAddresses.map(async (address) => {\n        const tokenContract = ERC20__factory.connect(address, provider);\n        const balance = await tokenContract.balanceOf(profieAddress);\n        return {\n          address,\n          balance,\n        };\n      }),\n    );\n    return balances;\n  };\n\n  const withdrawFunds = async (\n    profile: IProfile,\n    tokenAddress: Address,\n    toAddress: Address,\n    amount: BigNumberish,\n  ) => {\n    setWithdrawState(STATUS.LOADING);\n    if (profile.isOwnerKeyManager) {\n      signer &&\n        (await KeyManagerApi.transferBalanceViaKeyManager(\n          tokenAddress,\n          profile.owner,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        )\n          .then(() => {\n            setWithdrawState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setWithdrawState(STATUS.FAILED);\n          }));\n    } else {\n      signer &&\n        (await LSP3ProfileApi.transferBalanceViaUniversalProfile(\n          tokenAddress,\n          profile.address,\n          amount,\n          toAddress,\n          signer,\n        )\n          .then(() => {\n            setWithdrawState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setWithdrawState(STATUS.FAILED);\n          }));\n    }\n  };\n\n  return {\n    balanceOf,\n    withdrawFunds,\n    withdrawState,\n    error,\n    resetState: () => setWithdrawState(STATUS.IDLE),\n  };\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState, StringBoolean } from '../../boot/types';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { HideOnScreen, Pagination } from '../../components';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrapper,\n  StyledDropDownIcon,\n  StyledLinkIconWrapper,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrapper,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrapper,\n  StyledProfileName,\n  StyledProfileNameBioWrapper,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHolder,\n  StyledShareProfileButton,\n  StyledShareDropDown,\n  ShareLink,\n  StyledShareProfileWrapper,\n  StyledOpenEditProfileModal,\n  StyledWitdrawFundsButton,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  Link,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n  currentProfile,\n  fetchProfileByAddress,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport {\n  fetchIssuedCards,\n  fetchOwnedCards,\n  selectAllCardItems,\n} from '../../features/cards';\nimport { ICard, IProfile } from '../../services/models';\nimport { MetaCard } from '../../features/cards/MetaCard';\nimport { StyledProfileHeading, StyledProfilesHeader } from '../Profiles/styles';\nimport { TransferCardsModal } from './TransferCardModal/TransferCardsModal';\nimport { useModal } from '../../hooks/useModal';\nimport { usePagination } from '../../hooks/usePagination';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { WithdrawFundsModal } from './WithdrawFundsModal';\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n}\n\nconst ProfileDetails: React.FC = () => {\n  const params = useParams<IParams>();\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  const [{ data: account }] = useAccount();\n  const [{ data: signer }] = useSigner();\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[params.network], params.add),\n  );\n\n  const profileError = useSelector(\n    (state: RootState) => state.userData[params.network].error,\n  );\n\n  const profileStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const [isShare, setIsShare] = useState<boolean>(false);\n\n  const { copied, copyText, canCopy } = useCopyText();\n  const { setItem } = useLocalStorage();\n\n  const isTablet = useMediaQuery(theme.screen.md);\n\n  const [canTransfer, canSetData, canTransferValue] = useMemo(() => {\n    if (!profile || !account) return [false, false, false];\n    const permissionsSet = getAddressPermissionsOnUniversalProfile(\n      profile.permissionSet,\n      account.address,\n    );\n    return [\n      permissionsSet?.permissions.call === StringBoolean.TRUE,\n      permissionsSet?.permissions.setData === StringBoolean.TRUE,\n      permissionsSet?.permissions.transferValue === StringBoolean.TRUE,\n    ];\n  }, [account, profile]);\n\n  useMemo(() => {\n    if (!account || !profile || !canTransfer || !canSetData) return;\n    setItem(params.network, params.add, profile.permissionSet);\n  }, [\n    account,\n    canSetData,\n    canTransfer,\n    params.add,\n    params.network,\n    profile,\n    setItem,\n  ]);\n\n  useEffect(() => {\n    dispatch(currentProfile(params.add));\n    if (!profile)\n      dispatch(\n        fetchProfileByAddress({ address: params.add, network: params.network }),\n      );\n  }, [dispatch, params.add, params.network, profile]);\n\n  const { range: issuedAssetsRange, setRange: setIssuedAssetsRange } =\n    usePagination();\n  const { range: ownedAssetsRange, setRange: setOwnedAssetsRange } =\n    usePagination();\n\n  const issuedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[params.network]),\n  ).filter((item) =>\n    profile?.issuedAssets\n      .slice(issuedAssetsRange[0], issuedAssetsRange[1] + 1)\n      .some((i) => i === item.address),\n  );\n\n  const issuedCardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].issuedStatus,\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.issuedAssets.length === 0) return;\n    dispatch(\n      fetchIssuedCards({\n        addresses: profile.issuedAssets.slice(\n          issuedAssetsRange[0],\n          issuedAssetsRange[1] + 1,\n        ),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, issuedAssetsRange]);\n\n  const ownedCardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].ownedStatus,\n  );\n\n  const ownedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[params.network]),\n  ).filter((item) =>\n    profile?.ownedAssets\n      .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1)\n      .some((i) => i.assetAddress === item.address),\n  );\n\n  useEffect(() => {\n    if (!profile || profile?.ownedAssets.length === 0) return;\n    dispatch(\n      fetchOwnedCards({\n        addresses: profile.ownedAssets\n          .map((asset) => asset.assetAddress)\n          .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1),\n        network: params.network,\n      }),\n    );\n  }, [dispatch, profile, params.network, ownedAssetsRange]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link, i) => {\n        const linkTitle = link.title.toLowerCase();\n        return link.url !== '' ? (\n          <StyledProfileLinks key={i}>\n            <StyledLinkIconWrapper\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <StyledLinkIcon\n                src={\n                  linkTitle === 'twitter'\n                    ? Twitter\n                    : linkTitle === 'instagram'\n                    ? Instagram\n                    : linkTitle === 'facebook'\n                    ? Facebook\n                    : Globe\n                }\n              />\n            </StyledLinkIconWrapper>\n          </StyledProfileLinks>\n        ) : (\n          <></>\n        );\n      }),\n    [profile?.links],\n  );\n\n  const shareButtonRef = useRef(null);\n  useOutsideClick(shareButtonRef, () => isShare && setIsShare(false));\n\n  const shareButtonHandler = useCallback(async () => {\n    try {\n      await navigator.share({\n        title: `Fanzone.io Universal Profile – ${profile && profile.address}`,\n        text: `This is Fanzone.io's Universal Profile page for ${\n          profile && profile.address\n        }`,\n        url: `${window.location.origin}/#${pathname}`,\n      });\n      console.log('shared successfully');\n    } catch (err) {\n      setIsShare((isShare) => !isShare);\n      console.error('Error: ' + err);\n    }\n  }, [pathname, profile]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.add, profile]);\n\n  const {\n    handlePresent: onPresentTransferCardsModal,\n    onDismiss: onDismissTransferCardsModal,\n  } = useModal(\n    <TransferCardsModal\n      profile={{\n        address: profile?.address ? profile.address : '',\n        owner: profile?.owner ? profile.owner : '',\n        isOwnerKeyManager: profile?.isOwnerKeyManager\n          ? profile.isOwnerKeyManager\n          : false,\n        ownedAssets: profile?.ownedAssets ? profile.ownedAssets : [],\n      }}\n      onDismiss={() => onDismissTransferCardsModal()}\n    />,\n    'Cards Transfer Modal',\n    'Transfer Card',\n  );\n\n  const {\n    handlePresent: onPresentProfileEditModal,\n    onDismiss: onDismissProfileEditModal,\n  } = useModal(\n    <ProfileEditModal\n      profile={profile ? profile : ({} as IProfile)}\n      onDismiss={() => onDismissProfileEditModal()}\n    />,\n    'Profile Edit Modal',\n    'Profile Edit',\n  );\n\n  const {\n    handlePresent: onPresentWithdrawFundsModal,\n    onDismiss: onDismissWithdrawFundsModal,\n  } = useModal(\n    profile && (\n      <WithdrawFundsModal\n        profile={profile}\n        network={params.network}\n        onDismiss={() => onDismissWithdrawFundsModal()}\n      />\n    ),\n    'Withdraw Funds Modal',\n    'Withdraw Funds',\n  );\n\n  return (\n    <StyledProfileDetails>\n      {profileStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {profileError ? (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          ) : (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrapper>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrapper>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : params.add,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrapper>\n                    <StyledProfileNameBioWrapper>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledShareProfileHolder>\n                        {renderLinks}\n                        <StyledShareProfileWrapper ref={shareButtonRef}>\n                          <StyledShareProfileButton\n                            onClick={shareButtonHandler}\n                            isShare={isShare}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            <HideOnScreen size=\"lg\">\n                              Share profile{' '}\n                              {!navigator['share'] && (\n                                <StyledDropDownIcon src={DropDownIcon} />\n                              )}\n                            </HideOnScreen>\n                          </StyledShareProfileButton>\n                          {isShare && (\n                            <StyledShareDropDown>\n                              <ShareLink\n                                href={`https://twitter.com/intent/tweet?url=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Twitter} alt=\"Twitter\" />\n                                Twitter\n                              </ShareLink>\n                              {/* <ShareLink>\n                                <img src={Instagram} alt=\"Instagram\" />\n                                Instagram\n                              </ShareLink> */}\n                              <ShareLink\n                                href={`https://www.facebook.com/sharer.php?u=${window.location.origin}/#${pathname}`}\n                              >\n                                <img src={Facebook} alt=\"Facebook\" />\n                                Facebook\n                              </ShareLink>\n                              {canCopy && (\n                                <ShareLink\n                                  as=\"button\"\n                                  onClick={() =>\n                                    copyText(\n                                      `${window.location.origin}/#${pathname}`,\n                                    )\n                                  }\n                                >\n                                  <img src={Link} alt=\"Copy Link\" />\n                                  {copied ? 'Copied!' : 'Copy Link'}\n                                </ShareLink>\n                              )}\n                            </StyledShareDropDown>\n                          )}\n                        </StyledShareProfileWrapper>\n                      </StyledShareProfileHolder>\n                    </StyledProfileNameBioWrapper>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{params.add}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrapper>\n              {profile &&\n                account &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton\n                    onClick={onPresentTransferCardsModal}\n                  >\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n              {signer &&\n                profile &&\n                account &&\n                (canSetData ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenEditProfileModal\n                    onClick={onPresentProfileEditModal}\n                  >\n                    Edit Profile\n                  </StyledOpenEditProfileModal>\n                )}\n              {canTransferValue && (\n                <StyledWitdrawFundsButton onClick={onPresentWithdrawFundsModal}>\n                  Withdraw Funds\n                </StyledWitdrawFundsButton>\n              )}\n              <StyledAssetsWrapper>\n                {profile && profile.issuedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Issued Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={issuedCardStatus}\n                      components={issuedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.issuedAssets.length}\n                      setComponentsRange={setIssuedAssetsRange}\n                    />\n                  </>\n                )}\n                {/* @TODO: Change names of components StyledProfilesHeader and StyledProfileHeading */}\n                {profile && profile.ownedAssets.length > 0 && (\n                  <>\n                    <StyledProfilesHeader>\n                      <StyledProfileHeading>Owned Assets</StyledProfileHeading>\n                    </StyledProfilesHeader>\n                    <Pagination\n                      status={ownedCardStatus}\n                      components={ownedCards.map((digitalCard: ICard) => {\n                        return (\n                          <MetaCard\n                            key={digitalCard.address}\n                            digitalCard={digitalCard}\n                            type=\"demo\"\n                            canTransfer={canTransfer}\n                            profile={profile}\n                          />\n                        );\n                      })}\n                      nbrOfAllComponents={profile.ownedAssets.length}\n                      setComponentsRange={setOwnedAssetsRange}\n                    />\n                  </>\n                )}\n              </StyledAssetsWrapper>\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<boolean>(false);\n\n  const copyText = (text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied((copied) => !copied);\n    setTimeout(() => {\n      setCopied((copied) => !copied);\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n"],"sourceRoot":""}