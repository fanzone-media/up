{"version":3,"sources":["components/ShareReferModal/styles.ts","components/ShareReferModal/ShareReferModal.tsx","pages/ProfileDetails/styles.ts","pages/ProfileDetails/ProfileImage/styles.ts","pages/ProfileDetails/ProfileImage/ProfileImage.tsx","utility/content/text.ts","utility/file.ts","pages/ProfileDetails/ProfileEditModal/ProfileEditModal.tsx","pages/ProfileDetails/TransferCardModal/TransferCardsModal.tsx","pages/ProfileDetails/WithdrawFundsModal/WithdrawFundsModal.tsx","components/Tabs/styles.ts","components/Tabs/Tabs.tsx","pages/ProfileDetails/ProfileSettingModal/ProfileSettingModal.tsx","pages/ProfileDetails/ProfileDetails.tsx"],"names":["StyledShareReferModalContent","styled","div","StyledShareMessage","p","StyledSeparatorContainer","StyledDivider","span","StyledDivText","StyledShareViaLabel","StyledShareOptionsContainer","StyledShareLink","a","attrs","target","StyledInputError","ShareReferModal","network","pathName","onDismiss","getItems","useLocalStorage","selectInputRef","useRef","useCopyText","copied","copyText","savedProfiles","LOCAL_STORAGE_KEYS","UP","savedProfilesAddresses","Object","keys","useState","length","referrerAddress","setReferrerAddress","customReferrerAddress","setCustomReferrerAddress","inputError","setInputError","changeHandler","event","currentTarget","value","getReferrer","isAddress","ref","defaultValue","onChange","map","item","InputField","name","label","type","onBlurHandler","variant","onClick","current","href","window","location","origin","src","Twitter","alt","title","Facebook","as","Link","StyledProfileDetails","StyledProfileDetailsContent","StyledProfileNotFound","h1","StyledProfileCoverImg","img","StyledProfileInfoWrapper","StyledProfileInfo1","StyledProfileInfo1Content","theme","screen","md","StyledProfileMediaWrapper","StyledProfileMedia","StyledProfileAddress","font","weight","light","StyledProfileNameBioWrapper","lg","StyledProfileName","h2","bolder","StyledProfileLinks","StyledProfileInfo2","StyledProfileInfo2Content","StyledShareProfileHolder","StyledProfileSettingButton","button","StyledSettingIcon","StyledShareProfileWrapper","StyledShareIcon","StyledDropDownIcon","StyledAssetsWrapper","expand","StyledLinkIconWrapper","StyledLinkIcon","StyledOpenTransferModalButton","StyledOpenEditProfileModal","StyledWitdrawFundsButton","StyledClaimAuctionTokenButton","StyledShareProfileButton","animation","cardrender","StyledProfileImageWrapper","StyledProfileImg","StyledBlockieImg","StyledBlockScoutLogo","pulseAnimate","StyledUniversalProfileLogo","ProfileImage","profileImgSrc","blockieImgSrc","profileAddress","useUrlParams","explorer","getChainExplorer","exploreUrl","rel","icon","UniversalProfileIcon","sanitizeLink","url","replace","createImageFile","fetch","response","blob","data","metadata","File","socialLinks","ProfileEditModal","profile","setTabName","linkFinder","useCallback","link","links","find","toLowerCase","useSigner","signer","error","setError","loading","setLoading","txVerification","setTxVerification","profileImage","backgroundImage","bio","description","facebook","twitter","instagram","editProfileForm","setEditProfileForm","currentProfileImages","setCurrentProfileImages","useEffect","imageChangeHandler","files","addFile","then","path","imageUrl","catch","fields","baseUrl","useMemo","width","height","hash","backgroundImageHash","hashFunction","setData","isOwnerKeyManager","LSP3ProfileApi","setUniversalProfileDataViaKeyManager","owner","address","setUniversalProfileData","transaction","wait","reload","getImageUrl","includes","ExclamationIcon","color","i","fileName","accept","TransferCardsModal","ownedCards","toAddress","cardAddress","ownedAssets","assetAddress","tokenId","transferCardForm","setTransferCardForm","selectedCard","setSelectedCard","useProfile","destinationProfile","profileAddressError","getProfile","isProfileLoading","card","useTransferLsp8Token","transferCard","transferState","ProfilePreview","profileError","align","placeholder","key","htmlFor","ownedAsset","tokenIds","WithdrawFundsModal","whiteListedTokensInfo","setWhiteListedTokensInfo","balances","setBalances","useAccount","account","selectedTokenInput","setSelectedTokenInput","whiteListedtokensAddresses","getWhiteListedTokenAddresses","provider","useRpcProvider","useWitdrawFunds","balanceOf","withdrawFunds","withdrawState","resetState","fetchWhiteListedTokenInfo","Promise","all","ERC20Api","fetchErc20TokenInfo","res","balance","toString","tokenAddress","decimals","selectedTokenBalance","selectedTokenDecimals","$checked","id","symbol","displayPrice","disabled","Number","TransactionStateWindow","state","transactionMessages","mainHeading","successful","failed","callback","StyledTabs","StyledTabsHeader","StyledTabsLabel","$active","Tabs","tabs","activeTab","setActiveTab","tab","visible","content","ProfileSettingModal","tabName","permissionsSet","getAddressPermissionsOnUniversalProfile","permissionSet","permissions","call","StringBoolean","TRUE","setdata","addpermissions","canTransfer","canSetData","canAddPermissions","AddPermissionsModalContent","ProfileDetails","dispatch","useAppDispatch","pathname","useLocation","query","useQueryParams","setItem","setReferrer","usePagination","issuedAssetsRange","range","setIssuedAssetsRange","setRange","ownedAssetsRange","setOwnedAssetsRange","activeProfileAddress","useSelector","userData","me","selectUserById","cardsStatus","cards","status","userDataStatus","issuedCards","selectAllCardItems","filter","issuedAssets","slice","some","isTablet","useMediaQuery","console","log","transfervalue","canTransferValue","get","resetUserDataSliceInitialState","resetCardsSliceInitialState","currentProfile","fetchProfileByAddress","fetchIssuedAssetAddresses","STATUS","IDLE","fetchIssuedAssetsAddresses","fetchOwnedAssetsAddresses","fetchIssuedCards","addresses","fetchOwnedCards","asset","scrollTo","renderLinks","linkTitle","Instagram","Globe","useModal","onDismissSettingModal","onPresentSettingModal","handlePresent","onDismissTransferCardsModal","onPresentTransferCardsModal","onDismissProfileEditModal","onPresentProfileEditModal","onDismissWithdrawFundsModal","onPresentWithdrawFundsModal","ClaimAuctionTokens","onDismissClaimAuctionTokensModal","onPresentClaimAuctionTokensModal","onDismissShareModal","onPresentShareModal","fetchProfile","LOADING","FAILED","SUCCESSFUL","makeBlockie","ShareIcon","size","navigator","DropDownIcon","SettingIcon","components","digitalCard","MetaCard","nbrOfAllComponents","setComponentsRange"],"mappings":"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","file":"static/js/6.b7090969.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledShareReferModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 1em;\n`;\n\nexport const StyledShareMessage = styled.p``;\n\nexport const StyledSeparatorContainer = styled.div`\n  display: flex;\n  width: 100%;\n  column-gap: 0.5em;\n`;\n\nexport const StyledDivider = styled.span`\n  border: 0.01em solid rgba(153, 153, 153, 1);\n  margin: auto 0;\n  width: 100%;\n`;\n\nexport const StyledDivText = styled.p``;\n\nexport const StyledShareViaLabel = styled.p``;\n\nexport const StyledShareOptionsContainer = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  display: flex;\n  align-items: center;\n  column-gap: 0.25em;\n`;\n\nexport const StyledInputError = styled.p`\n  color: red;\n`;\n","import { useRef, useState } from 'react';\nimport { isAddress } from 'web3-utils';\nimport { Facebook, Link, Twitter } from '../../assets';\nimport { NetworkName } from '../../boot/types';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport {\n  LOCAL_STORAGE_KEYS,\n  ProfilePermissionsLocal,\n  useLocalStorage,\n} from '../../hooks/useLocalStorage';\nimport {\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from '../../pages/AssetDetails/BuyCardModal/styles';\nimport { InputField } from '../InputField';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledDivider,\n  StyledDivText,\n  StyledInputError,\n  StyledSeparatorContainer,\n  StyledShareLink,\n  StyledShareMessage,\n  StyledShareOptionsContainer,\n  StyledShareReferModalContent,\n  StyledShareViaLabel,\n} from './styles';\n\ninterface IProps {\n  network: NetworkName;\n  pathName: string;\n  onDismiss: () => void;\n}\n\nexport const ShareReferModal = ({ network, pathName, onDismiss }: IProps) => {\n  const { getItems } = useLocalStorage();\n  const selectInputRef = useRef<HTMLSelectElement>(null);\n  const { copied, copyText } = useCopyText();\n  const savedProfiles = getItems(\n    LOCAL_STORAGE_KEYS.UP,\n  ) as ProfilePermissionsLocal;\n  const savedProfilesAddresses =\n    savedProfiles && savedProfiles[network]\n      ? Object.keys(savedProfiles[network])\n      : null;\n  const [referrerAddress, setReferrerAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [customReferrerAddress, setCustomReferrerAddress] = useState<boolean>(\n    savedProfilesAddresses ? false : true,\n  );\n  const [inputError, setInputError] = useState<string>('');\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setReferrerAddress(event.currentTarget.value);\n  };\n\n  const getReferrer = () => {\n    return isAddress(referrerAddress) ? `?referrer=${referrerAddress}` : '';\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    !isAddress(referrerAddress)\n      ? setInputError('wrong address')\n      : setInputError('');\n  };\n\n  return (\n    <StyledShareReferModalContent>\n      <StyledShareMessage>\n        Share this link and participate in 1% WETH market sales that came\n        through you\n      </StyledShareMessage>\n      {savedProfilesAddresses && (\n        <StyledSelectInputContainer>\n          <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n          <StyledUpAddressSelectInput\n            ref={selectInputRef}\n            defaultValue={savedProfilesAddresses[0]}\n            onChange={changeHandler}\n          >\n            {savedProfilesAddresses.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </StyledUpAddressSelectInput>\n        </StyledSelectInputContainer>\n      )}\n      {savedProfilesAddresses && (\n        <StyledSeparatorContainer>\n          <StyledDivider />\n          <StyledDivText>Or</StyledDivText>\n          <StyledDivider />\n        </StyledSeparatorContainer>\n      )}\n      {customReferrerAddress && (\n        <InputField\n          name=\"otherAddress\"\n          label=\"Address\"\n          type=\"text\"\n          changeHandler={changeHandler}\n          onBlurHandler={onBlurHandler}\n        />\n      )}\n      {inputError && customReferrerAddress && (\n        <StyledInputError>{inputError}</StyledInputError>\n      )}\n      {savedProfilesAddresses && (\n        <StyledModalButton\n          variant=\"gray\"\n          onClick={() => {\n            if (customReferrerAddress) {\n              selectInputRef.current &&\n                setReferrerAddress(selectInputRef.current.value);\n            } else {\n              setReferrerAddress('');\n            }\n            setCustomReferrerAddress(!customReferrerAddress);\n          }}\n        >\n          {customReferrerAddress ? 'cancel input' : 'use other address'}\n        </StyledModalButton>\n      )}\n      <StyledShareViaLabel>Share Via: </StyledShareViaLabel>\n      <StyledShareOptionsContainer>\n        <StyledShareLink\n          href={`https://twitter.com/intent/tweet?url=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Twitter} alt=\"Twitter\" title=\"twitter\" />\n        </StyledShareLink>\n        <StyledShareLink\n          href={`https://www.facebook.com/sharer.php?u=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Facebook} alt=\"Facebook\" title=\"facebook\" />\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'link',\n              `${window.location.origin}/#${pathName}${getReferrer()}`,\n            )\n          }\n        >\n          <img src={Link} alt=\"Copy Link\" title=\"copy link\" />\n          {copied && copied['link'] ? 'Copied!' : 'Copy Link'}\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'embed',\n              `<iframe src=\"${window.location.origin}/#${pathName}\" title=\"Fanzone\"></iframe>`,\n            )\n          }\n        >\n          {`</>`} {copied && copied['embed'] ? 'Copied!' : 'Copy Embed'}\n        </StyledShareLink>\n      </StyledShareOptionsContainer>\n      <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n        Cancel\n      </StyledModalButton>\n    </StyledShareReferModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledProfileDetails = styled.div`\n  color: white;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledProfileNotFound = styled.h1`\n  font-size: 1.875rem;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledProfileCoverImg = styled.img`\n  width: 100%;\n  height: 15em;\n  object-position: center;\n  object-fit: cover;\n  display: block;\n`;\n\nexport const StyledProfileInfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledProfileInfo1 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(33, 33, 33, 1);\n  display: flex;\n`;\n\nexport const StyledProfileInfo1Content = styled.div`\n  position: relative;\n  display: flex;\n  padding: 1.25em 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    --profile-image-size: 11.25em;\n    --outer-columns-width: calc(\n      50% - 2.5em - calc(var(--profile-image-size) / 2)\n    );\n    align-items: center;\n    display: grid;\n    width: 1440px;\n    grid-template-columns:\n      var(--outer-columns-width) var(--profile-image-size)\n      var(--outer-columns-width);\n    grid-column-gap: 2.5em;\n    padding: 1.25em 2.5em;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledProfileMediaWrapper = styled.div`\n  position: relative;\n  padding: 0 5% 0 5%;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0;\n  }\n`;\n\nexport const StyledProfileMedia = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${({ theme }) => theme.screen.md} {\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    left: 50%;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileAddress = styled.p`\n  font-weight: ${({ theme }) => theme.font.weight.light};\n  letter-spacing: 1.5px;\n  overflow-wrap: break-word;\n  color: rgba(165, 165, 165, 1);\n  font-size: min(0.875rem, 3.5vw);\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(100% - 12.85em);\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const StyledProfileNameBioWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto 0 auto 0;\n  row-gap: 0.25em;\n  width: 100%;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    column-gap: 0.25em;\n    align-items: center;\n  }\n`;\n\nexport const StyledProfileName = styled.h2`\n  font-size: 1.0625rem;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin: auto 0 auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    font-size: 1.125rem;\n    margin: 0 0 0 5%;\n  }\n`;\n\nexport const StyledProfileBioHeading = styled.h2`\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileBioWrapper = styled.div`\n  margin: auto 0;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: calc(50% - 5.625em);\n    padding-left: 2.5%;\n  }\n`;\n\nexport const StyledProfileBio = styled.p`\n  font-size: 0.9375rem;\n`;\n\nexport const StyledProfileLinks = styled.div`\n  display: flex;\n  margin-right: 2.5em;\n  column-gap: 1.5em;\n`;\n\nexport const StyledProfileInfo2 = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n  background-color: rgba(59, 59, 59, 1);\n\n  @media ${({ theme }) => theme.screen.md} {\n    max-width: 1440px;\n    padding: 0 2.5em;\n    margin: 0 auto 0 auto;\n    background-color: transparent;\n  }\n`;\n\nexport const StyledProfileInfo2Content = styled.div`\n  display: flex;\n  padding: 1.25em 0 1.25em 0;\n`;\n\nexport const StyledShareProfileHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  row-gap: 1.35em;\n  margin-top: 1.35em;\n\n  @media ${({ theme }) => theme.screen.lg} {\n    flex-direction: row;\n    margin-left: auto;\n    margin-top: 0;\n  }\n`;\n\nexport const StyledProfileSettingButton = styled.button`\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  height: 2em;\n  padding: 0 0.5em;\n  width: max-content;\n`;\n\nexport const StyledSettingIcon = styled.img`\n  height: 1.5em;\n`;\n\nexport const StyledShareProfileWrapper = styled.div`\n  position: relative;\n  overflow: visible;\n  width: max-content;\n`;\n\nexport const StyledShareIcon = styled.img`\n  height: 0.875em;\n`;\n\nexport const StyledDropDownIcon = styled.img`\n  display: inline-block;\n  margin-left: 0.5em;\n`;\n\nexport const StyledShareProfileHeader = styled.div<{ expand: boolean }>`\n  display: flex;\n  cursor: pointer;\n`;\n\nexport const StyledTwitterShare = styled.a<{ expand: boolean }>`\n  display: flex;\n  margin: ${({ expand }) => (expand ? 'auto 0 auto 6px' : '7px 0 auto 0')};\n`;\n\nexport const StyledTwitterIcon = styled.img`\n  margin-right: 7px;\n`;\n\nexport const StyledFaceBookShare = styled.a`\n  display: flex;\n  margin: auto 0 auto 8px;\n`;\n\nexport const StyledFacebookIcon = styled.img`\n  margin-right: 13px;\n`;\n\nexport const StyledCopyLink = styled.button`\n  display: flex;\n  margin: auto 0 auto 7px;\n`;\n\nexport const StyledCopyLinkIcon = styled.img`\n  margin: auto 7px auto 0;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  width: 100%;\n  padding: 0 0.5em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    padding: 0 2.5em;\n    max-width: 1440px;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nexport const StyledLinkIconWrapper = styled.a`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledLinkIcon = styled.img``;\n\nexport const StyledOpenTransferModalButton = styled.button`\n  background-color: rgba(33, 33, 33, 1);\n  max-width: max-content;\n  margin: 1.25em auto;\n  padding: 5px 0.625em;\n  border-radius: 8px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 2em auto 0 auto;\n  }\n`;\n\nexport const StyledOpenEditProfileModal = styled(\n  StyledOpenTransferModalButton,\n)``;\n\nexport const StyledWitdrawFundsButton = styled(StyledOpenTransferModalButton)``;\n\nexport const StyledClaimAuctionTokenButton = styled(\n  StyledOpenEditProfileModal,\n)``;\n\nexport const StyledShareProfileButton = styled.button`\n  align-items: center;\n  column-gap: 1.25em;\n  background-color: rgba(59, 59, 59, 1);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n  padding: 0.5em 0.75em;\n  font-size: 0.9375rem;\n  overflow: hidden;\n  margin: auto 0;\n  display: flex;\n\n  @media ${({ theme }) => theme.screen.md} {\n    margin: 0;\n    right: 0;\n    border-bottom-color: rgba(255, 255, 255, 0.15);\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    height: 2em;\n    padding: 0 0.5em;\n  }\n`;\n\nexport const StyledShareDropDown = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 100%;\n  background-color: rgba(59, 59, 59, 1);\n  border-width: 0px 1px 1px;\n  border-color: rgba(255, 255, 255, 0.15);\n  border-style: solid;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 10;\n  animation: ${({ theme }) => theme.animation.cardrender} 0.2s linear;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-top-width: 1px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    top: calc(100% + 0.5em);\n    width: max-content;\n  }\n`;\n\nexport const ShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  align-items: center;\n  display: flex;\n  column-gap: 1.25em;\n  padding: 0.5em 0.75em;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: max-content;\n  }\n`;\n","import styled from 'styled-components';\nimport { pulseAnimate } from '../../../features/cards/MetaCard/styles';\n\nexport const StyledProfileImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 0;\n`;\n\nexport const StyledProfileImg = styled.img`\n  border-radius: 50%;\n  height: calc(100% - 1em);\n  inset: 0;\n  margin: auto;\n  position: absolute;\n  width: calc(100% - 1em);\n`;\n\nexport const StyledBlockieImg = styled.img`\n  align-items: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledBlockScoutLogo = styled.img`\n  position: absolute;\n  width: 35px;\n  right: 0;\n  bottom: 0;\n  animation: ${pulseAnimate} 2s ease-in-out infinite;\n  z-index: 10;\n\n  @media ${({ theme }) => theme.screen.md} {\n    width: 55px;\n  }\n`;\n\nexport const StyledUniversalProfileLogo = styled.img`\n  height: calc(100% - 1em);\n  inset: 0;\n  position: absolute;\n  width: auto;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UniversalProfileIcon } from '../../../assets';\nimport { NetworkName } from '../../../boot/types';\nimport { useUrlParams } from '../../../hooks/useUrlParams';\nimport { getChainExplorer } from '../../../utility';\nimport {\n  StyledBlockieImg,\n  StyledBlockScoutLogo,\n  StyledProfileImageWrapper,\n  StyledProfileImg,\n  StyledUniversalProfileLogo,\n} from './styles';\n\ninterface IProps {\n  profileImgSrc?: string;\n  blockieImgSrc?: string;\n  profileAddress?: string;\n}\n\nexport const ProfileImage: React.FC<IProps> = ({\n  profileImgSrc,\n  blockieImgSrc,\n  profileAddress,\n}: IProps) => {\n  const { network } = useUrlParams();\n  const explorer = getChainExplorer(network);\n  return (\n    <StyledProfileImageWrapper>\n      <StyledBlockieImg src={blockieImgSrc} />\n      <a\n        href={explorer && explorer.exploreUrl + profileAddress}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <StyledBlockScoutLogo src={explorer && explorer.icon} />\n      </a>\n      {network in ['l14', 'l16'] && (\n        <a\n          href={'https://universalprofile.cloud/' + profileAddress}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <StyledUniversalProfileLogo src={UniversalProfileIcon} />\n        </a>\n      )}\n      <StyledProfileImg src={profileImgSrc} />\n    </StyledProfileImageWrapper>\n  );\n};\n","export const sanitizeLink = (url: string) => {\n  return url.replace(/^.*\\/\\/[^/]+\\//, '');\n};\n","export const createImageFile = async (url: string) => {\n  let response = await fetch(url);\n  let data = await response.blob();\n  let metadata = {\n    type: 'image/jpeg',\n  };\n\n  return new File([data], url, metadata);\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport {\n  FileInput,\n  HiddenFileInput,\n  HiddenFileInputWrapper,\n} from '../../../components/InputField/styles';\nimport { addFile } from '../../../services/ipfsClient';\nimport { IProfile, ISetProfileData } from '../../../services/models';\nimport { sanitizeLink } from '../../../utility/content/text';\nimport { createImageFile } from '../../../utility/file';\nimport { StyledLoader, StyledLoadingHolder } from '../../AssetDetails/styles';\nimport { LSP3ProfileApi } from '../../../services/controllers/LSP3Profile';\nimport {\n  FileEditWrapper,\n  MetaLabel,\n  MetaLabeledInput,\n  PreviewImage,\n  StyledEditProfileModalContent,\n  StyledErrorLoadingContent,\n  StyledErrorText,\n  StyledInput,\n  StyledInputRow,\n  StyledLabel,\n  StyledLoadingMessage,\n  StyledSaveButton,\n  StyledTextAreaInput,\n  StyledErrorIcon,\n} from './styles';\nimport { ExclamationIcon } from '../../../assets';\n\ninterface IProps {\n  onDismiss: () => void;\n  profile: IProfile;\n  setTabName?: (name: string) => void;\n}\n\ntype formInput = {\n  profileImage: File | null;\n  backgroundImage: File | null;\n  name: string;\n  bio: string;\n  facebook: string;\n  twitter: string;\n  instagram: string;\n};\n\ntype SocialLink = 'facebook' | 'twitter' | 'instagram';\n\nconst socialLinks = {\n  twitter: 'https://twitter.com/',\n  facebook: 'https://facebook.com/',\n  instagram: 'https://instagram.com/',\n};\n\nexport const ProfileEditModal: React.FC<IProps> = ({\n  onDismiss,\n  profile,\n  setTabName,\n}: IProps) => {\n  const linkFinder = useCallback(\n    (title: SocialLink) => {\n      const link = profile.links.find(\n        (item) => item.title.toLowerCase() === title,\n      );\n      return link ? link.url : '';\n    },\n    [profile.links],\n  );\n\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [txVerification, setTxVerification] = useState<boolean>(false);\n  const [editProfileForm, setEditProfileForm] = useState<formInput>({\n    profileImage: null,\n    backgroundImage: null,\n    name: profile.name,\n    bio: profile.description,\n    facebook: linkFinder('facebook'),\n    twitter: linkFinder('twitter'),\n    instagram: linkFinder('instagram'),\n  });\n\n  const [currentProfileImages, setCurrentProfileImages] = useState({\n    profileImage: null,\n    backgroundImage: null,\n  });\n\n  useEffect(() => {\n    (async () => {\n      setEditProfileForm({\n        ...editProfileForm,\n        profileImage: await createImageFile(profile.profileImage),\n        backgroundImage: await createImageFile(profile.backgroundImage),\n      });\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile.profileImage, profile.backgroundImage]);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setEditProfileForm({\n      ...editProfileForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const imageChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      const currentTarget = event.currentTarget;\n      addFile(event.currentTarget.files[0])\n        .then(async (path) => {\n          if (!path) {\n            return;\n          }\n          const imageUrl = `ipfs/${path.replace('ipfs://', '')}`;\n\n          setCurrentProfileImages({\n            ...currentProfileImages,\n            [currentTarget.name]: imageUrl,\n          });\n\n          setEditProfileForm({\n            ...editProfileForm,\n            [currentTarget.name]: currentTarget.files![0],\n          });\n        })\n        .catch((error) => {});\n    }\n  };\n\n  const fields = [\n    { name: 'backgroundImage', label: 'Background Image', type: 'file' },\n    { name: 'profileImage', label: 'Profile Image', type: 'file' },\n    { name: 'name', label: 'Name', type: 'text' },\n    {\n      name: 'twitter',\n      label: 'Twitter',\n      type: 'text',\n      baseUrl: socialLinks.twitter,\n    },\n    {\n      name: 'facebook',\n      label: 'Facebook',\n      type: 'text',\n      baseUrl: socialLinks.facebook,\n    },\n    {\n      name: 'instagram',\n      label: 'Instagram',\n      type: 'text',\n      baseUrl: socialLinks.instagram,\n    },\n    { name: 'bio', label: 'Bio', type: 'textarea' },\n  ];\n\n  const data: ISetProfileData = useMemo(\n    () => ({\n      name: editProfileForm.name,\n      description: editProfileForm.bio,\n      backgroundImage: [\n        {\n          width: '',\n          height: '',\n          hash: profile.backgroundImageHash,\n          hashFunction: 'keccak256(bytes)',\n          url:\n            editProfileForm.backgroundImage &&\n            editProfileForm.backgroundImage.name !== profile.backgroundImage\n              ? editProfileForm.backgroundImage\n              : profile.backgroundImage,\n        },\n      ],\n      profileImage: [\n        {\n          width: '',\n          height: '',\n          hashFunction: 'keccak256(bytes)',\n          hash: profile.backgroundImageHash,\n          url:\n            editProfileForm.profileImage &&\n            editProfileForm.profileImage.name !== profile.profileImage\n              ? editProfileForm.profileImage\n              : profile.profileImage,\n        },\n      ],\n      links: [\n        {\n          title: 'facebook',\n          url:\n            editProfileForm.facebook.length > 0\n              ? `https://facebook.com/${editProfileForm.facebook}`\n              : linkFinder('facebook'),\n        },\n        {\n          title: 'twitter',\n          url:\n            editProfileForm.twitter.length > 0\n              ? `https://twitter.com/${editProfileForm.twitter}`\n              : linkFinder('twitter'),\n        },\n        {\n          title: 'instagram',\n          url:\n            editProfileForm.instagram.length > 0\n              ? `https://instagram.com/${editProfileForm.instagram}`\n              : linkFinder('instagram'),\n        },\n      ],\n    }),\n    [\n      editProfileForm.backgroundImage,\n      editProfileForm.bio,\n      editProfileForm.facebook,\n      editProfileForm.instagram,\n      editProfileForm.name,\n      editProfileForm.profileImage,\n      editProfileForm.twitter,\n      linkFinder,\n      profile.backgroundImage,\n      profile.backgroundImageHash,\n      profile.profileImage,\n    ],\n  );\n\n  const setData = async () => {\n    setLoading(true);\n\n    if (!signer) {\n      return;\n    }\n\n    try {\n      const transaction = await (profile.isOwnerKeyManager\n        ? LSP3ProfileApi.setUniversalProfileDataViaKeyManager(\n            profile.owner,\n            profile.address,\n            data,\n            signer,\n          )\n        : LSP3ProfileApi.setUniversalProfileData(\n            profile.address,\n            data,\n            signer,\n          ));\n\n      setTxVerification(true);\n\n      await transaction.wait(1);\n\n      window.location.reload();\n    } catch (error) {\n      if (setTabName) {\n        setTabName('Oops...');\n      }\n\n      setError(true);\n      return;\n    }\n\n    setLoading(false);\n    setTxVerification(false);\n    onDismiss();\n  };\n\n  const getImageUrl = useCallback((url: string) => {\n    return url.includes('ipfs.infura-ipfs.io')\n      ? url\n      : `https://ipfs.fanzone.io/${sanitizeLink(url)}`;\n  }, []);\n\n  return !loading && !error ? (\n    <StyledEditProfileModalContent>\n      {fields.map((item, i) => (\n        <StyledInputRow key={i}>\n          <StyledLabel>{item.label}</StyledLabel>\n          {item.type === 'textarea' && (\n            <StyledTextAreaInput\n              name={item.name}\n              onChange={changeHandler}\n              value={editProfileForm[item.name as keyof formInput] as string}\n            />\n          )}\n          {item.type === 'text' && (\n            <MetaLabeledInput>\n              {item.baseUrl && <MetaLabel>{item.baseUrl}</MetaLabel>}\n              <StyledInput\n                name={item.name}\n                type={item.type}\n                onChange={changeHandler}\n                value={sanitizeLink(\n                  editProfileForm[item.name as keyof formInput] as string,\n                )}\n              />\n            </MetaLabeledInput>\n          )}\n          {item.type === 'file' && (\n            <FileEditWrapper>\n              {(editProfileForm[item.name as keyof formInput] as File) && (\n                <PreviewImage\n                  alt={profile.name}\n                  src={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          currentProfileImages[\n                            item.name as keyof {\n                              profileImage: any;\n                              backgroundImage: any;\n                            }\n                          ] ||\n                            ((\n                              editProfileForm[\n                                item.name as keyof formInput\n                              ] as File\n                            ).name as string),\n                        )\n                      : ''\n                  }\n                />\n              )}\n              <HiddenFileInputWrapper>\n                <FileInput\n                  title={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                  fileName={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                />\n                <HiddenFileInput\n                  title={\n                    (editProfileForm[item.name as keyof formInput] as File)\n                      ? getImageUrl(\n                          (\n                            editProfileForm[\n                              item.name as keyof formInput\n                            ] as File\n                          ).name as string,\n                        )\n                      : ''\n                  }\n                  name={item.name}\n                  onChange={imageChangeHandler}\n                  accept=\".jpg, .png\"\n                />\n              </HiddenFileInputWrapper>\n            </FileEditWrapper>\n          )}\n        </StyledInputRow>\n      ))}\n      <br />\n      <StyledSaveButton onClick={setData}>Save Changes</StyledSaveButton>\n    </StyledEditProfileModalContent>\n  ) : (\n    <StyledErrorLoadingContent>\n      {!error ? (\n        <>\n          <StyledLoadingHolder>\n            <StyledLoader color=\"#ed7a2d\" width={40} />\n          </StyledLoadingHolder>\n          <StyledLoadingMessage>\n            {txVerification\n              ? 'Please wait, transaction is being verified ...'\n              : ' Confirm the metamask transaction and wait ...'}\n          </StyledLoadingMessage>\n        </>\n      ) : (\n        <StyledErrorText>\n          <StyledErrorIcon src={ExclamationIcon} />\n          Something went wrong, please try again\n        </StyledErrorText>\n      )}\n    </StyledErrorLoadingContent>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { ProfilePreview } from '../../AssetDetails/ProfilePreview';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { StyledInputRow, StyledLabel } from '../ProfileEditModal/styles';\nimport { StyledSelectInput, StyledTransferCardModalContent } from './styles';\nimport { Address } from '../../../utils/types';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { ICard, IOwnedAssets } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { NetworkName } from '../../../boot/types';\nimport { useProfile } from '../../../hooks/useProfile';\n\ninterface IProps {\n  profile: {\n    address: Address;\n    owner: Address;\n    isOwnerKeyManager: boolean;\n    ownedAssets: IOwnedAssets[];\n  };\n  ownedCards: ICard[];\n  onDismiss: () => void;\n  network: NetworkName;\n}\n\ntype formInput = {\n  toAddress: string;\n  cardAddress: string;\n  tokenId: number | null;\n};\n\nexport const TransferCardsModal: React.FC<IProps> = ({\n  profile,\n  onDismiss,\n  network,\n  ownedCards,\n}: IProps) => {\n  const [transferCardForm, setTransferCardForm] = useState<formInput>({\n    toAddress: '',\n    cardAddress: profile.ownedAssets[0].assetAddress,\n    tokenId: null,\n  });\n\n  const [selectedCard, setSelectedCard] = useState<ICard | null>(null);\n\n  const [\n    destinationProfile,\n    profileAddressError,\n    getProfile,\n    isProfileLoading,\n  ] = useProfile();\n\n  useEffect(() => {\n    setSelectedCard(ownedCards[0]);\n  }, [ownedCards]);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'cardName') {\n      const card = ownedCards.find(({ name }) => name === value);\n\n      setSelectedCard(card || null);\n\n      setTransferCardForm({\n        ...transferCardForm,\n        cardAddress: card?.address!,\n        tokenId: null,\n      });\n    } else {\n      if (name === \"receiver's address\") {\n        getProfile(value, network);\n      }\n\n      setTransferCardForm({\n        ...transferCardForm,\n        [name]: value,\n      });\n    }\n  };\n\n  const { transferCard, transferState, error } = useTransferLsp8Token(\n    transferCardForm.cardAddress,\n    transferCardForm.toAddress,\n    transferCardForm.tokenId,\n    profile,\n    network,\n  );\n\n  const fields = [\n    { name: 'cardName', label: 'Card Name', type: 'select' },\n    { name: 'cardAddress', label: 'Card Address', type: 'text' },\n    { name: 'tokenId', label: 'Token Id', type: 'select' },\n  ];\n\n  return (\n    <StyledTransferCardModalContent>\n      <ProfilePreview\n        profile={destinationProfile}\n        profileError={profileAddressError}\n        isProfileLoading={isProfileLoading}\n      />\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={changeHandler}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n      />\n      {fields.map((item, key) => (\n        <StyledInputRow key={key}>\n          <StyledLabel htmlFor={item.name}>{item.label}</StyledLabel>\n          {item.type === 'text' && item.name === 'cardAddress' && (\n            <p>{selectedCard?.address}</p>\n          )}\n          {item.type === 'select' && item.name === 'cardName' && (\n            <StyledSelectInput\n              name={item.name}\n              onChange={changeHandler}\n              value={selectedCard?.name || ''}\n            >\n              {ownedCards.map((card, key) => (\n                <option key={key} value={card.name} defaultValue={card.name}>\n                  {card.name}\n                </option>\n              ))}\n            </StyledSelectInput>\n          )}\n          {item.type === 'select' && item.name === 'tokenId' && (\n            <StyledSelectInput\n              name={item.name}\n              onChange={changeHandler}\n              value={transferCardForm.tokenId || 'Select token id'}\n            >\n              <option>Select token id</option>\n              {profile.ownedAssets\n                .find(\n                  (ownedAsset) =>\n                    ownedAsset.assetAddress === selectedCard?.address,\n                )\n                ?.tokenIds.map((tokenId, key) => (\n                  <option key={key} value={tokenId}>\n                    {tokenId}\n                  </option>\n                ))}\n            </StyledSelectInput>\n          )}\n        </StyledInputRow>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton onClick={transferCard}>\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n    </StyledTransferCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { NetworkName } from '../../../boot/types';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useRpcProvider } from '../../../hooks/useRpcProvider';\nimport { useWitdrawFunds } from '../../../hooks/useWithdrawFunds';\nimport { ERC20Api } from '../../../services/controllers/ERC20';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport { Address } from '../../../utils/types';\nimport {\n  StyledBalanceLabel,\n  StyledBalanceValue,\n  StyledBalanceWrapper,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledTokenLabel,\n  StyledWithdrawModalContent,\n} from './styles';\n\ninterface IProps {\n  profile: IProfile;\n  network: NetworkName;\n  onDismiss: () => void;\n}\n\nexport const WithdrawFundsModal = ({ profile, network, onDismiss }: IProps) => {\n  const [whiteListedTokensInfo, setWhiteListedTokensInfo] = useState<\n    IWhiteListedTokens[]\n  >([]);\n  const [balances, setBalances] = useState<\n    Array<{ balance: BigNumber; address: string }>\n  >([]);\n  const [{ data: account }] = useAccount();\n  const [selectedTokenInput, setSelectedTokenInput] = useState<Address>('');\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const provider = useRpcProvider(network);\n  const { balanceOf, withdrawFunds, withdrawState, resetState } =\n    useWitdrawFunds(network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSelectedTokenInput(event.currentTarget.value);\n  };\n\n  const fetchWhiteListedTokenInfo = useCallback(async () => {\n    const res = await Promise.all(\n      whiteListedtokensAddresses.map(\n        async (address) => await ERC20Api.fetchErc20TokenInfo(address, network),\n      ),\n    );\n    setWhiteListedTokensInfo(res);\n  }, [provider, whiteListedtokensAddresses]);\n\n  const [selectedTokenBalance, selectedTokenDecimals] = useMemo(() => {\n    const balance = balances\n      .find(\n        (item) =>\n          item.address.toLowerCase() === selectedTokenInput.toLowerCase(),\n      )\n      ?.balance.toString();\n    const decimals = whiteListedTokensInfo.find(\n      (item) =>\n        item.tokenAddress.toLowerCase() === selectedTokenInput.toLowerCase(),\n    )?.decimals;\n    return [balance, decimals];\n  }, [balances, selectedTokenInput, whiteListedTokensInfo]);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'WITHDRAWING FUNDS. . .',\n    },\n    successful: {\n      mainHeading: 'WITHDRAW SUCCESSFULL',\n    },\n    failed: {\n      mainHeading: 'WITHDRAW FAILED',\n      description: 'Please try agian.',\n    },\n  };\n\n  useEffect(() => {\n    fetchWhiteListedTokenInfo();\n    balanceOf(whiteListedtokensAddresses, profile.address).then((res) => {\n      setBalances(res);\n    });\n  }, []);\n\n  return (\n    <StyledWithdrawModalContent>\n      {whiteListedTokensInfo.map((item, i) => (\n        <StyledRadioLabel\n          key={i}\n          htmlFor=\"token\"\n          $checked={\n            selectedTokenInput.toLowerCase() === item.tokenAddress.toLowerCase()\n          }\n        >\n          <StyledRadioInput\n            name=\"payment\"\n            type=\"radio\"\n            id=\"token\"\n            value={item.tokenAddress}\n            onChange={changeHandler}\n          />\n          <StyledTokenLabel>{item.symbol}</StyledTokenLabel>\n          <StyledBalanceWrapper>\n            <StyledBalanceLabel>Balance: </StyledBalanceLabel>\n            <StyledBalanceValue>\n              {displayPrice(\n                selectedTokenBalance ? selectedTokenBalance : 0,\n                selectedTokenDecimals ? selectedTokenDecimals : 0,\n              )}\n            </StyledBalanceValue>\n          </StyledBalanceWrapper>\n        </StyledRadioLabel>\n      ))}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!selectedTokenBalance || Number(selectedTokenBalance) <= 0}\n          onClick={async () =>\n            account &&\n            (await withdrawFunds(\n              profile,\n              selectedTokenInput,\n              account.address,\n              selectedTokenBalance ? selectedTokenBalance : 0,\n            ))\n          }\n        >\n          withdraw to metamask\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={withdrawState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledWithdrawModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabs = styled.div``;\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import { ReactNode, useState } from 'react';\nimport { StyledTabs, StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n    visible: boolean;\n  }[];\n}\n\nexport const Tabs = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <StyledTabs>\n      <StyledTabsHeader>\n        {tabs.map((tab, i) => {\n          if (tab.visible) {\n            return (\n              <StyledTabsLabel\n                key={i}\n                $active={activeTab === i}\n                onClick={() => setActiveTab(i)}\n              >\n                {tab.name}\n              </StyledTabsLabel>\n            );\n          }\n        })}\n      </StyledTabsHeader>\n      {tabs[activeTab].content}\n    </StyledTabs>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { useAccount } from 'wagmi';\nimport { NetworkName, StringBoolean } from '../../../boot/types';\nimport { Tabs } from '../../../components/Tabs';\nimport { IProfile } from '../../../services/models';\nimport { getAddressPermissionsOnUniversalProfile } from '../../../utility/permissions';\nimport { AddPermissionsModalContent } from '../AddPermissionsModalContent';\nimport { ProfileEditModal } from '../ProfileEditModal';\n\ninterface IProps {\n  profile: IProfile;\n  network: NetworkName;\n  onDismiss: () => void;\n}\n\nexport const ProfileSettingModal = ({\n  profile,\n  network,\n  onDismiss,\n}: IProps) => {\n  const [{ data: account }] = useAccount();\n\n  const [tabName, setTabName] = useState('');\n\n  const [canTransfer, canSetData, canAddPermissions] = useMemo(() => {\n    if (!account) return [false, false, false];\n\n    const permissionsSet = getAddressPermissionsOnUniversalProfile(\n      profile.permissionSet,\n      account.address,\n    );\n\n    return [\n      permissionsSet?.permissions.call === StringBoolean.TRUE,\n      permissionsSet?.permissions.setdata === StringBoolean.TRUE,\n      permissionsSet?.permissions.addpermissions === StringBoolean.TRUE,\n    ];\n  }, [account, profile]);\n\n  const tabs = [\n    {\n      name: tabName || 'Update Info',\n      content: (\n        <ProfileEditModal\n          profile={profile}\n          onDismiss={onDismiss}\n          setTabName={(name: string) => setTabName(name)}\n        />\n      ),\n      visible: canTransfer && canSetData,\n    },\n    {\n      name: 'Permissions',\n      content: (\n        <AddPermissionsModalContent profile={profile} network={network} />\n      ),\n      visible: canAddPermissions,\n    },\n  ];\n\n  return <Tabs tabs={tabs} />;\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState, StringBoolean } from '../../boot/types';\nimport { theme } from '../../boot/styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { HideOnScreen, Pagination } from '../../components';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledAssetsWrapper,\n  StyledDropDownIcon,\n  StyledLinkIconWrapper,\n  StyledLinkIcon,\n  StyledOpenTransferModalButton,\n  StyledProfileAddress,\n  StyledProfileCoverImg,\n  StyledProfileDetails,\n  StyledProfileDetailsContent,\n  StyledProfileInfo1,\n  StyledProfileInfo1Content,\n  StyledProfileInfo2,\n  StyledProfileInfo2Content,\n  StyledProfileInfoWrapper,\n  StyledProfileLinks,\n  StyledProfileMedia,\n  StyledProfileMediaWrapper,\n  StyledProfileName,\n  StyledProfileNameBioWrapper,\n  StyledProfileNotFound,\n  StyledShareIcon,\n  StyledShareProfileHolder,\n  StyledShareProfileButton,\n  StyledShareProfileWrapper,\n  StyledOpenEditProfileModal,\n  StyledWitdrawFundsButton,\n  StyledProfileSettingButton,\n  StyledSettingIcon,\n  StyledClaimAuctionTokenButton,\n} from './styles';\nimport { ProfileImage } from './ProfileImage';\nimport {\n  DropDownIcon,\n  Facebook,\n  Globe,\n  Instagram,\n  SettingIcon,\n  ShareIcon,\n  Twitter,\n} from '../../assets';\nimport {\n  currentProfile,\n  fetchIssuedAssetsAddresses,\n  fetchOwnedAssetsAddresses,\n  fetchProfileByAddress,\n  resetUserDataSliceInitialState,\n  selectUserById,\n} from '../../features/profiles';\nimport { StyledLoader, StyledLoadingHolder } from '../AssetDetails/styles';\nimport { useAccount, useSigner } from 'wagmi';\nimport { ProfileEditModal } from './ProfileEditModal';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport {\n  fetchIssuedCards,\n  fetchOwnedCards,\n  resetCardsSliceInitialState,\n  selectAllCardItems,\n} from '../../features/cards';\nimport { ICard, IProfile } from '../../services/models';\nimport { MetaCard } from '../../features/cards/MetaCard';\nimport {\n  StyledAssetsCheckText,\n  StyledProfileHeaderText,\n  StyledProfilesHeader,\n} from '../Profiles/styles';\nimport { TransferCardsModal } from './TransferCardModal/TransferCardsModal';\nimport {\n  useModal,\n  useUrlParams,\n  usePagination,\n  useLocalStorage,\n  useQueryParams,\n  useMediaQuery,\n} from '../../hooks';\nimport { WithdrawFundsModal } from './WithdrawFundsModal';\nimport { ProfileSettingModal } from './ProfileSettingModal';\nimport { isAddress } from 'ethers/lib/utils';\nimport { ShareReferModal } from '../../components/ShareReferModal';\nimport { STATUS } from '../../utility';\nimport { ClaimAuctionTokens } from './ClaimAuctionTokens';\n\nconst ProfileDetails: React.FC = () => {\n  const { address, network } = useUrlParams();\n  const dispatch = useAppDispatch();\n  const { pathname } = useLocation();\n  let query = useQueryParams();\n  const { setItem, setReferrer } = useLocalStorage();\n  const [{ data: account }] = useAccount();\n  const [{ data: signer }] = useSigner();\n\n  const { range: issuedAssetsRange, setRange: setIssuedAssetsRange } =\n    usePagination();\n  const { range: ownedAssetsRange, setRange: setOwnedAssetsRange } =\n    usePagination();\n\n  const activeProfileAddress = useSelector(\n    (state: RootState) => state.userData.me,\n  );\n\n  const profile = useSelector((state: RootState) =>\n    selectUserById(state.userData[network], address),\n  );\n\n  const cardsStatus = useSelector(\n    (state: RootState) => state.cards[network].status,\n  );\n\n  const userDataStatus = useSelector(\n    (state: RootState) => state.userData[network].status,\n  );\n\n  const issuedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[network]),\n  ).filter((item) =>\n    profile?.issuedAssets\n      .slice(issuedAssetsRange[0], issuedAssetsRange[1] + 1)\n      .some((i) => i === item.address),\n  );\n\n  const ownedCards = useSelector((state: RootState) =>\n    selectAllCardItems(state.cards[network]),\n  ).filter((item) =>\n    profile?.ownedAssets\n      .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1)\n      .some((i) => i.assetAddress === item.address),\n  );\n\n  const isTablet = useMediaQuery(theme.screen.md);\n\n  const [canTransfer, canSetData, canTransferValue, canAddPermissions] =\n    useMemo(() => {\n      if (!profile || !account) return [false, false, false];\n\n      const permissionsSet = getAddressPermissionsOnUniversalProfile(\n        profile.permissionSet,\n        account.address,\n      );\n\n      console.log(permissionsSet);\n      return [\n        permissionsSet?.permissions.call === StringBoolean.TRUE,\n        permissionsSet?.permissions.setdata === StringBoolean.TRUE,\n        permissionsSet?.permissions.transfervalue === StringBoolean.TRUE,\n        permissionsSet?.permissions.addpermissions === StringBoolean.TRUE,\n      ];\n    }, [account, profile]);\n\n  useMemo(() => {\n    if (!account || !profile || !canTransfer || !canSetData) return;\n    setItem(network, address, profile.permissionSet);\n  }, [account, canSetData, canTransfer, address, network, profile, setItem]);\n\n  useEffect(() => {\n    const referrerAddress = query.get('referrer');\n    referrerAddress &&\n      isAddress(referrerAddress) &&\n      setReferrer(network, referrerAddress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [network]);\n\n  useEffect(() => {\n    dispatch(resetUserDataSliceInitialState(network));\n    dispatch(resetCardsSliceInitialState(network));\n  }, [dispatch, network, address]);\n\n  useEffect(() => {\n    if (address === activeProfileAddress) return;\n    dispatch(currentProfile(address));\n  }, [activeProfileAddress, address, dispatch]);\n\n  useEffect(() => {\n    if (!profile) dispatch(fetchProfileByAddress({ address, network }));\n  }, [dispatch, address, network, profile]);\n\n  useEffect(() => {\n    if (\n      !profile ||\n      profile.issuedAssets.length > 0 ||\n      userDataStatus.fetchIssuedAssetAddresses !== STATUS.IDLE\n    )\n      return;\n    dispatch(\n      fetchIssuedAssetsAddresses({\n        profileAddress: profile.address,\n        network: network,\n      }),\n    );\n  }, [dispatch, userDataStatus.fetchIssuedAssetAddresses, network, profile]);\n\n  useEffect(() => {\n    if (\n      !profile ||\n      profile.ownedAssets.length > 0 ||\n      userDataStatus.fetchOwnedAssetsAddresses !== STATUS.IDLE\n    )\n      return;\n    dispatch(\n      fetchOwnedAssetsAddresses({\n        profileAddress: profile.address,\n        network: network,\n      }),\n    );\n  }, [dispatch, userDataStatus.fetchOwnedAssetsAddresses, network, profile]);\n\n  useEffect(() => {\n    if (!profile || profile?.issuedAssets.length === 0) return;\n    dispatch(\n      fetchIssuedCards({\n        addresses: profile.issuedAssets.slice(\n          issuedAssetsRange[0],\n          issuedAssetsRange[1] + 1,\n        ),\n        network: network,\n      }),\n    );\n  }, [dispatch, profile, network, issuedAssetsRange]);\n\n  useEffect(() => {\n    if (!profile || profile?.ownedAssets.length === 0) return;\n    dispatch(\n      fetchOwnedCards({\n        addresses: profile.ownedAssets\n          .map((asset) => asset.assetAddress)\n          .slice(ownedAssetsRange[0], ownedAssetsRange[1] + 1),\n        network: network,\n      }),\n    );\n  }, [dispatch, profile, network, ownedAssetsRange]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address]);\n\n  const renderLinks = useMemo(\n    () =>\n      profile?.links?.map((link, i) => {\n        const linkTitle = link.title.toLowerCase();\n        return link.url !== '' ? (\n          <StyledProfileLinks key={i}>\n            <StyledLinkIconWrapper\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <StyledLinkIcon\n                src={\n                  linkTitle === 'twitter'\n                    ? Twitter\n                    : linkTitle === 'instagram'\n                    ? Instagram\n                    : linkTitle === 'facebook'\n                    ? Facebook\n                    : Globe\n                }\n              />\n            </StyledLinkIconWrapper>\n          </StyledProfileLinks>\n        ) : (\n          <></>\n        );\n      }),\n    [profile?.links],\n  );\n\n  const {\n    handlePresent: onPresentSettingModal,\n    onDismiss: onDismissSettingModal,\n  } = useModal(\n    profile && (\n      <ProfileSettingModal\n        profile={profile}\n        network={network}\n        onDismiss={() => onDismissSettingModal()}\n      />\n    ),\n    'Profile Settings Modal',\n    'Profile Settings',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardsModal,\n    onDismiss: onDismissTransferCardsModal,\n  } = useModal(\n    profile && (\n      <TransferCardsModal\n        profile={profile}\n        ownedCards={ownedCards}\n        onDismiss={() => onDismissTransferCardsModal()}\n        network={network}\n      />\n    ),\n    'Cards Transfer Modal',\n    'Transfer Card',\n  );\n\n  const {\n    handlePresent: onPresentProfileEditModal,\n    onDismiss: onDismissProfileEditModal,\n  } = useModal(\n    <ProfileEditModal\n      profile={profile ? profile : ({} as IProfile)}\n      onDismiss={() => onDismissProfileEditModal()}\n    />,\n    'Profile Edit Modal',\n    'Profile Edit',\n  );\n\n  const {\n    handlePresent: onPresentWithdrawFundsModal,\n    onDismiss: onDismissWithdrawFundsModal,\n  } = useModal(\n    profile && (\n      <WithdrawFundsModal\n        profile={profile}\n        network={network}\n        onDismiss={() => onDismissWithdrawFundsModal()}\n      />\n    ),\n    'Withdraw Funds Modal',\n    'Withdraw Funds',\n  );\n\n  const {\n    handlePresent: onPresentClaimAuctionTokensModal,\n    onDismiss: onDismissClaimAuctionTokensModal,\n  } = useModal(\n    profile && (\n      <ClaimAuctionTokens\n        profile={profile}\n        network={network}\n        onDismiss={() => onDismissClaimAuctionTokensModal()}\n      />\n    ),\n    'Claim Auction Tokens Modal',\n    'Claim Tokens',\n  );\n\n  const { handlePresent: onPresentShareModal, onDismiss: onDismissShareModal } =\n    useModal(\n      <ShareReferModal\n        network={network}\n        pathName={pathname}\n        onDismiss={() => onDismissShareModal()}\n      />,\n      'Profile Share Modal',\n      'Share Profile',\n    );\n\n  return (\n    <StyledProfileDetails>\n      {userDataStatus.fetchProfile === STATUS.LOADING ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <StyledProfileDetailsContent>\n          {userDataStatus.fetchProfile === STATUS.FAILED && (\n            <StyledProfileNotFound>Profile not found</StyledProfileNotFound>\n          )}\n          {(userDataStatus.fetchProfile === STATUS.SUCCESSFUL ||\n            (userDataStatus.fetchProfile === STATUS.IDLE && profile)) && (\n            <>\n              <StyledProfileCoverImg src={profile?.backgroundImage} alt=\"\" />\n              <StyledProfileInfoWrapper>\n                <StyledProfileInfo1>\n                  <StyledProfileInfo1Content>\n                    {isTablet && (\n                      <StyledProfileAddress>\n                        {profile?.address}\n                      </StyledProfileAddress>\n                    )}\n                    <StyledProfileMediaWrapper>\n                      <StyledProfileMedia>\n                        <ProfileImage\n                          profileImgSrc={profile?.profileImage}\n                          blockieImgSrc={makeBlockie(\n                            profile ? profile.address : address,\n                          )}\n                          profileAddress={profile?.address}\n                        />\n                      </StyledProfileMedia>\n                    </StyledProfileMediaWrapper>\n                    <StyledProfileNameBioWrapper>\n                      <StyledProfileName>@{profile?.name}</StyledProfileName>\n                      <StyledShareProfileHolder>\n                        {renderLinks}\n                        <StyledShareProfileWrapper>\n                          <StyledShareProfileButton\n                            onClick={onPresentShareModal}\n                          >\n                            <StyledShareIcon src={ShareIcon} />\n                            <HideOnScreen size=\"lg\">\n                              Share profile{' '}\n                              {!navigator['share'] && (\n                                <StyledDropDownIcon src={DropDownIcon} />\n                              )}\n                            </HideOnScreen>\n                          </StyledShareProfileButton>\n                        </StyledShareProfileWrapper>\n                      </StyledShareProfileHolder>\n                      {(canAddPermissions || canSetData) && (\n                        <StyledProfileSettingButton\n                          onClick={onPresentSettingModal}\n                        >\n                          <StyledSettingIcon src={SettingIcon} />\n                        </StyledProfileSettingButton>\n                      )}\n                    </StyledProfileNameBioWrapper>\n                  </StyledProfileInfo1Content>\n                </StyledProfileInfo1>\n                <StyledProfileInfo2>\n                  <StyledProfileInfo2Content>\n                    {!isTablet && (\n                      <StyledProfileAddress>{address}</StyledProfileAddress>\n                    )}\n                  </StyledProfileInfo2Content>\n                </StyledProfileInfo2>\n              </StyledProfileInfoWrapper>\n              {profile &&\n                account &&\n                profile.ownedAssets.length > 0 &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenTransferModalButton\n                    onClick={onPresentTransferCardsModal}\n                  >\n                    Transfer Cards\n                  </StyledOpenTransferModalButton>\n                )}\n              {signer &&\n                profile &&\n                account &&\n                (canSetData ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledOpenEditProfileModal\n                    onClick={onPresentProfileEditModal}\n                  >\n                    Edit Profile\n                  </StyledOpenEditProfileModal>\n                )}\n              {canTransferValue && (\n                <StyledWitdrawFundsButton onClick={onPresentWithdrawFundsModal}>\n                  Withdraw Funds\n                </StyledWitdrawFundsButton>\n              )}\n              {profile &&\n                account &&\n                (canTransfer ||\n                  profile.owner.toLowerCase() ===\n                    account.address.toLowerCase()) && (\n                  <StyledClaimAuctionTokenButton\n                    onClick={onPresentClaimAuctionTokensModal}\n                  >\n                    Claim Auction Token\n                  </StyledClaimAuctionTokenButton>\n                )}\n              <StyledAssetsWrapper>\n                {userDataStatus.fetchIssuedAssetAddresses ===\n                  STATUS.LOADING && (\n                  <StyledProfilesHeader>\n                    <StyledAssetsCheckText>\n                      checking for issued assets . . .\n                    </StyledAssetsCheckText>\n                  </StyledProfilesHeader>\n                )}\n                {profile &&\n                  profile.issuedAssets.length > 0 &&\n                  (userDataStatus.fetchIssuedAssetAddresses ===\n                    STATUS.SUCCESSFUL ||\n                    userDataStatus.fetchIssuedAssetAddresses ===\n                      STATUS.IDLE) && (\n                    <>\n                      <StyledProfilesHeader>\n                        <StyledProfileHeaderText>\n                          Issued Assets\n                        </StyledProfileHeaderText>\n                      </StyledProfilesHeader>\n                      <Pagination\n                        status={cardsStatus.fetchIssuedCards}\n                        components={issuedCards.map((digitalCard: ICard) => {\n                          return (\n                            <MetaCard\n                              key={digitalCard.address}\n                              digitalCard={digitalCard}\n                              type=\"demo\"\n                              canTransfer={canTransfer}\n                              profile={profile}\n                            />\n                          );\n                        })}\n                        nbrOfAllComponents={profile.issuedAssets.length}\n                        setComponentsRange={setIssuedAssetsRange}\n                      />\n                    </>\n                  )}\n                {userDataStatus.fetchOwnedAssetsAddresses ===\n                  STATUS.LOADING && (\n                  <StyledProfilesHeader>\n                    <StyledAssetsCheckText>\n                      checking for owned assets . . .\n                    </StyledAssetsCheckText>\n                  </StyledProfilesHeader>\n                )}\n                {profile &&\n                  profile.ownedAssets.length > 0 &&\n                  (userDataStatus.fetchOwnedAssetsAddresses ===\n                    STATUS.SUCCESSFUL ||\n                    userDataStatus.fetchOwnedAssetsAddresses ===\n                      STATUS.IDLE) && (\n                    <>\n                      <StyledProfilesHeader>\n                        <StyledProfileHeaderText>\n                          Owned Assets\n                        </StyledProfileHeaderText>\n                      </StyledProfilesHeader>\n                      <Pagination\n                        status={cardsStatus.fetchOwnedCards}\n                        components={ownedCards.map((digitalCard: ICard) => {\n                          return (\n                            <MetaCard\n                              key={digitalCard.address}\n                              digitalCard={digitalCard}\n                              type=\"owned\"\n                              canTransfer={canTransfer}\n                              profile={profile}\n                            />\n                          );\n                        })}\n                        nbrOfAllComponents={profile.ownedAssets.length}\n                        setComponentsRange={setOwnedAssetsRange}\n                      />\n                    </>\n                  )}\n              </StyledAssetsWrapper>\n            </>\n          )}\n        </StyledProfileDetailsContent>\n      )}\n    </StyledProfileDetails>\n  );\n};\n\nexport default ProfileDetails;\n"],"sourceRoot":""}