{"version":3,"sources":["services/controllers/KeyManager.ts","utility/content/addresses.ts","components/TransactionStateWindow/styles.ts","components/TransactionStateWindow/TransactionStateWindow.tsx","hooks/useModal/useModal.ts","hooks/useTransferLsp8Token/useTransferLsp8Token.ts","components/InputField/InputField.tsx","assets/polygon.svg","features/profiles/ProfileCard/styles.ts","components/InputField/styles.ts","utility/permissions.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/usePagination/usePagination.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","hooks/useSellLsp8Token/useSellLsp8Token.ts","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useErc20/useErc20.ts","hooks/useBuyLsp8Token/useBuyLsp8Token.ts","pages/AssetDetails/components/BuyCardButton/styles.ts","pages/AssetDetails/components/BuyCardButton/BuyCardButton.tsx","hooks/useUrlParams/useUrlParams.ts","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/TransferCardTokenIdModal/TransferCardTokenIdModal.tsx","pages/AssetDetails/SelectMintModalContent/styles.ts","pages/AssetDetails/SelectMintModalContent/SelectMintModalContent.tsx","pages/AssetDetails/components/CardInfoAccordion/styles.ts","pages/AssetDetails/components/CardInfoAccordion/CardInfoAccordion.tsx","pages/AssetDetails/AssetDetails.tsx","hooks/useRemoveMarketForLsp8Token/useRemoveMarketForLsp8Token.ts"],"names":["LSP6KeyManagerSchemaList","addPermissions","universalProfileAddress","address","permissions","signer","a","encodedData","keys","values","universalProfileContract","UniversalProfileProxy__factory","connect","owner","KeyManagerContract","LSP6KeyManagerProxy__factory","getData","KeyChain","LSP6AddressPermissions","currentIndex","nextIndex","ethers","BigNumber","from","toNumber","totalIndexvalue","encodeKeyValue","String","push","indexArrayKey","encodeArrayKey","encodedPermissionsKey","ERC725","encodeKeyName","replace","encodedPermissionsValue","encodePermissions","encodedSetDataFunction","interface","encodeFunctionData","execute","transferCardViaKeyManager","assetAddress","keyManagerAddress","tokenId","toAddress","assetContract","CardTokenProxy__factory","keyManagerContract","encodedTransferFunction","encodedExecuteFunction","transaction","wait","then","result","status","Error","KeyManagerApi","setCardMarketViaKeyManager","acceptedToken","minimumAmount","tokenIdAsBytes","tokenIdAsBytes32","encodedSetMarketFor","toString","approveTokenViaKeyManager","spenderAddress","tokenAddress","amount","erc20Contract","ERC20__factory","encodedApprove","buyFromCardMarketViaKeyManager","tokenIdBytes","encodedBuyFromMarket","transferBalanceViaKeyManager","amountToTransfer","tokenContract","encodedTransfer","removeMarketViaKeymanager","CardMarket__factory","encodedRemoveMarketForFunction","getDefaultAddresses","network","type","fetch","res","json","trimedAddress","slice","length","getWhiteListedTokenAddresses","polygon","mumbai","ethereum","l14","l16","StyledProcessingWindow","styled","div","height","StyledStateContent","StyledStateIcon","img","StyledStateHeading","h2","StyledStateDescription","p","StyledTryButton","button","TransactionStateWindow","state","transactionMessages","callback","transactionStatesIcons","loading","icon","PendingIcon","successful","SuccessIcon","failed","ErrorIcon","STATUS","IDLE","src","alt","mainHeading","description","FAILED","onClick","useModal","content","key","persist","useContext","ModalContext","isOpen","onDismiss","onPresent","handlePresent","useCallback","useTransferLsp8Token","cardAddress","profile","useState","transferState","setTransferState","error","setError","useSigner","data","useNetwork","networkData","transferCard","chain","name","toast","position","LOADING","isOwnerKeyManager","SUCCESSFUL","catch","LSP3ProfileApi","transferCardViaUniversalProfile","resetState","InputField","label","changeHandler","align","placeholder","value","disabled","step","onChange","StyledProfileCard","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","StyledBalanceWrapper","StyledBalance","font","weight","regular","StyledPolygon","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","find","x","toLowerCase","ProfileCard","userProfile","balance","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","asset","add","to","Web3","utils","toChecksumAddress","data-tip","tokenIds","data-for","makeBlockie","profileImage","usePagination","range","setRange","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","mint","price","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","select","SellCardModal","ownerProfile","whiteListedTokens","marketTokenAddress","sellForm","setSellForm","sellState","setSellState","setForSale","decimals","convertPrice","LSP4DigitalAssetApi","setMarketViaUniversalProfile","useSellLsp8Token","event","currentTarget","selectedTokenDecimals","selectedToken","item","marketTokenDecimals","i","whiteListedtokensAddresses","displayPrice","map","selected","symbol","variant","StyledTabsHeader","StyledTabsLabel","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","useEffect","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","md","StyledAccordionHeader","$expanded","StyledIssuerOwnerWrapper","StyledCreatorsContainer","StyledIssuerContainer","StyledOwnerContainer","StyledHeader","StyledHeaderTitle","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","StyledBuyCardModalContent","StyledInfoText","StyledPaymentText","StyledRadioGroup","StyledRadioInput","StyledRadioLabel","$checked","StyledSelectInputContainer","StyledUpAddressSelectInput","StyledUpAddressSelectLabel","StyledBuyStepsContainer","StyledBuyStep","StyledErrorMessage","BuyCardModal","useAccount","account","approveError","setApproveError","isApproved","setIsApproved","provider","useRpcProvider","approve","buyer","checkBalanceOf","checkAllowance","allowance","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","err","approveTokenViaUniversalProfile","ownerAddress","balanceOf","resetApproveState","undefined","useErc20","buyState","setBuyState","buyFromMarket","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","useBuyLsp8Token","savedProfiles","getItems","useLocalStorage","savedProfilesAddresses","Object","upAddress","setUpAddress","paymentOption","setPaymentOption","marketToken","paymentChangeHandler","target","htmlFor","isAddress","StyledCardBuyButton","BuyCardButton","useUrlParams","selectedMintMarket","market","markets","Number","token","lsp8MetaData","image","onDismissBuyCardModal","onPresentBuyCardModal","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","CardMarket","cardMarkets","findDecimals","findSymbol","TransferCardTokenIdModal","setToAddress","e","StyledSelectMintModalContent","StyledSelectMintListHeader","StyledSelectMintListHeaderContent","StyledSelectMintList","StyledSelectMintListContent","StyledListMint","StyledListPrice","SelectMintModalContent","ownedTokenIds","onSelect","onSelectCallback","renderMintList","StyledCardInfo","StyledCardInfoAccordion","StyledCardInfoContainer","StyledCardInfoLabel","StyledCardInfoValue","StyledCardStandardLabel","CardInfoAccordion","isDesktop","useMediaQuery","cardInfo","supportedInterface","totalSupply","valueType","toUpperCase","AssetDetails","sign","transfervalue","deploy","delegatecall","staticcall","call","setdata","addpermissions","changepermissions","changeowner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","getChainExplorer","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","cards","ownerStatus","creators","cardError","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","mintIdInputRef","useRef","setCurrentIndex","currentTokenId","index","marketsForOwnedTokens","currentMintMarket","removingMarket","setRemovingMarket","removeMarket","finally","useRemoveMarketForLsp8Token","parseInt","onDismissSellCardModal","onPresentSellCardModal","indexOf","onDismissSelectMintModal","onPresentSelectMintModal","onDismissTransferCardModal","onPresentTransferCardModal","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","renderContractDetailHeader","TransferIcon","title","ReloadIcon","ShareIcon","OptionIcon","getHeroImgSrc","LSP4Metadata","images","startsWith","Utils","convertImageURL","console","log","url","getOtherImgs","color","previousIndex","current","BackwardsIcon","min","max","defaultValue","ref","onKeyPress","blur","onBlur","val","ForwardsIcon","assets","fileType","controls","animation_url"],"mappings":"8NAmBMA,EACE,uBADFA,EAEC,qEAFDA,EAIU,SAJVA,EAKO,UAOPC,EAAc,uCAAG,WACrBC,EACAC,EACAC,EACAC,GAJqB,uCAAAC,EAAA,6DAMfC,EAAc,CAClBC,KAAM,GACNC,OAAQ,IAEJC,EAA2BC,IAA+BC,QAC9DV,EACAG,GAZmB,SAcDK,EAAyBG,QAdxB,cAcfA,EAde,OAefC,EAAqBC,IAA6BH,QACtDC,EACAR,GAjBmB,SAoBQK,EAAyBM,QAAQ,CAC5DC,IAASC,yBArBU,0CAoBdC,EApBc,KAuBfC,EACa,OAAjBD,EAAwB,EAAIE,IAAOC,UAAUC,KAAKJ,GAAcK,WAE5DC,EAAkBC,yBACtB1B,EACAA,EACA2B,OAAOP,EAAY,GACnBpB,GAEFO,EAAYC,KAAKoB,KAAK5B,GACtBO,EAAYE,OAAOmB,KAAKH,GAElBI,EAAgBC,yBAAe9B,EAA8BoB,GACnEb,EAAYC,KAAKoB,KAAKC,GACtBtB,EAAYE,OAAOmB,KAAKzB,GAElB4B,EAAwBC,IAAOC,cAAP,yCACM9B,EAAQ+B,QAAQ,KAAM,MAEpDC,EAA0BH,IAAOI,kBAAkBhC,GACzDG,EAAYC,KAAKoB,KAAKG,GACtBxB,EAAYE,OAAOmB,KAAKO,GAElBE,EACJ3B,EAAyB4B,UAAUC,mBAAmB,UAAW,CAC/DhC,EAAYC,KACZD,EAAYE,SAjDK,UAoDfK,EAAmB0B,QAAQH,GApDZ,4CAAH,4DAuDdI,EAAyB,uCAAG,WAChCC,EACAxC,EACAyC,EACAC,EACAC,EACAxC,GANgC,yBAAAC,EAAA,6DAQ1BwC,EAAgBC,IAAwBnC,QAAQ8B,EAAcrC,GAC9DK,EAA2BC,IAA+BC,QAC9DV,EACAG,GAEI2C,EAAqBjC,IAA6BH,QACtD+B,EACAtC,GAGI4C,EAA0BH,EAAcR,UAAUC,mBACtD,eACA,CAACrC,EAAyB2C,EAAWD,IAGjCM,EACJxC,EAAyB4B,UAAUC,mBAAmB,UAAW,CAC/D,MACAG,EACA,EACAO,IA5B4B,SA+BND,EAAmBR,QAAQU,GA/BrB,cA+B1BC,EA/B0B,iBAgC1BA,EAAYC,KAAK,GAAGC,MAAK,SAACC,GAC9B,GAAsB,IAAlBA,EAAOC,OACT,MAAM,IAAIC,MAAM,2BAlCY,4CAAH,gEAyOlBC,EAAgB,CAC3BxD,iBACAyD,2BApM8B,uCAAG,WACjChB,EACAxC,EACAyC,EACAC,EACAe,EACAC,EACAvD,GAPiC,2BAAAC,EAAA,6DAS3BwC,EAAgBC,IAAwBnC,QAAQ8B,EAAcrC,GAC9DK,EAA2BC,IAA+BC,QAC9DV,EACAG,GAEI2C,EAAqBjC,IAA6BH,QACtD+B,EACAtC,GAEIwD,EAAiBC,YAAiBlB,GAClCmB,EAAsBjB,EAAcR,UAAUC,mBAClD,eACA,CAACsB,EAAgBF,EAAeC,EAAcI,aAE1Cd,EACJxC,EAAyB4B,UAAUC,mBAAmB,UAAW,CAC/D,MACAG,EACA,EACAqB,IA5B6B,SA+BPf,EAAmBR,QAAQU,GA/BpB,cA+B3BC,EA/B2B,iBAgC3BA,EAAYC,KAAK,GAAGC,MAAK,SAACC,GAC9B,GAAsB,IAAlBA,EAAOC,OACT,MAAM,IAAIC,MAAM,2BAlCa,4CAAH,kEAqM9Bf,4BACAwB,0BA/J6B,uCAAG,WAChCtB,EACAzC,EACAgE,EACAC,EACAC,EACA/D,GANgC,yBAAAC,EAAA,6DAQ1BI,EAA2BC,IAA+BC,QAC9DV,EACAG,GAEI2C,EAAqBjC,IAA6BH,QACtD+B,EACAtC,GAEIgE,EAAgBC,IAAe1D,QAAQuD,EAAc9D,GACrDkE,EAAiBF,EAAc/B,UAAUC,mBAAmB,UAAW,CAC3E2B,EACAE,EAAOJ,aAGHd,EACJxC,EAAyB4B,UAAUC,mBAAmB,UAAW,CAC/D,MACA4B,EACA,EACAI,IA3B4B,SA8BNvB,EAAmBR,QAAQU,GA9BrB,cA8B1BC,EA9B0B,iBA+B1BA,EAAYC,KAAK,GAAGC,MAAK,SAACC,GAC9B,GAAsB,IAAlBA,EAAOC,OACT,MAAM,IAAIC,MAAM,2BAjCY,4CAAH,gEAgK7BgB,+BA1HkC,uCAAG,WACrC9B,EACAC,EACAzC,EACA0C,EACAgB,EACAvD,GANqC,2BAAAC,EAAA,6DAQ/BwC,EAAgBC,IAAwBnC,QAAQ8B,EAAcrC,GAC9DoE,EAAeX,YAAiBlB,GAChCI,EAAqBjC,IAA6BH,QACtD+B,EACAtC,GAEIK,EAA2BC,IAA+BC,QAC9DV,EACAG,GAGIqE,EAAuB5B,EAAcR,UAAUC,mBACnD,gBACA,CACEkC,EACAb,EAAcI,WACd,+CAIEd,EACJxC,EAAyB4B,UAAUC,mBAAmB,UAAW,CAC/D,MACAG,EACA,EACAgC,IAjCiC,SAoCX1B,EAAmBR,QAAQU,GApChB,cAoC/BC,EApC+B,iBAqC/BA,EAAYC,KAAK,GAAGC,MAAK,SAACC,GAC9B,GAAsB,IAAlBA,EAAOC,OACT,MAAM,IAAIC,MAAM,2BAvCiB,4CAAH,gEA2HlCmB,6BA/EgC,uCAAG,WACnCR,EACAxB,EACAzC,EACA0E,EACA/B,EACAxC,GANmC,yBAAAC,EAAA,6DAQ7BuE,EAAgBP,IAAe1D,QAAQuD,EAAc9D,GACrD2C,EAAqBjC,IAA6BH,QACtD+B,EACAtC,GAEIK,EAA2BC,IAA+BC,QAC9DV,EACAG,GAEIyE,EAAkBD,EAAcvC,UAAUC,mBAC9C,WACA,CAACM,EAAW+B,IAGR1B,EACJxC,EAAyB4B,UAAUC,mBAAmB,UAAW,CAC/D,MACA4B,EACA,EACAW,IA3B+B,SA6BT9B,EAAmBR,QAAQU,GA7BlB,cA6B7BC,EA7B6B,iBA8B7BA,EAAYC,KAAK,GAAGC,MAAK,SAACC,GAC9B,GAAsB,IAAlBA,EAAOC,OACT,MAAM,IAAIC,MAAM,2BAhCe,4CAAH,gEAgFhCuB,0BA5C6B,uCAAG,WAChCrC,EACAxC,EACAyC,EACAC,EACAvC,GALgC,yBAAAC,EAAA,6DAO1BwC,EAAgBkC,IAAoBpE,QAAQ8B,EAAcrC,GAC1DK,EAA2BC,IAA+BC,QAC9DV,EACAG,GAGI2C,EAAqBjC,IAA6BH,QACtD+B,EACAtC,GAGI4E,EACJnC,EAAcR,UAAUC,mBAAmB,kBAAmB,CAACK,IAE3DM,EACJxC,EAAyB4B,UAAUC,mBAAmB,UAAW,CAC/D,MACAG,EACA,EACAuC,IA1B4B,SA6BNjC,EAAmBR,QAAQU,GA7BrB,cA6B1BC,EA7B0B,iBA8B1BA,EAAYC,KAAK,GAAGC,MAAK,SAACC,GAC9B,GAAsB,IAAlBA,EAAOC,OACT,MAAM,IAAIC,MAAM,2BAhCY,4CAAH,gE,mKCvRlB0B,EAAmB,uCAAG,WACjCC,EACAC,GAFiC,eAAA9E,EAAA,sEAIf+E,MAAM,SAAD,OAAUF,EAAV,YAAqBC,EAArB,UAJU,cAI3BE,EAJ2B,yBAK1BA,EAAIC,QALsB,2CAAH,wDAQnBC,EAAgB,SAACrF,GAAD,gBACxBA,EAAQsF,MAAM,EAAG,GADO,cACCtF,EAAQsF,MAClCtF,EAAQuF,OAAS,EACjBvF,EAAQuF,UAGCC,EAA+B,SAACR,GAY3C,MAXmE,CACjES,QAAS,CACP,6CACA,8CAEFC,OAAQ,CAAC,8CACTC,SAAU,CAAC,8CACXC,IAAK,CAAC,IACNC,IAAK,CAAC,KAGiBb,K,mHC3Bdc,EAAyBC,IAAOC,IAAV,yMAIvB,qBAAGC,OAAuB,OAAS,uBAOlCC,EAAqBH,IAAOC,IAAV,iHAOlBG,EAAkBJ,IAAOK,IAAV,8CAIfC,EAAqBN,IAAOO,GAAV,iDAIlBC,EAAyBR,IAAOS,EAAV,0BAEtBC,EAAkBV,IAAOW,OAAV,qH,QCEfC,EAAyB,SAAC,GAKxB,IAAD,EAJZC,EAIY,EAJZA,MACAX,EAGY,EAHZA,OACAY,EAEY,EAFZA,oBACAC,EACY,EADZA,SAEMC,EAAyB,CAC7BC,QAAS,CACPC,KAAMC,KAERC,WAAY,CACVF,KAAMG,KAERC,OAAQ,CACNJ,KAAMK,MAGV,OACE,mCACGV,IAAUW,IAAOC,MAChB,cAAC1B,EAAD,CAAwBG,OAAQA,EAAhC,SACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAiBsB,IAAKV,EAAuBH,GAAOK,KAAMS,IAAI,KAC9D,cAACrB,EAAD,UACGQ,EAAoBD,GAAOe,cAE9B,cAACpB,EAAD,oBACGM,EAAoBD,UADvB,aACG,EAA4BgB,cAE9Bd,GAAYF,IAAUW,IAAOM,QAC5B,cAACpB,EAAD,CAAiBqB,QAAShB,EAA1B,gC,uFC3DDiB,EAAW,WAElB,IAAD,wEADCC,EACD,KADUC,EACV,KADeC,EACf,KACH,EAAyCC,qBAAWC,KAA5CC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,UAErBC,EAAgBC,uBAAY,WAChCF,EAAUP,EAASC,EAAKC,KAEvB,CAACF,EAASC,EAAKM,IAElB,MAAO,CAAEC,gBAAeF,YAAWD,Y,0JCMxBK,EAAuB,SAClCC,EACAjG,EACAD,EACAmG,EACA5D,GAEA,MAA0C6D,mBAAiBtB,IAAOC,MAAlE,mBAAOsB,EAAP,KAAsBC,EAAtB,KACA,EAA0BF,qBAA1B,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA2BC,cAAZhJ,EAAf,oBAASiJ,KACT,EAAgCC,cAAjBC,EAAf,oBAASF,KA0CT,MAAO,CACLG,aAzCgB,uCAAG,4BAAAnJ,EAAA,0DACf,UAAAkJ,EAAYE,aAAZ,eAAmBC,QAASxE,EADb,uBAEjByE,YAAM,gBAAiB,CAAExE,KAAM,QAASyE,SAAU,cAFjC,6BAKnBX,EAAiBxB,IAAOoC,UACpBf,EAAQgB,kBANO,gCAOXtG,IAAchB,0BAClBqG,EACAC,EAAQ5I,QACR4I,EAAQlI,MACR+B,GAAoB,EACpBC,EACAxC,GAECgD,MAAK,WACJ6F,EAAiBxB,IAAOsC,eAEzBC,OAAM,SAACd,GACNC,EAASD,GACTD,EAAiBxB,IAAOM,WApBX,+CAuBXkC,IAAeC,gCACnBrB,EACAC,EAAQ5I,QACRyC,GAAoB,EACpBC,EACAxC,GAECgD,MAAK,WACJ6F,EAAiBxB,IAAOsC,eAEzBC,OAAM,SAACd,GACNC,EAASD,GACTD,EAAiBxB,IAAOM,WAnCX,4CAAH,qDA0ChBiB,gBACAE,QACAiB,WAAY,kBAAMlB,EAAiBxB,IAAOC,U,wFC1DjC0C,EAAa,SAAC,GASZ,IARbV,EAQY,EARZA,KACAW,EAOY,EAPZA,MACAlF,EAMY,EANZA,KACAmF,EAKY,EALZA,cACAC,EAIY,EAJZA,MACAC,EAGY,EAHZA,YACAC,EAEY,EAFZA,MACAC,EACY,EADZA,SAEA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UAAmBL,IACnB,cAAC,IAAD,CACEX,KAAMA,EACNvE,KAAMA,EACNwF,KAAK,MACLC,SAAUN,EACVC,MAAOA,EACPC,YAAaA,EACbC,MAAOA,EACPC,SAAUA,S,iCCtCH,QAA0B,qC,idCI5BG,EAAoB5E,YAAO6E,IAAP7E,CAAH,iUACf,qBAAG8E,MAAkBC,UAAUC,cACnC,qBAAGC,KAAmB,QAAU,WAUhC,qBAAGH,MAAkBI,OAAOC,MAM1BC,EAA6BpF,IAAOC,IAAV,uLAG3B,qBAAGgF,KAAmB,OAAS,UAM9BI,EAAuBrF,IAAOC,IAAV,2JAEtB,qBAAGgF,KAAmB,OAAS,UAI1B,qBAAGA,KAAmB,OAAS,UAC7B,qBAAGA,KAAmB,OAAS,SAGpCK,EAAgBtF,IAAOS,EAAV,qFACX,qBAAGwE,KAAmB,OAAS,SAC7B,qBAAGH,MAAkBS,KAAKC,OAAOC,WAIrCC,EAAgB1F,IAAOK,IAAV,yIAGV,qBAAG4E,KAAmB,OAAS,SAC7B,qBAAGA,KAAmB,OAAS,SACtC,qBAAGA,KAAmB,OAAS,UAI7BU,EAAsB3F,IAAOC,IAAV,yEAKnB2F,EAAoB5F,IAAO6F,GAAV,6IACf,qBAAGZ,KAAmB,OAAS,UAC7B,qBAAGH,MAAkBS,KAAKC,OAAOM,UAMrCC,EAAoB/F,IAAOS,EAAV,mEAKjBuF,EAAqBhG,IAAOC,IAAV,yPACXgG,KAOR,qBAAGhB,KAAmB,QAAU,WAI/BiB,EAAuBlG,IAAOK,IAAV,yPACtB,qBAAG4E,KAAmB,QAAU,UAC/B,qBAAGA,KAAmB,QAAU,UAQjC,qBAAGH,MAAkBI,OAAOC,MACzB,qBAAGF,KAAmB,QAAU,UACjC,qBAAGA,KAAmB,QAAU,UAIhCkB,EAAmBnG,IAAOK,IAAV,oLACjB,qBAAG4E,KAAmB,QAAU,UACjC,qBAAGA,KAAmB,QAAU,UAKhC,qBAAGH,MAAkBI,OAAOC,MAC1B,qBAAGF,KAAmB,QAAU,UAC/B,qBAAGA,KAAmB,QAAU,W,6QC7GjCmB,EAAuBpG,IAAOC,IAAV,qFAMpBoG,EAAmBrG,IAAOS,EAAV,0MAShB6F,EAAmBtG,IAAOuG,MAAV,gOAOb,gBAAGjC,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,SAInCkC,EAAYxG,IAAOyG,KAAV,yxBAkCP,gBAAGC,EAAH,EAAGA,SAAH,OACTA,EAAQ,WAAOA,EAAP,KAAqB,yBAKtBC,EAAyB3G,IAAOC,IAAV,oJAIvBuG,GAMCI,EAAkB5G,IAAOuG,MAAMM,MAAM,CAChD3H,KAAM,QADuBc,CAAH,6E,iCC3E5B,kCAAO,IAAM8G,EAA0C,SACrDC,EACAC,GAEA,OAAOD,EAAcE,MACnB,SAACC,GAAD,OACEA,EAAEjN,QAAQkN,gBAAkBH,EAAeG,eAAiBD,EAAEhN,iB,oJCwBvDkN,EAAgC,SAAC,GAK/B,IAJbC,EAIY,EAJZA,YACAC,EAGY,EAHZA,QACApI,EAEY,EAFZA,KACAqI,EACY,EADZA,UAEMC,EAASC,cACTC,EAAqBC,mBACzB,iBACW,SAATzI,GACAmI,EAAYO,YAAYX,MACtB,SAACY,GAAD,OACEA,EAAMrL,aAAa2K,gBAAkBK,EAAOM,IAAIX,mBAEtD,CAACK,EAAOM,IAAK5I,EAAMmI,EAAYO,cAGjC,OACE,eAAC,IAAD,CACEG,GACE,WAAIP,EAAOvI,QAAX,aACA+I,IAAKC,MAAMC,kBAAkBb,EAAYpN,SAE3CgL,KAAe,SAAT/F,EACNiJ,WACW,SAATjJ,GAAmBwI,GAAsBA,EAAmBU,SAE9DC,WAAUd,EATZ,UAWE,cAAC,IAAD,CAAsBtC,KAAe,SAAT/F,EAA5B,SACE,cAAC,IAAD,CAAe+F,KAAe,SAAT/F,EAArB,SACY,SAATA,EAAkBmI,EAAYO,YAAYpI,OAAS8H,MAGxD,cAAC,IAAD,CACE5F,IAAKhC,IACLiC,IAAI,GACJsD,KAAe,SAAT/F,IAER,eAAC,IAAD,CAAoB+F,KAAe,SAAT/F,EAA1B,UACE,cAAC,IAAD,CACEwC,IAAK4G,IAAYjB,EAAYpN,SAC7B0H,IAAI,GACJsD,KAAe,SAAT/F,IAER,cAAC,IAAD,CACEwC,IAAK2F,EAAYkB,aACjB5G,IAAI,GACJsD,KAAe,SAAT/F,OAGV,cAAC,IAAD,CAA4B+F,KAAe,SAAT/F,EAAlC,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAmB+F,KAAe,SAAT/F,EAAzB,UACG,IADH,IAEImI,EAAY5D,KAAM,OAEtB,cAAC,IAAD,qC,sFCxFG+E,EAAgB,WAC3B,MAA0B1F,mBAA2B,CAAC,EAAG,IAAzD,mBAEA,MAAO,CACL2F,MAHF,KAIEC,SAJF,Q,2SCDWC,GAA+B3I,KAAOC,IAAV,mFAM5B2I,GAAgB5I,KAAOK,IAAV,gDAIbwI,GAAa7I,KAAOC,IAAV,mGAMV6I,GAAkB9I,KAAOS,EAAV,uFAKfsI,GAAkB/I,KAAOS,EAAV,mD,SCNfuI,GAAwB,SAAC,GAKvB,IAJbC,EAIY,EAJZA,QACAhP,EAGY,EAHZA,QACAiP,EAEY,EAFZA,KACAC,EACY,EADZA,MAEA,OACE,gBAACR,GAAD,WACE,eAACC,GAAD,CAAelH,IAAKuH,EAAStH,IAAI,KACjC,gBAACkH,GAAD,WACE,eAACC,GAAD,uBACA,gBAACC,GAAD,WACG9O,EAAQsF,MAAM,EAAG,GADpB,MAEGtF,EAAQsF,MAAMtF,EAAQuF,OAAS,EAAGvF,EAAQuF,WAE7C,eAACsJ,GAAD,oBACA,eAACC,GAAD,UAAkBG,IAClB,eAACJ,GAAD,qBACA,eAACC,GAAD,iBAAkBI,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOrL,oBCjCpBsL,GAA6BpJ,KAAOC,IAAV,gIAc1BoJ,IANoBrJ,KAAO6F,GAAV,+FAEb,qBAAGf,MAAkBS,KAAKC,OAAOC,WAIlBzF,KAAOC,IAAV,2GAOhBqJ,GAA8BtJ,KAAOuJ,OAAV,kD,4GCS3BC,GAAgB,SAAC,GAUf,IAAD,EATZvP,EASY,EATZA,QACAsI,EAQY,EARZA,UACA2G,EAOY,EAPZA,KACAC,EAMY,EANZA,MACAF,EAKY,EALZA,QACAQ,EAIY,EAJZA,aACAC,EAGY,EAHZA,kBACAC,EAEY,EAFZA,mBACA1K,EACY,EADZA,QAEA,EAAgC6D,oBAG7B,CACD5E,OAAQ,EACRD,aACEyL,GAAqBA,EAAkBlK,OAAS,EAC5CkK,EAAkB,GAAGzL,aACrB,KARR,oBAAO2L,EAAP,KAAiBC,EAAjB,KAUA,EC3C8B,WAC9B,MAA2B1G,eAAZhJ,EAAf,qBAASiJ,KACT,EAAgCC,eAAjBC,EAAf,qBAASF,KACT,EAA0BN,sBAA1B,oBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAiBtB,KAAOC,MAA1D,oBAAOqI,EAAP,KAAkBC,EAAlB,KAqDA,MAAO,CACLD,YACAE,WArDc,yCAAG,WACjBxN,EACAiN,EACAP,EACAjL,EACAC,EACA+L,EACAhL,GAPiB,gBAAA7E,EAAA,0DASb,UAAAkJ,EAAYE,aAAZ,eAAmBC,QAASxE,EATf,uBAUfyE,aAAM,gBAAiB,CAAExE,KAAM,QAASyE,SAAU,cAVnC,6BAajBoG,EAAavI,KAAOoC,UAChB6F,EAAa5F,oBAAqB1J,EAdrB,gCAeToD,KAAcC,2BAClBhB,EACAiN,EAAaxP,QACbwP,EAAa9O,MACbuO,EACAjL,EACAiM,aAAahM,EAAQ+L,GACrB9P,GAECgD,MAAK,WACJ4M,EAAavI,KAAOsC,eAErBC,OAAM,SAACd,GACNC,EAASD,GACT8G,EAAavI,KAAOM,WA7BT,UAgCZ2H,EAAa5F,oBAAqB1J,EAhCtB,kCAiCTgQ,KAAoBC,6BACxB5N,EACAiN,EAAaxP,QACbiP,EACAjL,EACAiM,aAAahM,EAAQ+L,GACrB9P,GAECgD,MAAK,WACJ4M,EAAavI,KAAOsC,eAErBC,OAAM,SAACd,GACNC,EAASD,GACT8G,EAAavI,KAAOM,WA9CT,4CAAH,kEAsDdmB,QACAiB,WAAY,kBAAM6F,EAAavI,KAAOC,QDlBN4I,GAA1BL,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,UAEdzF,EAAgB,SACpBiG,GAEAT,EAAY,6BACPD,GADM,mBAERU,EAAMC,cAAc9G,KAAO6G,EAAMC,cAAc/F,UAI9CgG,EAAwB7C,oBAAQ,WACpC,IAAM8C,EACJf,GACAA,EAAkBzC,MAChB,SAACyD,GAAD,OAAUA,EAAKzM,eAAiB2L,EAAS3L,gBAE7C,OAAIwM,EACKA,EAAcR,SAEhB,IACN,CAACL,EAAS3L,aAAcyL,IAErBiB,EACJjB,IAAiB,UACjBA,EAAkBzC,MAAK,SAAC2D,GAAD,OAAOA,EAAE3M,eAAiB0L,YADhC,aACjB,EACIM,UAEAY,EAA6BpL,aAA6BR,GAchE,OACE,gBAACmK,GAAD,WACE,eAAC,GAAD,CACEnP,QAASA,EACTiP,KAAMA,EACNC,MACEA,GACA2B,aAAa3B,EAAOwB,GAA4C,GAElE1B,QAASA,IAEVS,GACC,gBAACL,GAAD,WACE,eAAClF,GAAA,EAAD,CACEV,KAAK,SACLW,MAAM,aACNlF,KAAK,SACLmF,cAAeA,IAEjB,eAACiF,GAAD,CACE7F,KAAK,eACLkB,SAAUN,EAFZ,gBAIGqF,QAJH,IAIGA,OAJH,EAIGA,EAAmBqB,KAAI,SAACL,EAAME,GAAP,OACtB,yBAEEpG,MAAOkG,EAAKzM,aACZ+M,SACEN,EAAKzM,aAAakJ,gBAClB0D,EAA2B,GAAG1D,cALlC,SAQGuD,EAAKO,QAPDL,WAaf,gBAAC,KAAD,WACE,eAAC,KAAD,CAAmBM,QAAQ,OAAOnJ,QAASQ,EAA3C,oBAGA,eAAC,KAAD,CACER,QAAS,kBACPiI,EACE/P,EACAwP,EACAP,EACAU,EAAS3L,aACT2L,EAAS1L,OACTsM,EACAvL,IAGJwF,UACGiF,GAC6B,KAAb,OAAjBA,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBlK,SACnBoK,EAAS1L,QAAU,EAfvB,6BAqBF,eAAC0C,GAAA,EAAD,CACEC,MAAOiJ,EACPhJ,oBA7E4B,CAChCG,QAAS,CACPW,YAAa,uBAEfR,WAAY,CACVQ,YAAa,6BAEfN,OAAQ,CACNM,YAAa,+B,UEzFNuJ,GAAmBnL,KAAOC,IAAV,qEAKhBmL,GAAkBpL,KAAOW,OAAV,4CACjB,qBAAG0K,QAAyB,QAAU,8BCGpCC,GAAiB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAC/B,EAAkCzI,oBAAiB,GAAnD,oBAAO0I,EAAP,KAAkBC,EAAlB,KACA,OACE,eAACC,GAAA,EAAD,CACEC,OACE,eAACR,GAAD,UACGI,EAAKR,KAAI,SAACa,EAAKhB,GAAN,OACR,eAACQ,GAAD,CAEEC,QAASG,IAAcZ,EACvB7I,QAAS,kBAAM0J,EAAab,IAH9B,SAKGgB,EAAInI,MAJAmH,QASbiB,cAAY,EAdd,SAgBGN,EAAKC,GAAWvJ,W,kDCPV6J,GAAmB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,iBAC3BC,EAAWC,eACXzE,EAASC,eACTyE,EAAeC,cACnB,SAACtL,GAAD,OAAsBA,EAAMuL,SAAS5E,EAAOvI,SAASiN,gBAGvD,EAA6D1D,eAA9C6D,EAAf,EAAQ5D,MAAgC6D,EAAxC,EAA8B5D,SAExB6D,EAAUJ,cAAY,SAACtL,GAC3B,OAAO2L,aAAoB3L,EAAMuL,SAAS5E,EAAOvI,aAChDwN,QAAO,SAAC/B,GACT,OAAOqB,EACJxM,MAAM8M,EAAc,GAAIA,EAAc,GAAK,GAC3CK,MAAK,SAAC9B,GACL,OAAOA,IAAMF,EAAKzQ,cAIxB0S,sBAAU,WACJT,IAAiB1K,KAAOoC,SAAuC,IAA5BmI,EAAiBvM,QAExDwM,EACEY,aAAkB,CAChB3S,QAAS8R,EAAiBxM,MAAM8M,EAAc,GAAIA,EAAc,GAAK,GACrEpN,QAASuI,EAAOvI,aAInB,CAAC+M,EAAUD,EAAkBvE,EAAOvI,QAASoN,IAEhD,IAAMQ,EAAgBlF,oBACpB,kBACE4E,EAAQxB,KAAI,SAAC+B,GACX,IAAMC,EAAgBD,EAAOlF,YAAYX,MACvC,SAACyD,GAAD,OAAUA,EAAKlO,eAAiBgL,EAAOM,IAAIX,iBAE7C,OACE,uCACE,eAACC,GAAA,EAAD,CAEEE,SAAsB,OAAbyF,QAAa,IAAbA,OAAA,EAAAA,EAAezF,SAAUyF,EAAczF,QAAU,EAC1DD,YAAayF,EACb5N,KAAK,SACLqI,UAAU,iBAJLuF,EAAO7S,SAMd,eAAC,KAAD,CACE+S,GAAG,gBACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,gBAKrD,CAACX,EAAS/E,EAAOM,MAGnB,OACE,eAAC,KAAD,CACEzK,OAAQ6O,EACRiB,WAAYN,EACZO,mBAAoBrB,EAAiBvM,OACrC6N,mBAAoBf,K,UClFbgB,GAAwCtN,KAAOC,IAAV,uVAIvC,qBAAG6E,MAAkBI,OAAOqI,MAY1BC,GAAwBxN,KAAOC,IAAV,gHAIvB,qBAAG6E,MAAkBI,OAAOqI,MAClB,qBAAGE,UACN,qCAAuC,UAI5CC,GAA2B1N,KAAOC,IAAV,+CAIxB0N,GAA0B3N,KAAOC,IAAV,iHAOvB2N,GAAwB5N,KAAOC,IAAV,mLASrB4N,GAAuB7N,KAAOC,IAAV,oDAIpB6N,GAAe9N,KAAOC,IAAV,wFAGN,qBAAGwN,UACN,qCAAuC,UAG1CM,GAAoB/N,KAAO6F,GAAV,gDCzCjBmI,ID6CwBhO,KAAOC,IAAV,2BC7CwB,SAAC,GAIpD,IAHLgO,EAGI,EAHJA,gBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,aAEA,EAA4BrL,qBAAkB,GAA9C,oBAAOsL,EAAP,UAEA,OACE,gBAACd,GAAD,WACE,gBAACI,GAAD,WACE,gBAACE,GAAD,CAAuBH,UAAWW,EAAlC,UACE,eAACN,GAAD,CAAcL,UAAWW,EAAzB,SACE,eAACL,GAAD,uBAEDG,KAEFC,GACC,gBAACN,GAAD,WACE,eAACC,GAAD,CAAcL,UAAWW,EAAzB,SACE,eAACL,GAAD,sBAEDI,QAKP,gBAACR,GAAD,CAAyBF,UAAWW,EAApC,UACE,eAACN,GAAD,CAAcL,UAAWW,EAAzB,SACE,eAACL,GAAD,yBAEDE,KAGH,eAACT,GAAD,CAAuBC,UAAWW,S,mECjD3BC,GAA4BrO,KAAOC,IAAV,0FAYzBqO,IANoBtO,KAAO6F,GAAV,+FAEb,qBAAGf,MAAkBS,KAAKC,OAAOC,WAIpBzF,KAAOS,EAAV,kDAId8N,GAAoBvO,KAAOS,EAAV,uEAKjB+N,GAAmBxO,KAAOC,IAAV,qEAKhBwO,GAAmBzO,KAAOuG,MAAV,8FAMhBmI,GAAmB1O,KAAOoE,MAAV,k3BACP,qBAAGuK,SACV,uBAAyB,yBAyC3BC,GAA6B5O,KAAOC,IAAV,sFAM1B4O,GAA6B7O,KAAOuJ,OAAV,6MAU1BuF,GAA6B9O,KAAOS,EAAV,2MAS1BsO,GAA0B/O,KAAOC,IAAV,wIAQvB+O,GAAgBhP,KAAOC,IAAV,6FAMbgP,GAAqBjP,KAAOS,EAAV,4C,UC1ElByO,GAAe,SAAC,GASd,IARbjV,EAQY,EARZA,QACAsI,EAOY,EAPZA,UACA2G,EAMY,EANZA,KACAC,EAKY,EALZA,MACAF,EAIY,EAJZA,QACAhL,EAGY,EAHZA,aACAyL,EAEY,EAFZA,kBACAzK,EACY,EADZA,QAEA,ECrCsB,SAAC,GAAuC,IAArChB,EAAoC,EAApCA,aAAcgB,EAAsB,EAAtBA,QACvC,EAA2BkE,eAAZhJ,EAAf,qBAASiJ,KACT,EAA4B+L,eAAbC,EAAf,qBAAShM,KACT,EAAgCC,eAAjBC,EAAf,qBAASF,KACT,EAA0BN,sBAA1B,oBAAcI,GAAd,WACA,EAAwCJ,sBAAxC,oBAAOuM,EAAP,KAAqBC,EAArB,KACA,EAAoCxM,qBAAkB,GAAtD,oBAAOyM,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,aAAezQ,GAC1Bd,EAAgBwJ,oBACpB,kBAAMvJ,KAAe1D,QAAQuD,EAAc9D,GAAkBsV,KAC7D,CAACA,EAAUtV,EAAQ8D,IAGf0R,EAAO,yCAAG,WACd3R,EACAE,EACAe,EACAjF,GAJc,wBAAAI,EAAA,0DAMV,UAAAkJ,EAAYE,aAAZ,eAAmBC,QAASxE,EANlB,uBAOZyE,aAAM,gBAAiB,CAAExE,KAAM,QAASyE,SAAU,cAPtC,iCAWRiM,EAAQ5V,IAEVoV,EACAA,EAAQnV,QACR,IAfU,SAiBQ4V,EAAeD,GAjBvB,mBAmBA1R,GAnBA,wBAoBZoR,EAAgB,sBApBJ,4CAwBUQ,EAAeF,EAAO5R,GAxBhC,cAwBR+R,EAxBQ,SA0BGA,GAAa7R,GA1BhB,wBA2BZsR,GAAc,GA3BF,mCAgCZxV,GAhCY,uCAiCLgK,KAAegM,mBACpBhW,EACAiF,GAnCU,+BA+BRgR,EA/BQ,UAsCZjW,GACAiW,GAvCY,uCAwCLjM,KAAekM,oBACpBlW,EACAiF,GA1CU,+BAqCRtE,EArCQ,UA8CZA,GA9CY,uCA8CIqJ,KAAemM,gBAAgBxV,EAAOsE,GA9C1C,uCA+CStE,GAASX,GA/ClB,yBAgDZG,GAhDY,uCAiDHoD,KAAcQ,0BACnBpD,EACAX,EACAgE,EACAC,EACAC,EACA/D,GAECgD,MAAK,WACJqS,GAAc,MAEfzL,OAAM,SAACqM,GACNlN,EAASkN,MA7DH,YAgEVzV,IAASX,EAhEC,yBAiEZG,GAjEY,uCAkEH6J,KAAeqM,gCACpBrW,EACAgE,EACAC,EACAC,EACA/D,GAECgD,MAAK,WACJqS,GAAc,MAEfzL,OAAM,SAACqM,GACNlN,EAASkN,MA7EH,iDAgFNjS,EACHwR,QAAQ3R,EAAgBE,GACxBf,MAAK,WACJqS,GAAc,MAEfzL,OAAM,SAACqM,GACNlN,EAASkN,MAtFD,4CAAH,4DA2FPN,EAAc,yCAAG,WACrBQ,EACAtS,GAFqB,gBAAA5D,EAAA,sEAIG+D,EAAc4R,UACpCO,EACAtS,GANmB,cAIf+R,EAJe,yBAQdA,GARc,2CAAH,wDAWdF,EAAc,yCAAG,WAAO5V,GAAP,gBAAAG,EAAA,sEACC+D,EAAcoS,UAAUtW,GADzB,cACfqN,EADe,yBAEdA,GAFc,2CAAH,sDAUpB,MAAO,CACLqI,UACAG,iBACAD,iBACAN,aACAiB,kBAVwB,WACxBhB,GAAc,GACdF,OAAgBmB,IAShBpB,gBD9F+DqB,CAAS,CACxEzS,eACAgB,YAFM0Q,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,WAAYiB,EAA7B,EAA6BA,kBAAmBnB,EAAhD,EAAgDA,aAIhD,EE9C6B,SAAC7S,EAAsByC,GACpD,MAA2BkE,eAAZhJ,EAAf,qBAASiJ,KACT,EAAgCC,eAAjBC,EAAf,qBAASF,KACT,EAA0BN,sBAA1B,oBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,oBAAiBtB,KAAOC,MAAxD,oBAAOkP,EAAP,KAAiBC,EAAjB,KAgFA,MAAO,CACLC,cA/EiB,yCAAG,WACpBrU,EACA0B,EACAxB,EACA1C,GAJoB,oBAAAI,EAAA,0DAMhB,UAAAkJ,EAAYE,aAAZ,eAAmBC,QAASxE,EANZ,uBAOlByE,aAAM,gBAAiB,CAAExE,KAAM,QAASyE,SAAU,cAPhC,6BAUpBiN,EAAYpP,KAAOoC,SAVC,KAYlB5J,GAZkB,qCAaXgK,KAAegM,mBACpBhW,EACAiF,GAfgB,6BAWdgR,EAXc,UAkBlBjW,GACAiW,GAnBkB,uCAoBXjM,KAAekM,oBACpBlW,EACAiF,GAtBgB,+BAiBdtE,EAjBc,UAyBlBA,GAzBkB,uCAyBFqJ,KAAemM,gBAAgBxV,EAAOsE,GAzBpC,uCA0BGtE,GAASX,GA1BZ,yBA2BlBG,GA3BkB,uCA4BToD,KAAce,+BACnB9B,EACA7B,EACAX,EACA0C,EACAwB,EACA/D,GAECgD,MAAK,WACJyT,EAAYpP,KAAOsC,eAEpBC,OAAM,SAACd,GACNC,EAASD,GACT2N,EAAYpP,KAAOM,WAzCP,YA4ChBnH,IAASX,EA5CO,yBA6ClBG,GA7CkB,uCA8CTgQ,KAAoB2G,qCACzBtU,EACAxC,EACA0C,EACAwB,EACA/D,GAECgD,MAAK,WACJyT,EAAYpP,KAAOsC,eAEpBC,OAAM,SAACd,GACNC,EAASD,GACT2N,EAAYpP,KAAOM,WA1DP,wCA6DlB3H,GA7DkB,uCA8DTgQ,KAAoB4G,oBACzBvU,EACAE,EACAwB,EACA/D,GAECgD,MAAK,WACJyT,EAAYpP,KAAOsC,eAEpBC,OAAM,SAACd,GACNC,EAASD,GACT2N,EAAYpP,KAAOM,WAzEP,4CAAH,4DAgFjBmB,QACA0N,WACAzM,WAAY,kBAAM0M,EAAYpP,KAAOC,QF1CSuP,CAC9C/W,EACAgF,GAFM4R,EAAR,EAAQA,cAAeF,EAAvB,EAAuBA,SAAUzM,EAAjC,EAAiCA,WAK3B+M,GAAgBC,EADDC,eAAbD,UACuBjS,GACzBmS,EAAyBH,EAC3BI,OAAO/W,KAAK2W,GACZ,KACJ,EAAkCnO,oBAChCsO,GAA0BA,EAAuB5R,OAAS,EACtD4R,EAAuB,GACvB,IAHN,oBAAOE,EAAP,KAAkBC,EAAlB,KAKA,EAA0CzO,oBAAiB,IAA3D,oBAAO0O,EAAP,KAAsBC,EAAtB,KAEMC,EACJhI,GACAA,EAAkBlK,OAAS,GAC3BkK,EAAkBzC,MAAK,SAAC2D,GAAD,OAAOA,EAAE3M,eAAiBA,KAS7C0T,EAAuB,SAACrH,GAC5BmH,EAAiBnH,EAAMsH,OAAOpN,OAC9BgM,KAoBF,OACE,gBAACnC,GAAD,WACE,eAAC,GAAD,CACEpU,QAASA,EACTiP,KAAMA,EACNC,MAAO2B,aAAa3B,EAAOuI,EAAcA,EAAYzH,SAAW,GAChEhB,QAASA,IAEX,gBAAC8F,GAAD,WACE,gBAACC,GAAD,WACE,eAACT,GAAD,uCACA,gBAACC,GAAD,WACE,gBAACE,GAAD,CAAkBmD,QAAQ,KAAKlD,SAA4B,OAAlB6C,EAAzC,UACE,eAAC/C,GAAD,CACEhL,KAAK,UACLvE,KAAK,QACL8N,GAAG,KACHxI,MAAM,KACNG,SAAUgN,IACT,IAPL,uBAUA,gBAACjD,GAAD,CAAkBmD,QAAQ,KAAKlD,SAA4B,OAAlB6C,EAAzC,UACE,eAAC/C,GAAD,CACEhL,KAAK,UACLvE,KAAK,QACL8N,GAAG,KACHxI,MAAM,KACNG,SAAUgN,IACT,IAPL,oBAYJ,gBAAC3C,GAAD,WACE,eAACT,GAAD,iDAGmB,OAAlBiD,IACEJ,EACC,gBAACxC,GAAD,WACE,eAACE,GAAD,yBAGA,eAACD,GAAD,UACGuC,EAAuBrG,KAAI,SAACL,GAAD,OAC1B,yBAAmBlG,MAAOkG,EAA1B,SACGA,GADUA,WAOnB,eAACvG,GAAA,EAAD,CACEV,KAAK,0BACLW,MAAM,aACNlF,KAAK,OACLmF,cAtFQ,SACpBiG,GAEAiH,EAAajH,EAAMC,cAAc/F,OACjCgM,KAmFY/L,SAA4B,OAAlB+M,GAA0BjC,KAG1C,eAAC,KAAD,CACE9K,UACsB,OAAlB+M,GAA4C,KAAlBA,KACzBM,qBAAUR,IACb/B,EAEFxN,QAAO,wBAAE,uBAAA3H,EAAA,sEACDuV,EACJ1V,EACAkP,EACAlK,EACkB,OAAlBuS,EAAyBF,OAAYb,GALhC,mFANX,qCAiBA,eAACxB,GAAD,UAAqBI,OAEvB,gBAACL,GAAD,WACE,eAACT,GAAD,kCACA,gBAACD,GAAD,+DACoD,IACjDxD,aAAa3B,EAAOuI,EAAcA,EAAYzH,SAAW,GAAI,IAC7DyH,EAAcA,EAAYzG,OAAS,GAHtC,aAOJ,gBAAC,KAAD,WACE,eAAC,KAAD,CAAmBC,QAAQ,OAAOnJ,QAASQ,EAA3C,oBAGA,eAAC,KAAD,CACEkC,UAAW8K,EACXxN,QAAO,wBAAE,uBAAA3H,EAAA,sEACDyW,EACJ5W,EACAkP,EACAD,EACkB,OAAlBsI,EAAyBF,OAAYb,GALhC,mFAFX,oBAcF,eAAC7P,GAAA,EAAD,CACEC,MAAO8P,EACP7P,oBA9H4B,CAChCG,QAAS,CACPW,YAAa,6BACbC,YACE,kEAEJT,WAAY,CACVQ,YAAa,uBACbC,YACE,wEAEJP,OAAQ,CACNM,YAAa,kBACbC,YAAa,sBAkHXd,SAAUmD,QGtNL6N,GAAsB/R,KAAOW,OAAV,sICUnBqR,GAAgB,SAAC,GAA6B,IAAD,EAA1BnK,EAA0B,EAA1BA,MAAOqB,EAAmB,EAAnBA,KACrC,ECJ0B,WAC1B,IAAM1B,EAASC,eAEf,MAAO,CACLxI,QAASuI,EAAOvI,QAChBhF,QAASuN,EAAOvN,QAChByC,QAAS8K,EAAO9K,SDFWuV,GAArBhT,EAAR,EAAQA,QAASvC,EAAjB,EAAiBA,QAEXwV,EAAqBvK,oBAAQ,WACjC,IAAMwK,EAAStK,EAAMuK,QAAQnL,MAAK,SAACyD,GAAD,OAAU2H,OAAO3H,EAAKhO,WAAawM,KAC/DoJ,EACJH,GACAtK,GACAA,EAAM6B,kBAAkBzC,MACtB,SAAC2D,GAAD,OAAOA,EAAE3M,eAAiBkU,EAAO1U,iBAErC,OACE0U,GAAM,6BACDA,GADC,IAEJlI,SAAUqI,GAASA,EAAMrI,SACzBgB,OAAQqH,GAASA,EAAMrH,WAG1B,CAACpD,EAAOqB,IAEX,EAGIlH,aACF6F,GAASqK,GACP,eAAC,GAAD,CACEjY,QAAS4N,EAAM5N,QACfiP,KAAMmJ,OAAOH,EAAmBxV,SAChCyM,MAAO+I,EAAmBxU,cAC1BO,aAAciU,EAAmBzU,cACjCiM,kBAAmB7B,EAAM6B,kBACzBT,QAAO,UAAEpB,EAAM0K,aAAa7V,GAAoB,UAAzC,aAAE,EAA2C8V,MACpDjQ,UAAW,WACTkQ,KAEFxT,QAASA,IAGb,iBACA,YAlBeyT,EADjB,EACEjQ,cACWgQ,EAFb,EAEElQ,UAoBF,OACE,gBAACwP,GAAD,CAAqBhQ,QAAS2Q,EAA9B,UACG,IADH,MAEM,QEvDGC,GAA4B3S,KAAOC,IAAV,kEAKzB2S,GAAwB5S,KAAOC,IAAV,6CAIrB4S,GAA6B7S,KAAOC,IAAV,wMAS1B6S,GAAoC9S,KAAO+S,GAAV,2BAEjCC,GAAmBhT,KAAOC,IAAV,ySAehBgT,GAAuBjT,KAAOS,EAAV,gDAIpByS,GAAwBlT,KAAOS,EAAV,gDCtBrB0S,ID0BsBnT,KAAOW,OAAV,sHC1BN,SAAC,GAIZ,IAHbkH,EAGY,EAHZA,MACAuL,EAEY,EAFZA,YACA1J,EACY,EADZA,kBAEM2J,EAAe,SAACpV,GAA0B,IAAD,EACvCgM,EACJP,IAAiB,UACjBA,EAAkBzC,MAAK,SAACyD,GAAD,OAAUA,EAAKzM,eAAiBA,YADtC,aACjB,EACIgM,UACN,OAAOA,GAAsB,GAGzBqJ,EAAa,SAACrV,GAA0B,IAAD,EACrCgN,EACJvB,IAAiB,UACjBA,EAAkBzC,MAAK,SAACyD,GAAD,OAAUA,EAAKzM,eAAiBA,YADtC,aACjB,EACIgN,QACN,OAAOA,GAAkB,IAG3B,OAAOmI,GAAeA,EAAY5T,OAAS,GAAKkK,EAC9C,eAACiJ,GAAD,UAEE,gBAACC,GAAD,WACE,gBAACC,GAAD,WACE,eAACC,GAAD,mBAGA,eAACA,GAAD,uBAIDM,EAAYrI,KAAI,SAACoH,GAAD,OACf,gBAACa,GAAD,WACE,eAACC,GAAD,UACGZ,OAAOF,EAAOzV,WAEjB,gBAACwW,GAAD,WACGpI,aACCqH,EAAOzU,cACP2V,EAAalB,EAAO1U,gBACnB,IACF6V,EAAWnB,EAAO1U,kBAOrB,eAAC,GAAD,CAAeoK,MAAOA,EAAOqB,KAAMmJ,OAAOF,EAAOzV,sBAMzD,wD,6BCtDS6W,GAA2B,SAAC,GAMH,IALpC3Q,EAKmC,EALnCA,YACAlG,EAImC,EAJnCA,QACAmG,EAGmC,EAHnCA,QACAN,EAEmC,EAFnCA,UACAtD,EACmC,EADnCA,QAEA,EAAkC6D,oBAAiB,IAAnD,oBAAOnG,EAAP,KAAkB6W,EAAlB,KAEA,EAAoD7Q,aAClDC,EACAjG,EACAD,EACAmG,EACA5D,GALMsE,EAAR,EAAQA,aAAcR,EAAtB,EAAsBA,cAAemB,EAArC,EAAqCA,WAsBrC,OACE,uCACE,eAACC,GAAA,EAAD,CACEV,KAAK,qBACLW,MAAM,qBACNlF,KAAK,OACLmF,cAAe,SAACoP,GAAD,OAAOD,EAAaC,EAAE7B,OAAOpN,QAC5CF,MAAM,QACNC,YAAY,oBACZC,MAAO7H,IAET,gBAAC,KAAD,WACE,eAAC,KAAD,CAAmBuO,QAAQ,OAAOnJ,QAASQ,EAA3C,oBAGA,eAAC,KAAD,CACER,QAASwB,EACTkB,UAAWtJ,KAAO8M,MAAM6J,UAAUnV,GAFpC,8BAOF,eAACiE,GAAA,EAAD,CACEV,OAAO,OACPW,MAAOkC,EACPjC,oBAvC4B,CAChCG,QAAS,CACPW,YAAa,uBAEfR,WAAY,CACVQ,YAAa,uBACbC,YACE,wEAEJP,OAAQ,CACNM,YAAa,oBA8BXb,SAAUmD,QC5ELwP,GAA+B1T,KAAOC,IAAV,+FAM5B0T,GAA6B3T,KAAOC,IAAV,wMAS1B2T,GAAoC5T,KAAO+S,GAAV,2BAEjCc,GAAuB7T,KAAOC,IAAV,oDAIpB6T,GAA8B9T,KAAOC,IAAV,6TAgB3B8T,GAAiB/T,KAAOS,EAAV,2BAEduT,GAAkBhU,KAAOS,EAAV,2BCpBfwT,GAAyB,SAAC,GAMxB,IALbC,EAKY,EALZA,cACA9B,EAIY,EAJZA,QACA1I,EAGY,EAHZA,kBACAyK,EAEY,EAFZA,SACAC,EACY,EADZA,iBAEMC,EAAiB1M,oBACrB,kBACEuM,EAAcnJ,KAAI,SAACiC,GACjB,IAAMmF,EAASC,EAAQnL,MAAK,SAACyD,GAAD,OAAU2H,OAAO3H,EAAKhO,WAAasQ,KACzDsF,EACJH,GACAzI,EAAkBzC,MAChB,SAAC2D,GAAD,OAAOA,EAAE3M,eAAiBkU,EAAO1U,iBAErC,OACE,gBAACqW,GAAD,CACE/R,QAAS,WACPoS,EAASnH,GACToH,KAHJ,UAME,eAACL,GAAD,UAAiB/G,IACjB,eAACgH,GAAD,UACG7B,GAAUG,EAAV,UACMxH,aAAY,OACbqH,QADa,IACbA,OADa,EACbA,EAAQzU,cAAcI,WADT,OAEbwU,QAFa,IAEbA,OAFa,EAEbA,EAAOrI,UAHZ,YAIQqI,EAAMrH,QACX,cAKd,CAACmH,EAAS+B,EAAUC,EAAkBF,EAAexK,IAGvD,OACE,gBAACgK,GAAD,WACE,gBAACC,GAAD,WACE,eAACC,GAAD,mBAGA,eAACA,GAAD,uBAIF,eAACC,GAAD,UAAuBQ,Q,UClEhBC,GAAiBtU,KAAOC,IAAV,4GAMdsU,GAA0BvU,aAAO0L,KAAP1L,CAAH,2BAEvBwU,GAA0BxU,KAAOC,IAAV,iEAKvBwU,GAAsBzU,KAAOS,EAAV,gFAMnBiU,GAAsB1U,KAAOS,EAAV,8CAInBkU,GAA0B3U,KAAOS,EAAV,qDCRvBmU,GAAoB,SAAC,GAAuB,IAArB/M,EAAoB,EAApBA,MAC5BgN,EAAYC,aAAchQ,KAAMI,OAAOqI,IAEvCwH,EAIA,CACJ,CACE3Q,MAAO,WACPI,MAAOqD,EAAMpE,MAEf,CACEW,MAAoC,SAA7ByD,EAAMmN,mBAAgC,OAAS,eAKtDxQ,MAC+B,SAA7BqD,EAAMmN,mBAAN,cACWnN,EAAMoN,YAAYnX,YACzB+J,EAAMoN,YAAYnX,YAE1B,CACEsG,MAAO,UACPI,MAAOqD,EAAQA,EAAM5N,QAAU,GAC/Bib,UAAW,YAIf,OACE,eAACX,GAAD,CACE5I,OACGkJ,EAEG,KADF,eAAC,KAAD,wBAGJhJ,cAAY,EANd,SAQE,gBAACyI,GAAD,WACGS,EAAShK,KAAI,SAACL,GAAD,OACZ,gBAAC8J,GAAD,WACE,eAACC,GAAD,UAAsB/J,EAAKtG,QAC3B,eAACsQ,GAAD,UACsB,YAAnBhK,EAAKwK,UAAL,UACMxK,EAAKlG,MAAMjF,MAAM,EAAG,GAD1B,cACkCmL,EAAKlG,MAAMjF,MACxCmL,EAAKlG,MAAMhF,OAAS,EACpBkL,EAAKlG,MAAMhF,SAEbkL,EAAKlG,UARiBkG,EAAKtG,UAYrC,eAAC,KAAD,IACA,gBAACuQ,GAAD,kBACG9M,QADH,IACGA,OADH,EACGA,EAAOmN,mBAAmBG,cAD7B,cACgDtN,QADhD,IACgDA,OADhD,EACgDA,EAAO5I,iBCq7BhDmW,UA34BgB,WAAO,IAAD,cACnC,EAAoEtS,oBAElE,CACAuS,KAAM,IACNC,cAAe,IACfC,OAAQ,IACRC,aAAc,IACdC,WAAY,IACZC,KAAM,IACNC,QAAS,IACTC,eAAgB,IAChBC,kBAAmB,IACnBC,YAAa,MAZf,oBAAOC,EAAP,KAAmCC,EAAnC,KAcMxO,EAASC,eAETwO,EAAUC,eAIVrB,GAFWsB,aAAiB3O,EAAOvI,SAEvB6V,aAAchQ,KAAMI,OAAOqI,KAEvC6I,EAAmBjK,cAAY,SAACtL,GAAD,OAAsBA,EAAMuL,SAASiK,MAEpEC,EAAgBnK,cACpB,SAACtL,GAAD,OACEuV,GACAG,aAAe1V,EAAMuL,SAAS5E,EAAOvI,SAAUmX,MAG7CI,EAAcrK,cAAY,SAACtL,GAAD,OAC9B4V,aAAc5V,EAAMuL,SAAS5E,EAAOvI,aAGhC4I,EAAQsE,cAAY,SAACtL,GAAD,OACxB6V,aAAe7V,EAAM8V,MAAMnP,EAAOvI,SAAUuI,EAAOM,QAG/CnN,EAAQwR,cAAY,SAACtL,GAAD,OACxB0V,aACE1V,EAAMuL,SAAS5E,EAAOvI,UACjB,OAAL4I,QAAK,IAALA,OAAA,EAAAA,EAAOlN,OAAQkN,EAAMlN,MAAQ,OAIjC,EAA4BwU,eAAbC,EAAf,qBAAShM,KAEHwT,EAAczK,cAClB,SAACtL,GAAD,OAAsBA,EAAMuL,SAAS5E,EAAOvI,SAAS5B,UAGjDwZ,EAAQ,UAAG1K,cAAY,SAACtL,GAAD,OAC3B2L,aAAoB3L,EAAMuL,SAAS5E,EAAOvI,oBAD9B,aAAG,EAEdwN,QAAO,SAAC/B,GACT,cAAO7C,QAAP,IAAOA,OAAP,EAAOA,EAAOgP,SAASnK,MAAK,SAAC9B,GAC3B,OAAOA,IAAMF,EAAKzQ,SAAWyQ,EAAKzL,UAAYuI,EAAOvI,cAInD6X,EAAY3K,cAChB,SAACtL,GAAD,OAAsBA,EAAM8V,MAAMnP,EAAOvI,SAASgE,SAG9C8T,EAAa5K,cACjB,SAACtL,GAAD,OAAsBA,EAAM8V,MAAMnP,EAAOvI,SAAS5B,UAG9C2Z,EAAgB7K,cACpB,SAACtL,GAAD,OAAsBA,EAAM8V,MAAMnP,EAAOvI,SAAS+X,iBAG9CC,EAAiB9K,cACrB,SAACtL,GAAD,OAAsBA,EAAM8V,MAAMnP,EAAOvI,SAASgY,kBAG9CC,EAAiB/K,cACrB,SAACtL,GAAD,OAAsBA,EAAMuL,SAAS5E,EAAOvI,SAASkY,iBAGjDC,EAAiBC,kBAAyB,MAChD,EAAwCvU,oBAAiB,GAAzD,oBAAO7H,EAAP,KAAqBqc,EAArB,KAEMpD,EAAgBvM,oBACpB,wBACE2O,IAAa,UACbA,EAAc1O,YAAYX,MACxB,SAACyD,GAAD,OAAUA,EAAKlO,aAAa2K,gBAAkBK,EAAOM,IAAIX,wBAF9C,aACb,EAEGiB,YACL,CAACkO,EAAe9O,EAAOM,MAGnByP,EAAiB5P,oBAAQ,WAC7B,IAAI6P,EAAgB,IASpB,MAPgC,YAAzB,OAAL3P,QAAK,IAALA,OAAA,EAAAA,EAAOmN,qBACPiC,IAAmBzV,KAAOM,OAE1B0V,EAAQhQ,EAAOwF,GAAKxF,EAAOwF,GAAK,IACO,UAAzB,OAALnF,QAAK,IAALA,OAAA,EAAAA,EAAOmN,sBAChBwC,EAAQtD,EAAgBA,EAAcjZ,GAAc6C,WAAa,KAE5D0Z,IACN,QACD3P,QADC,IACDA,OADC,EACDA,EAAOmN,mBACP/Z,EACAgc,EACA/C,EACA1M,EAAOwF,KAGHyK,EAAwB9P,oBAC5B,kBACEuM,IAAa,OACbrM,QADa,IACbA,OADa,EACbA,EAAOuK,QAAQ3F,QAAO,SAAC/B,GACrB,OAAOwJ,EAAcxH,MAAK,SAAC9B,GACzB,OAAOA,IAAMyH,OAAO3H,EAAKhO,kBAG/B,QAACmL,QAAD,IAACA,OAAD,EAACA,EAAOuK,QAAS8B,IAGbwD,EAAoB/P,oBAAQ,WAChC,IAAMwK,EACJsF,GACAvD,GACAuD,EAAsBxQ,MAAK,SAACyD,GAAD,OAAUA,EAAKhO,UAAY6a,KAClDjF,EACJH,GACAtK,GACAA,EAAM6B,kBAAkBzC,MACtB,SAAC2D,GAAD,OAAOA,EAAE3M,eAAiBkU,EAAO1U,iBAErC,OACE0U,GAAM,6BACDA,GADC,IAEJlI,SAAUqI,GAASA,EAAMrI,SACzBgB,OAAQqH,GAASA,EAAMrH,WAG1B,CAACpD,EAAO0P,EAAgBE,EAAuBvD,IAE5ClI,EAAWC,eAEjB,EAAwCtJ,aACtC6E,EAAOM,IACPsH,EAAUA,EAAQnV,QAAU,GAC5BoY,OAAOkF,GACPjB,GAAiC,GACjC9O,EAAOvI,SALDsE,EAAR,EAAQA,aAAcR,EAAtB,EAAsBA,cAQtB,EC1PyC,SACzCH,EACAlG,EACAmG,EACA9B,GAEA,MAA4C+B,qBAAS,GAArD,oBAAO6U,EAAP,KAAuBC,EAAvB,KACA,EAA0B9U,sBAA1B,oBAAOG,EAAP,KAAcC,EAAd,KACA,EAA2BC,eAAZhJ,EAAf,qBAASiJ,KAwCT,MAAO,CAAEyU,aAtCS,yCAAG,uBAAAzd,EAAA,yDACnBwd,GAAkB,IACd/U,EAAQgB,kBAFO,gCAGXtG,KAAcsB,0BAClB+D,EACAC,EAAQ5I,QACR4I,EAAQlI,MACR+B,EAAUkB,aAAiBlB,GAAWkB,aAAiB,GACvDzD,GAECgD,MAAK,WACJ4D,GAAYA,OAEbgD,OAAM,SAACd,GACNC,EAASD,MAEV6U,SAAQ,WACPF,GAAkB,MAjBL,6CAoBX5T,KAAe6T,aACnBjV,EACAC,EAAQ5I,QACRyC,EAAUkB,aAAiBlB,GAAWkB,aAAiB,GACvDzD,GAECgD,MAAK,WACJ4D,GAAYA,OAEbgD,OAAM,SAACd,GACNC,EAASD,MAEV6U,SAAQ,WACPF,GAAkB,MAjCL,2CAAH,qDAsCKD,iBAAgB1U,SD0ME8U,CACvCvQ,EAAOM,IACPkQ,SAASxQ,EAAOwF,IAChBsJ,GAAiC,IAH3BuB,EAAR,EAAQA,aAAcF,EAAtB,EAAsBA,eAMtB,EAGI3V,aACF6F,GAASqM,GAAiBoC,GACxB,eAAC,GAAD,CACE7M,aAAc6M,EACdrc,QAASuN,EAAOM,IAChBoB,KAAMmJ,OAAOkF,GACbpO,MAAOuO,EAAoBA,EAAkBha,mBAAgB+S,EAC7D9G,mBACE+N,EAAoBA,EAAkBja,mBAAgBgT,EAExDxH,QAAO,UAAEpB,EAAM0K,aAAa/K,EAAOwF,GAAKxF,EAAOwF,GAAK,UAA7C,aAAE,EAA+CwF,MACxDjQ,UAAW,kBAAM0V,KACjBvO,kBAAmB7B,EAAM6B,kBACzBzK,QAASuI,EAAOvI,UAGpB,kBACA,aAnBeiZ,EADjB,EACEzV,cACWwV,EAFb,EAEE1V,UAqBF,EAGIP,aACFkS,GAAiBrM,GACf,eAAC,GAAD,CACEqM,cAAeA,EACf9B,QAASvK,EAAMuK,QACf1I,kBAAmB7B,EAAM6B,kBACzByK,SAAU,SAACzX,GACT4a,EAAgBpD,EAAciE,QAAQ9F,OAAO3V,MAE/C0X,iBAAkB,kBAAMgE,OAG5B,oBACA,eAfeC,EADjB,EACE5V,cACW2V,EAFb,EAEE7V,UAiBF,EAGIP,aACF,qCACGsU,GACC,eAAC,GAAD,CACE1T,YAAa4E,EAAOM,IACpBpL,QAASsb,SAASxQ,EAAOwF,IACzBnK,QAASyT,EACT/T,UAAW,kBAAM+V,KACjBrZ,QAASuI,EAAOvI,YAItB,sBACA,iBAfesZ,EADjB,EACE9V,cACW6V,EAFb,EAEE/V,UAiBFoF,oBAAQ,WACDE,IAASlN,GAASic,IAAgBpV,KAAOC,MAE9CuK,EACEwM,aAAsB,CACpBve,QAAS4N,EAAMlN,MACfsE,QAASuI,EAAOvI,aAGnB,CAAC4I,EAAOmE,EAAUrR,EAAOic,EAAapP,EAAOvI,UAEhD0I,oBAAQ,WACF2O,GAEJF,GACEpK,EACEyM,aAAoB,CAClBxe,QAASmc,EACTnX,QAASuI,EAAOvI,aAGrB,CAACqX,EAAetK,EAAUxE,EAAOvI,QAASmX,IAG7CzO,oBAAQ,WACDE,GAASmP,IAAkBxV,KAAOC,MAEvCuK,EACE0M,aAAgB,CAAElc,aAAcgL,EAAOM,IAAK7I,QAASuI,EAAOvI,aAE7D,CAAC4I,EAAOmE,EAAUgL,EAAexP,EAAOM,IAAKN,EAAOvI,UAEvD0I,oBAAQ,WACDH,EAAOwF,IAAOkH,GACnBoD,EAAgBpD,EAAciE,QAAQ9F,OAAO7K,EAAOwF,QACnD,CAACkH,EAAe1M,EAAOwF,KAE1BrF,oBAAQ,YACDH,EAAOwF,IAAMkH,GAA+C,UAAzB,OAALrM,QAAK,IAALA,OAAA,EAAAA,EAAOmN,qBACxCiB,EAAQva,KAAR,WACM8L,EAAOvI,QADb,kBAC8BuI,EAAOM,IADrC,YAC4CoM,EAAcjZ,OAG3D,QACD4M,QADC,IACDA,OADC,EACDA,EAAOmN,mBACP/Z,EACAgb,EACA/B,EACA1M,EAAOM,IACPN,EAAOwF,GACPxF,EAAOvI,UAGT0I,oBAAQ,WAEJyO,IACElC,GAAiBA,EAAc1U,OAAS,GACV,YAAzB,OAALqI,QAAK,IAALA,OAAA,EAAAA,EAAOmN,sBACTnN,KACEL,EAAOwF,MAAMnF,EAAM0K,eACrB0E,IAAmBzV,KAAOC,MAE1BuK,EACE2M,aAAwB,CACtBnc,aAAcgL,EAAOM,IACrB7I,QAASuI,EAAOvI,QAChBvC,QAAS8K,EAAOwF,GAChBgI,mBAAoBnN,EAAMmN,wBAI/B,CACDnN,EACAmE,EACAiL,EACA/C,EACA1M,EAAOM,IACPN,EAAOwF,GACPxF,EAAOvI,QACPmX,IAGFzO,oBAAQ,WACN,GAAKE,GAASqP,IAAmB1V,KAAOoC,QAAxC,CACA,IAAIgV,EAAsB,GAC1B/Q,EAAMgP,SAASgC,SAAQ,SAACnO,IAClB,OAAC8L,QAAD,IAACA,OAAD,EAACA,EAAasC,SAASpO,KACzBkO,EAAUld,KAAKgP,MAGfkO,EAAUpZ,OAAS,GACrBwM,EACE+M,aAAkB,CAAE9e,QAAS2e,EAAW3Z,QAASuI,EAAOvI,cAI3D,CAAC4I,EAAO2O,EAAaxK,EAAUxE,EAAOvI,UAEzC0N,sBAAU,WACRX,EAASgN,aAAWxR,EAAOvI,YAC1B,CAAC+M,EAAUxE,IAEdmF,sBAAU,WACRsM,OAAOC,SAAS,EAAG,GACfrR,GAASkP,IAAevV,KAAOC,MACnCuK,EACEmN,aAAU,CACRlf,QAASuN,EAAOM,IAChB7I,QAASuI,EAAOvI,QAChBvC,QAAS8K,EAAOwF,QAGnB,CAACnF,EAAOkP,EAAY/K,EAAUxE,EAAOM,IAAKN,EAAOwF,GAAIxF,EAAOvI,UAE/D0N,sBAAU,WACHnF,EAAOwF,IAAOxF,EAAOM,KAC1BkE,EACEoN,aAA2B,CACzB5c,aAAcgL,EAAOM,IACrBpL,QAAS8K,EAAOwF,GAChB/N,QAASuI,EAAOvI,aAGnB,CAAC+M,EAAUxE,EAAOM,IAAKN,EAAOwF,GAAIxF,EAAOvI,UAE5C0N,sBAAU,WACR,GAAK2J,GAAkBlH,EAAvB,CACA,IAAMiK,EAA8BvS,aAClCwP,EAAcvP,cACdqI,EAAQnV,cAE0BwW,IAAhC4I,GACFrD,EAA8BqD,EAA4Bnf,gBAC3D,CAACS,EAAOyU,EAASkH,IAEpB,IAAMgD,EAA8C3R,oBAClD,iBAAO,CACL4R,KAAMC,KACNC,QAASC,KACT,mBAAoBC,KACpB,cAAeC,KACfC,OAAQC,KACRC,KAAMC,KACNC,OAAQC,KACRC,KAAMC,QAER,IA+CIC,GAAe1S,oBAAQ,WAC3B,IAAMoF,EACJpS,GACAA,EAAMiN,YAAYX,MAChB,SAACyD,GAAD,OAAUA,EAAKlO,eAAiBgL,EAAOM,IAAIX,iBAE/C,OACE,gBAAC,KAAD,YACQ,OAALU,QAAK,IAALA,OAAA,EAAAA,EAAO5N,WAAYuN,EAAOM,MAAY,OAALnN,QAAK,IAALA,OAAA,EAAAA,EAAOV,WAAY4N,EAAMlN,OACzD,uCACE,eAACyM,GAAA,EAAD,CACEC,YAAa1M,EACb2M,SAAsB,OAAbyF,QAAa,IAAbA,OAAA,EAAAA,EAAezF,SAAUyF,EAAczF,QAAU,EAC1DpI,KAAK,QACLqI,UAAU,iBAEZ,eAAC,KAAD,CACEyF,GAAG,eACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,YAI/CvS,GACA,eAAC,KAAD,oCAIL,QAACkN,QAAD,IAACA,OAAD,EAACA,EAAO5N,QAAR,OAAiB4N,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAOlN,MAAO6M,EAAOM,IAAKnN,IAExC2f,GAAyB3S,oBAAQ,WACrC,IAAMoF,EACJuJ,GACAA,EAAc1O,YAAYX,MACxB,SAACyD,GAAD,OAAUA,EAAKlO,eAAiBgL,EAAOM,IAAIX,iBAE/C,OACE,gBAAC,KAAD,WACGmP,GACC,uCACE,eAAClP,GAAA,EAAD,CACEC,YAAaiP,EACbhP,QAASyF,EAAgBA,EAAczF,QAAU,EACjDpI,KAAK,QACLqI,UAAU,iBAEZ,eAAC,KAAD,CACEyF,GAAG,eACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,YAI/CoJ,GACA,eAAC,KAAD,mCAIL,CAACA,EAAe9O,EAAOM,MAEpByS,GAAiB5S,oBACrB,kBACE,gBAAC,KAAD,kBACGkP,QADH,IACGA,OADH,EACGA,EAAU9L,KAAI,SAACyP,GACd,IAAMzN,EAAgByN,EAAQ5S,YAAYX,MACxC,SAACyD,GAAD,OAAUA,EAAKlO,eAAiBgL,EAAOM,IAAIX,iBAE7C,OACE,gBAAC,KAAMsT,SAAP,WACE,eAACrT,GAAA,EAAD,CACEC,YAAamT,EACblT,SAAsB,OAAbyF,QAAa,IAAbA,OAAA,EAAAA,EAAezF,SAAUyF,EAAczF,QAAU,EAC1DpI,KAAK,UACLqI,UAAU,oBAEZ,eAAC,KAAD,CACEyF,GAAG,kBACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,UAT1BsN,EAAQvgB,YAcZ,IAApB4c,EAASrX,QACR,eAAC,KAAD,sCAIN,CAACqX,EAAUrP,EAAOM,MAGd4S,GAAyB/S,oBAAQ,WACrC,GAAKE,EACL,OAAO,eAAC,GAAD,CAAkBkE,iBAAkBlE,EAAM0E,YAChD,CAAC1E,IAEE8S,GAAkBhT,oBAAQ,WAC9B,OACIoO,GACoC,MAApCA,EAA2BL,OAC7BgC,GAyBCA,GACDxD,GACoC,MAApC6B,EAA2BL,KAGzB,uCACE,eAAC,KAAD,UACE,eAAC,KAAD,kBAEF,gBAAC,KAAD,WACE,eAAC,KAAD,CAAsB3T,QAASmW,EAA/B,uBAGA,eAAC,KAAD,CAAsBnW,QAASwB,EAA/B,SACGR,IAAkBvB,KAAOoC,QACtB,wCACA,uCAOZ8T,GACAxD,GACoC,MAApC6B,EAA2BL,KAGzB,uCACE,eAAC,KAAD,UACE,gBAAC,KAAD,WACGgC,EAAkBha,eACjBga,EAAkBzN,UAClBa,aACE4M,EAAkBha,cAClBga,EAAkBzN,UAClBnM,WAAY,IACf4Z,EAAkBzM,YAGvB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAyBlJ,QAASmW,EAAlC,0BAGA,eAAC,KAAD,CAAsBnW,QAAS8V,EAA/B,SACGF,EAAiB,8BAA2B,0BAGjD,eAAC,KAAD,UACE,eAAC,KAAD,CAAsB5V,QAASwB,EAA/B,SACGR,IAAkBvB,KAAOoC,QACtB,wCACA,2CA9Bd,EA5CI,uCACE,eAAC,KAAD,UACE,gBAAC,KAAD,WACG8T,EAAkBha,eACjBga,EAAkBzN,UAClBa,aACE4M,EAAkBha,cAClBga,EAAkBzN,UAClBnM,WAAY,IACf4Z,EAAkBzM,YAGvB,eAAC,KAAD,UACGpD,GAASqM,GACR,eAAC,GAAD,CAAerM,MAAOA,EAAOqB,KAAMmJ,OAAOkF,YAkEnD,CACDxB,EACA2B,EACAxD,EACArM,EACA0P,EACAW,EACA3U,EACAR,EACA8U,EACAF,IAGIiD,GAAuBjT,oBAAQ,WAAO,IAAD,EACzC,GACEE,IAAK,UACLA,EAAM0K,aAAagF,UADd,aACL,EAAoCsD,aACpChT,EAAM0K,aAAagF,GAAgBsD,WAAWrb,OAAS,EAEvD,cAAOqI,QAAP,IAAOA,OAAP,EAAOA,EAAO0K,aAAagF,GAAgBsD,WAAW9P,KAAI,SAACL,GACzD,MAAI,eAAgBA,EAEhB,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,CACEhJ,IAAK4X,EAAiB5O,EAAKoQ,YAC3BnZ,IAAI,OAGR,gBAAC,KAAD,WACE,eAAC,KAAD,UACG+I,EAAKoQ,aAER,eAAC,KAAD,UAA0BpQ,EAAKlG,aAXDkG,EAAKoQ,YAgBpC,UAGV,CAACjT,EAAO0P,EAAgB+B,IAErByB,GAA6BpT,oBACjC,kBACE,gBAAC,KAAD,WACE,eAAC,KAAD,iBAAqBE,QAArB,IAAqBA,OAArB,EAAqBA,EAAOpE,OAC5B,gBAAC,KAAD,WACGyQ,GAAqD,MAApC6B,EAA2BL,MAC3C,eAAC,KAAD,UACE,eAAC,KAAD,CACEhU,IAAKsZ,KACLrZ,IAAI,WACJsZ,MAAM,WACNlZ,QAASwW,MAIf,eAAC,KAAD,UACE,eAAC,KAAD,CAAkB7W,IAAKwZ,KAAYvZ,IAAI,SAASsZ,MAAM,aAExD,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBvZ,IAAKyZ,KAAWxZ,IAAI,QAAQsZ,MAAM,YAEtD,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBvZ,IAAK0Z,KAAYzZ,IAAI,UAAUsZ,MAAM,sBAK/D,QACEpT,QADF,IACEA,OADF,EACEA,EAAOpE,KACPsS,EAA2BL,KAC3B6C,EACArE,IAIEmH,GAAgB1T,oBAAQ,WAC5B,GAAkC,YAAzB,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOmN,oBAAiC,CAAC,IAAD,MACpC3U,GACC,OAALwH,QAAK,IAALA,GAAA,UAAAA,EAAO0K,aAAagF,UAApB,mBAAqC+D,oBAArC,eAAmDC,UAAnD,OACA1T,QADA,IACAA,GADA,UACAA,EAAO0K,aAAagF,UADpB,aACA,EAAqC/E,OACvC,OAAOnS,GAAOA,EAAImb,WAAW,WACzBC,KAAMC,gBAAgBrb,GACtBA,EACC,GAAkC,UAAzB,OAALwH,QAAK,IAALA,OAAA,EAAAA,EAAOmN,oBAA+B,CAAC,IAAD,UAC/C2G,QAAQC,IAAR,OAAY/T,QAAZ,IAAYA,OAAZ,EAAYA,EAAO0K,aAAagF,GAAiBA,GACjD,IAAMlX,GACC,OAALwH,QAAK,IAALA,GAAA,UAAAA,EAAO0K,aAAagF,UAApB,mBAAqC+D,oBAArC,eAAmDC,UAAnD,OACA1T,QADA,IACAA,GADA,UACAA,EAAO0K,aAAagF,UADpB,iBACA,EAAqC+D,oBADrC,iBACA,EAAmDC,OAAO,GAAG,UAD7D,aACA,EAAiEM,KACnE,OAAOxb,GAAOA,EAAImb,WAAW,WACzBC,KAAMC,gBAAgBrb,GACtBA,EACE,IAAD,UACCA,GACC,OAALwH,QAAK,IAALA,GAAA,UAAAA,EAAO0K,aAAa,UAApB,mBAAwB+I,oBAAxB,eAAsCC,UAAtC,OACA1T,QADA,IACAA,GADA,UACAA,EAAO0K,aAAa,UADpB,iBACA,EAAwB+I,oBADxB,iBACA,EAAsCC,OAAO,GAAG,UADhD,aACA,EAAoDM,KACtD,OAAOxb,GAAOA,EAAImb,WAAW,WACzBC,KAAMC,gBAAgBrb,GACtBA,IAEL,QAACwH,QAAD,IAACA,OAAD,EAACA,EAAO0K,aAAR,OAAsB1K,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOmN,mBAAoBuC,IAE9CuE,GAAenU,oBAAQ,WAAO,IAAD,gBAM/B,IAaA,IAlBF,OACEE,GAC6B,SAA7BA,EAAMmN,qBADN,UAEAnN,EAAM0K,aAAagF,UAFnB,iBAEA,EAAoC+D,oBAFpC,aAEA,EAAkDC,UAClD,UAAA1T,EAAM0K,aAAa,UAAnB,mBAAuB+I,oBAAvB,eAAqCC,OAAO/b,QAAS,EAErD,UAAOqI,EAAM0K,aAAa,UAA1B,iBAAO,EAAuB+I,oBAA9B,aAAO,EAAqCC,OAAOxQ,KAAI,SAACL,EAAME,GAC9C,IAAD,EAAb,GAAU,IAANA,EACF,OAAO,UAAAF,EAAK,UAAL,eAASmR,IAAIL,WAAW,YAC3BC,KAAMC,gBAAgBhR,EAAK,GAAGmR,KAC9BnR,EAAK,GAAGmR,OAIhBhU,GAC6B,SAA7BA,EAAMmN,qBADN,UAEAnN,EAAM0K,aAAagF,UAFnB,iBAEA,EAAoC+D,oBAFpC,aAEA,EAAkDC,UAClD,UAAA1T,EAAM0K,aAAagF,UAAnB,mBAAoC+D,oBAApC,eAAkDC,OAAO/b,QAAS,EAElE,UAAOqI,EAAM0K,aAAagF,UAA1B,iBAAO,EAAoC+D,oBAA3C,aAAO,EAAkDC,OAAOxQ,KAC9D,SAACL,EAAME,GACS,IAAD,EAAb,GAAU,IAANA,EACF,OAAO,UAAAF,EAAK,UAAL,eAASmR,IAAIL,WAAW,YAC3BC,KAAMC,gBAAgBhR,EAAK,GAAGmR,KAC9BnR,EAAK,GAAGmR,YAXb,IAgBN,CAAChU,EAAO0P,IAEX,OACE,eAAC,KAAD,UACkB,YAAfR,EACC,eAAC,KAAD,UACE,eAAC,KAAD,CAAcgF,MAAM,cAGtB,qCACGjF,GAA4B,WAAfC,EACZ,qCACE,eAAC,KAAD,gCAGFlP,GACE,gBAAC,KAAD,YACIgN,GAAakG,GACf,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAerZ,IAAK2Z,KACU,SAA7BxT,EAAMmN,oBACLoB,GACAlC,GACE,qCACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAsBnS,QApX3B,WACnB,IAAMia,EAAgB/gB,EAAe,GAChCiZ,GAAiB8H,EAAgB,IAClC5E,EAAe6E,UACjB7E,EAAe6E,QAAQzX,OAASwX,EAAgB,GAAGle,YAErDmY,EAAQva,KAAR,WACM8L,EAAOvI,QADb,kBAC8BuI,EAAOM,IADrC,YAC4CoM,EAAc8H,KAE1D1E,EAAgB0E,KA2WQ,SACE,eAAC,KAAD,CACEta,IAAKwa,KACLva,IAAI,OAGR,gBAAC,KAAD,WACE,eAAC,KAAD,CACEzC,KAAK,SACLid,IAAK,EACLC,IAAKlI,EAAc1U,OACnB6c,aAAcphB,EAAe,EAC7BqhB,IAAKlF,EACLmF,WA5WP,SAACjS,GACJ,UAAdA,EAAMpI,KACRoI,EAAMC,cAAciS,QA2WMC,OAvWR,SAACnS,GACrB,IAhBwBpB,EAgBlBwT,EAAMrK,OAAO/H,EAAMsH,OAAOpN,OAhBR0E,EAiBPwT,EAhBbxI,GAAiBhL,EAAO,GAAKA,GAAQgL,EAAc1U,SACrDyW,EAAQva,KAAR,WACM8L,EAAOvI,QADb,kBAC8BuI,EAAOM,IADrC,YAC4CoM,EAAchL,EAAO,KAEjEoO,EAAgBpO,EAAO,OAyWD,IAUIgL,EAAc1U,UAElB,eAAC,KAAD,CAAsBuC,QAlZ/B,WACf,IAAM7G,EAAYD,EAAe,GAC5BiZ,GAAiBhZ,GAAagZ,EAAc1U,SAC7C4X,EAAe6E,UACjB7E,EAAe6E,QAAQzX,OAAStJ,EAAY,GAAG4C,YAEjDmY,EAAQva,KAAR,WACM8L,EAAOvI,QADb,kBAC8BuI,EAAOM,IADrC,YAC4CoM,EAAchZ,KAE1Doc,EAAgBpc,KAyYQ,SACE,eAAC,KAAD,CACEwG,IAAKib,KACLhb,IAAI,OAGR,eAAC,KAAD,CACEI,QAASsW,EADX,kCAST,UAAAxQ,EAAM0K,aAAagF,UAAnB,mBAAoC+D,oBAApC,eAAkDC,UACjD,UAAA1T,EAAM0K,aAAagF,UAAnB,mBAAoC+D,oBAApC,eAAkDC,OAC/C/b,QAAS,GACZ,CAAC,OAAQ,QAAQsZ,SAASjR,EAAMmN,qBAC9B,eAAC,KAAD,UACG8G,IACCA,GAAatc,OAAS,IADvB,OAECsc,SAFD,IAECA,QAFD,EAECA,GAAc/Q,KAAI,SAACL,EAAME,GAAP,YACP6F,IAAT/F,EACE,+BAEA,eAAC,KAAD,CAAwBhJ,IAAKgJ,GAARE,SAKH,SAA7B/C,EAAMmN,oBACLnN,EAAM0K,aAAagF,GAAgB+D,aAAasB,OAAO7R,KACrD,SAACL,GACC,GAAsB,QAAlBA,EAAKmS,SACP,OACE,eAAC,KAAD,CACEnb,IAAK+Z,KAAMC,gBAAgBhR,EAAKmR,KAChCiB,UAAQ,OAMnB,CAAC,OAAQ,UAAUhE,SAASjR,EAAMmN,uBAChC,UAAAnN,EAAM0K,aAAagF,UAAnB,eAAoCwF,eACnC,eAAC,KAAD,CACErb,IAAK+Z,KAAMC,gBACT7T,EAAM0K,aAAagF,GAAgBwF,eAErCD,UAAQ,IAGV,mCAGN,gBAAC,KAAD,WACGjI,GAAakG,GACd,eAAC,KAAD,UACGlT,EAAM0K,aAAa,GAAG1Q,aACrBgG,EAAM0K,aAAa,GAAG+I,aAAazZ,eAErCgT,GAAa,eAAC,GAAD,CAAmBhN,MAAOA,IACvCgN,EASA,eAAC,GAAD,CACE5G,gBAAiBsM,GACjBpM,aAAcmI,GAAiBgE,GAC/BpM,cAAemM,KAXjB,eAAC,GAAD,CACE9O,KAAM,CACJ,CAAE9H,KAAM,WAAYxB,QAASsY,IAC7B,CAAE9W,KAAM,QAASxB,QAASqY,IAC1B,CAAE7W,KAAM,SAAUxB,QAASoY,OAWjC,eAAC,KAAD,CACE1O,OACE,eAAC,KAAD,sBAEFE,cAAY,EAJd,SAME,eAAC,KAAD,UACG+O,OAGyB,SAA7B/S,EAAMmN,oBACL,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,2BAGD2F,MAGJ9F,GAAa,eAAC,GAAD,CAAmBhN,MAAOA,IACV,SAA7BA,EAAMmN,oBACL,eAAC,KAAD,CACErJ,OACE,eAAC,KAAD,qBAEFE,cAAY,EAJd,SAMGhE,GACC,eAAC,GAAD,CACEA,MAAOA,EACPuL,YAAW,OAAEvL,QAAF,IAAEA,OAAF,EAAEA,EAAOuK,QACpB1I,kBAAiB,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAO6B,sBAKjC,CAAC,OAAQ,QAAQoP,SAASjR,EAAMmN,qBAC/B,eAAC,KAAD,CACErJ,OACE,eAAC,KAAD,4BAIFE,cAAY,EANd,SAQG6O","file":"static/js/5.189eaf66.chunk.js","sourcesContent":["import { ERC725, ERC725JSONSchema } from '@erc725/erc725.js';\nimport {\n  encodeArrayKey,\n  encodeKeyValue,\n} from '@erc725/erc725.js/build/main/lib/utils';\nimport { Provider } from '@ethersproject/providers';\nimport { BigNumber, BigNumberish, BytesLike, ethers, Signer } from 'ethers';\nimport {\n  CardMarket__factory,\n  CardTokenProxy__factory,\n  ERC20__factory,\n  LSP6KeyManagerProxy__factory,\n  UniversalProfileProxy__factory,\n} from '../../submodules/fanzone-smart-contracts/typechain';\nimport { executeCallToUniversalProfileViaKeyManager } from '../../submodules/fanzone-smart-contracts/utils/universalProfile';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { getGasPrice } from '../../utils/network';\nimport KeyChain from '../utilities/KeyChain';\n\nconst LSP6KeyManagerSchemaList: ERC725JSONSchema = {\n  name: 'AddressPermissions[]',\n  key: '0xdf30dba06db6a30e65354d9a64c609861f089545ca58c6b4dbe31a5f338cb0e3',\n  keyType: 'Array',\n  valueContent: 'Number',\n  valueType: 'uint256',\n};\n\ntype permissionObject = {\n  [k: string]: boolean;\n};\n\nconst addPermissions = async (\n  universalProfileAddress: string,\n  address: string,\n  permissions: permissionObject,\n  signer: Signer,\n) => {\n  const encodedData = {\n    keys: [],\n    values: [],\n  } as { keys: string[]; values: string[] };\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const owner = await universalProfileContract.owner();\n  const KeyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    owner,\n    signer,\n  );\n\n  const [currentIndex] = await universalProfileContract.getData([\n    KeyChain.LSP6AddressPermissions,\n  ]);\n  const nextIndex =\n    currentIndex === '0x' ? 0 : ethers.BigNumber.from(currentIndex).toNumber();\n\n  const totalIndexvalue = encodeKeyValue(\n    LSP6KeyManagerSchemaList.valueContent,\n    LSP6KeyManagerSchemaList.valueType,\n    String(nextIndex + 1),\n    LSP6KeyManagerSchemaList.name,\n  );\n  encodedData.keys.push(LSP6KeyManagerSchemaList.key);\n  encodedData.values.push(totalIndexvalue);\n\n  const indexArrayKey = encodeArrayKey(LSP6KeyManagerSchemaList.key, nextIndex);\n  encodedData.keys.push(indexArrayKey);\n  encodedData.values.push(address);\n\n  const encodedPermissionsKey = ERC725.encodeKeyName(\n    `AddressPermissions:Permissions:${address.replace('0x', '')}`,\n  );\n  const encodedPermissionsValue = ERC725.encodePermissions(permissions);\n  encodedData.keys.push(encodedPermissionsKey);\n  encodedData.values.push(encodedPermissionsValue);\n\n  const encodedSetDataFunction =\n    universalProfileContract.interface.encodeFunctionData('setData', [\n      encodedData.keys,\n      encodedData.values,\n    ]);\n\n  await KeyManagerContract.execute(encodedSetDataFunction);\n};\n\nconst transferCardViaKeyManager = async (\n  assetAddress: string,\n  universalProfileAddress: string,\n  keyManagerAddress: string,\n  tokenId: number,\n  toAddress: string,\n  signer: Signer,\n) => {\n  const assetContract = CardTokenProxy__factory.connect(assetAddress, signer);\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n\n  const encodedTransferFunction = assetContract.interface.encodeFunctionData(\n    'transferFrom',\n    [universalProfileAddress, toAddress, tokenId],\n  );\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedTransferFunction,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst setCardMarketViaKeyManager = async (\n  assetAddress: string,\n  universalProfileAddress: string,\n  keyManagerAddress: string,\n  tokenId: number,\n  acceptedToken: string,\n  minimumAmount: BigNumberish,\n  signer: Signer,\n) => {\n  const assetContract = CardTokenProxy__factory.connect(assetAddress, signer);\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const tokenIdAsBytes = tokenIdAsBytes32(tokenId);\n  const encodedSetMarketFor = assetContract.interface.encodeFunctionData(\n    'setMarketFor',\n    [tokenIdAsBytes, acceptedToken, minimumAmount.toString()],\n  );\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedSetMarketFor,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst approveTokenViaKeyManager = async (\n  keyManagerAddress: string,\n  universalProfileAddress: string,\n  spenderAddress: string,\n  tokenAddress: string,\n  amount: BigNumber,\n  signer: Signer,\n) => {\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const erc20Contract = ERC20__factory.connect(tokenAddress, signer);\n  const encodedApprove = erc20Contract.interface.encodeFunctionData('approve', [\n    spenderAddress,\n    amount.toString(),\n  ]);\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      tokenAddress,\n      0,\n      encodedApprove,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst buyFromCardMarketViaKeyManager = async (\n  assetAddress: string,\n  keyManagerAddress: string,\n  universalProfileAddress: string,\n  tokenId: number,\n  minimumAmount: BigNumber,\n  signer: Signer,\n) => {\n  const assetContract = CardTokenProxy__factory.connect(assetAddress, signer);\n  const tokenIdBytes = tokenIdAsBytes32(tokenId);\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n\n  const encodedBuyFromMarket = assetContract.interface.encodeFunctionData(\n    'buyFromMarket',\n    [\n      tokenIdBytes,\n      minimumAmount.toString(),\n      '0x87847d301E8Da1D7E95263c3478d7F6e229E3F4b',\n    ],\n  );\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedBuyFromMarket,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst transferBalanceViaKeyManager = async (\n  tokenAddress: string,\n  keyManagerAddress: string,\n  universalProfileAddress: string,\n  amountToTransfer: BigNumberish,\n  toAddress: string,\n  signer: Signer,\n) => {\n  const tokenContract = ERC20__factory.connect(tokenAddress, signer);\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const encodedTransfer = tokenContract.interface.encodeFunctionData(\n    'transfer',\n    [toAddress, amountToTransfer],\n  );\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      tokenAddress,\n      0,\n      encodedTransfer,\n    ]);\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\nconst removeMarketViaKeymanager = async (\n  assetAddress: string,\n  universalProfileAddress: string,\n  keyManagerAddress: string,\n  tokenId: BytesLike,\n  signer: Signer,\n) => {\n  const assetContract = CardMarket__factory.connect(assetAddress, signer);\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n\n  const encodedRemoveMarketForFunction =\n    assetContract.interface.encodeFunctionData('removeMarketFor', [tokenId]);\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedRemoveMarketForFunction,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nexport const KeyManagerApi = {\n  addPermissions,\n  setCardMarketViaKeyManager,\n  transferCardViaKeyManager,\n  approveTokenViaKeyManager,\n  buyFromCardMarketViaKeyManager,\n  transferBalanceViaKeyManager,\n  removeMarketViaKeymanager,\n};\n","import { NetworkName } from '../../boot/types';\nimport { Address } from '../../utils/types';\n\nexport const getDefaultAddresses = async (\n  network: NetworkName,\n  type: 'assetsAddresses' | 'profileAddresses',\n): Promise<Array<Address>> => {\n  const res = await fetch(`./api/${network}/${type}.json`);\n  return res.json();\n};\n\nexport const trimedAddress = (address: Address) =>\n  `${address.slice(0, 8)}...${address.slice(\n    address.length - 4,\n    address.length,\n  )}`;\n\nexport const getWhiteListedTokenAddresses = (network: NetworkName) => {\n  const whiteListedTokens: { [key in NetworkName]: Array<string> } = {\n    polygon: [\n      '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    ],\n    mumbai: ['0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa'],\n    ethereum: ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'],\n    l14: [''],\n    l16: [''],\n  };\n\n  return whiteListedTokens[network];\n};\n","import styled from 'styled-components';\n\nexport const StyledProcessingWindow = styled.div<{ height?: 'full' }>`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: ${({ height }) => (height ? '100%' : 'calc(100% - 11em)')};\n  bottom: 0;\n  left: -0.03em;\n  border-radius: 0.625em;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const StyledStateContent = styled.div`\n  text-align: center;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledStateIcon = styled.img`\n  height: 8.5em;\n`;\n\nexport const StyledStateHeading = styled.h2`\n  margin-top: -2em;\n`;\n\nexport const StyledStateDescription = styled.p``;\n\nexport const StyledTryButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  padding: 0.3em 0;\n`;\n","import { ErrorIcon, PendingIcon, SuccessIcon } from '../../assets';\nimport { STATUS } from '../../utility';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledProcessingWindow,\n  StyledStateContent,\n  StyledStateDescription,\n  StyledStateHeading,\n  StyledStateIcon,\n  StyledTryButton,\n} from './styles';\n\ninterface IProps {\n  state: STATUS;\n  height?: 'full';\n  callback?: () => any;\n  transactionMessages: {\n    loading: {\n      mainHeading: string;\n      description?: string;\n    };\n    successful: {\n      mainHeading: string;\n      description?: string;\n    };\n    failed: {\n      mainHeading: string;\n      description?: string;\n    };\n  };\n}\n\nexport const TransactionStateWindow = ({\n  state,\n  height,\n  transactionMessages,\n  callback,\n}: IProps) => {\n  const transactionStatesIcons = {\n    loading: {\n      icon: PendingIcon,\n    },\n    successful: {\n      icon: SuccessIcon,\n    },\n    failed: {\n      icon: ErrorIcon,\n    },\n  };\n  return (\n    <>\n      {state !== STATUS.IDLE && (\n        <StyledProcessingWindow height={height}>\n          <StyledStateContent>\n            <StyledStateIcon src={transactionStatesIcons[state].icon} alt=\"\" />\n            <StyledStateHeading>\n              {transactionMessages[state].mainHeading}\n            </StyledStateHeading>\n            <StyledStateDescription>\n              {transactionMessages[state]?.description}\n            </StyledStateDescription>\n            {callback && state === STATUS.FAILED && (\n              <StyledTryButton onClick={callback}>Try again</StyledTryButton>\n            )}\n          </StyledStateContent>\n        </StyledProcessingWindow>\n      )}\n    </>\n  );\n};\n","import { useCallback, useContext } from 'react';\nimport { ModalContext, IOnPresent } from '../../context/ModalProvider';\n\nexport const useModal = (\n  ...[content, key, persist]: Parameters<IOnPresent>\n) => {\n  const { isOpen, onDismiss, onPresent } = useContext(ModalContext);\n\n  const handlePresent = useCallback(() => {\n    onPresent(content, key, persist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content, key, onPresent]);\n\n  return { handlePresent, onDismiss, isOpen };\n};\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  network: NetworkName,\n) => {\n  const [transferState, setTransferState] = useState<STATUS>(STATUS.IDLE);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n\n  const transferCard = async () => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setTransferState(STATUS.LOADING);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    transferCard,\n    transferState,\n    error,\n    resetState: () => setTransferState(STATUS.IDLE),\n  };\n};\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  align?: string;\n  placeholder?: string;\n  value?: string;\n  disabled?: boolean;\n}\n\nexport const InputField = ({\n  name,\n  label,\n  type,\n  changeHandler,\n  align,\n  placeholder,\n  value,\n  disabled,\n}: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n        align={align}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n      />\n    </StyledInputContainer>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledInputGroup,\n  StyledSellCardModalContent,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellLsp8Token } from '../../../hooks/useSellLsp8Token';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const SellCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n  network,\n}: IProps) => {\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale, sellState } = useSellLsp8Token();\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'SETTING FOR SALE...',\n    },\n    successful: {\n      mainHeading: 'SUCCESSFULLY SET FOR SALE',\n    },\n    failed: {\n      mainHeading: 'SOMETHING WENT WRONG',\n    },\n  };\n\n  return (\n    <StyledSellCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={\n          price &&\n          displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n        }\n        cardImg={cardImg}\n      />\n      {whiteListedTokens && (\n        <StyledInputGroup>\n          <InputField\n            name=\"amount\"\n            label=\"Your Price\"\n            type=\"number\"\n            changeHandler={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            {whiteListedTokens?.map((item, i) => (\n              <option\n                key={i}\n                value={item.tokenAddress}\n                selected={\n                  item.tokenAddress.toLowerCase() ===\n                  whiteListedtokensAddresses[0].toLowerCase()\n                }\n              >\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n      )}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={() =>\n            setForSale(\n              address,\n              ownerProfile,\n              mint,\n              sellForm.tokenAddress,\n              sellForm.amount,\n              selectedTokenDecimals,\n              network,\n            )\n          }\n          disabled={\n            !whiteListedTokens ||\n            whiteListedTokens?.length === 0 ||\n            sellForm.amount <= 0\n          }\n        >\n          Set for sale\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={sellState}\n        transactionMessages={transactionStatesMessages}\n      />\n    </StyledSellCardModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice, STATUS } from '../../utility';\n\nexport const useSellLsp8Token = () => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [sellState, setSellState] = useState<STATUS>(STATUS.IDLE);\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n    network: NetworkName,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setSellState(STATUS.LOADING);\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    sellState,\n    setForSale,\n    error,\n    resetState: () => setSellState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledIssuerOwnerWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  padding: 0.5em 1em;\n`;\n\nexport const StyledOwnerContainer = styled.div`\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n","import { ReactNode, useState } from 'react';\nimport {\n  StyledAccordionHeader,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n  StyledIssuerOwnerWrapper,\n  StyledOwnerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper>\n      <StyledIssuerOwnerWrapper>\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          </StyledHeader>\n          {issuerContent}\n        </StyledIssuerContainer>\n        {ownerContent && (\n          <StyledOwnerContainer>\n            <StyledHeader $expanded={expand}>\n              <StyledHeaderTitle>Owner</StyledHeaderTitle>\n            </StyledHeader>\n            {ownerContent}\n          </StyledOwnerContainer>\n        )}\n      </StyledIssuerOwnerWrapper>\n\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 1rem;\n`;\n\nexport const StyledPaymentText = styled.p`\n  font-size: 0.9em;\n  font-weight: 700;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  column-gap: 0.2em;\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  text-align: center;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledBuyStepsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2em;\n  margin-top: 1.5em;\n  position: relative;\n`;\n\nexport const StyledBuyStep = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 0.5em;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  color: red;\n`;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport { useBuyLsp8Token } from '../../../hooks/useBuyLsp8Token';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledBuyCardModalContent,\n  StyledBuyStep,\n  StyledBuyStepsContainer,\n  StyledErrorMessage,\n  StyledInfoText,\n  StyledPaymentText,\n  StyledRadioGroup,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from './styles';\nimport { isAddress } from 'ethers/lib/utils';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n  network,\n}: IProps) => {\n  const { approve, isApproved, resetApproveState, approveError } = useErc20({\n    tokenAddress,\n    network,\n  });\n  const { buyFromMarket, buyState, resetState } = useBuyLsp8Token(\n    address,\n    network,\n  );\n  const { getItems } = useLocalStorage();\n  const savedProfiles = getItems(network);\n  const savedProfilesAddresses = savedProfiles\n    ? Object.keys(savedProfiles)\n    : null;\n  const [upAddress, setUpAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [paymentOption, setPaymentOption] = useState<string>('');\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUpAddress(event.currentTarget.value);\n    resetApproveState();\n  };\n\n  const paymentChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPaymentOption(event.target.value);\n    resetApproveState();\n  };\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'Purchase is being verified',\n      description:\n        'In a few moments you will know if the purchase was successful.',\n    },\n    successful: {\n      mainHeading: 'Purchase successful!',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'Purchase failed',\n      description: 'Please try again.',\n    },\n  };\n\n  return (\n    <StyledBuyCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n        cardImg={cardImg}\n      />\n      <StyledBuyStepsContainer>\n        <StyledBuyStep>\n          <StyledPaymentText>1. CHOOSE PAYMENT METHOD</StyledPaymentText>\n          <StyledRadioGroup>\n            <StyledRadioLabel htmlFor=\"up\" $checked={paymentOption === 'up'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"up\"\n                value=\"up\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Universal Profile\n            </StyledRadioLabel>\n            <StyledRadioLabel htmlFor=\"mm\" $checked={paymentOption === 'mm'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"mm\"\n                value=\"mm\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Metamask\n            </StyledRadioLabel>\n          </StyledRadioGroup>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>\n            2. CONFIRM ADDRESS & CHECK BALANCE\n          </StyledPaymentText>\n          {paymentOption === 'up' &&\n            (savedProfilesAddresses ? (\n              <StyledSelectInputContainer>\n                <StyledUpAddressSelectLabel>\n                  UP Address\n                </StyledUpAddressSelectLabel>\n                <StyledUpAddressSelectInput>\n                  {savedProfilesAddresses.map((item) => (\n                    <option key={item} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </StyledUpAddressSelectInput>\n              </StyledSelectInputContainer>\n            ) : (\n              <InputField\n                name=\"universalProfileAddress\"\n                label=\"UP Address\"\n                type=\"text\"\n                changeHandler={changeHandler}\n                disabled={paymentOption === 'up' && isApproved}\n              />\n            ))}\n          <StyledModalButton\n            disabled={\n              ((paymentOption === 'up' || paymentOption === '') &&\n                !isAddress(upAddress)) ||\n              isApproved\n            }\n            onClick={async () =>\n              await approve(\n                address,\n                price,\n                network,\n                paymentOption === 'up' ? upAddress : undefined,\n              )\n            }\n          >\n            Check balance & Approve\n          </StyledModalButton>\n          <StyledErrorMessage>{approveError}</StyledErrorMessage>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>3. CONFIRM PURCHASE</StyledPaymentText>\n          <StyledInfoText>\n            Do you confirm the purchase of this card mint for{' '}\n            {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n            {marketToken ? marketToken.symbol : ''}?\n          </StyledInfoText>\n        </StyledBuyStep>\n      </StyledBuyStepsContainer>\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!isApproved}\n          onClick={async () =>\n            await buyFromMarket(\n              address,\n              price,\n              mint,\n              paymentOption === 'up' ? upAddress : undefined,\n            )\n          }\n        >\n          Buy\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={buyState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledBuyCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useAccount, useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [approveError, setApproveError] = useState<string>();\n  const [isApproved, setIsApproved] = useState<boolean>(false);\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n\n    const balance = await checkBalanceOf(buyer);\n\n    if (balance < amount) {\n      setApproveError('Not enough balance');\n      return;\n    }\n\n    const allowance = await checkAllowance(buyer, spenderAddress);\n\n    if (allowance && allowance >= amount) {\n      setIsApproved(true);\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    } else {\n      await erc20Contract\n        .approve(spenderAddress, amount)\n        .then(() => {\n          setIsApproved(true);\n        })\n        .catch((err) => {\n          setError(err);\n        });\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  const resetApproveState = () => {\n    setIsApproved(false);\n    setApproveError(undefined);\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n    isApproved,\n    resetApproveState,\n    approveError,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { STATUS } from '../../utility';\n\nexport const useBuyLsp8Token = (assetAddress: string, network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [buyState, setBuyState] = useState<STATUS>(STATUS.IDLE);\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setBuyState(STATUS.LOADING);\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n  };\n\n  return {\n    buyFromMarket,\n    error,\n    buyState,\n    resetState: () => setBuyState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n  width: 100%;\n`;\n","import { useMemo } from 'react';\nimport { useModal } from '../../../../hooks/useModal';\nimport { useUrlParams } from '../../../../hooks/useUrlParams';\nimport { ICard } from '../../../../services/models';\nimport { BuyCardModal } from '../../BuyCardModal';\nimport { StyledCardBuyButton } from './styles';\n\ninterface IProps {\n  asset: ICard;\n  mint: number;\n}\n\nexport const BuyCardButton = ({ asset, mint }: IProps) => {\n  const { network, tokenId } = useUrlParams();\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset.markets.find((item) => Number(item.tokenId) === mint);\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, mint]);\n\n  const {\n    handlePresent: onPresentBuyCardModal,\n    onDismiss: onDismissBuyCardModal,\n  } = useModal(\n    asset && selectedMintMarket && (\n      <BuyCardModal\n        address={asset.address}\n        mint={Number(selectedMintMarket.tokenId)}\n        price={selectedMintMarket.minimumAmount}\n        tokenAddress={selectedMintMarket.acceptedToken}\n        whiteListedTokens={asset.whiteListedTokens}\n        cardImg={asset.lsp8MetaData[tokenId ? tokenId : 0]?.image}\n        onDismiss={() => {\n          onDismissBuyCardModal();\n        }}\n        network={network}\n      />\n    ),\n    'Buy Card Modal',\n    'Buy Card',\n  );\n\n  return (\n    <StyledCardBuyButton onClick={onPresentBuyCardModal}>\n      {' '}\n      Buy{' '}\n    </StyledCardBuyButton>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { BuyCardButton } from '../components/BuyCardButton';\nimport {\n  StyledCardMarket,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            {/* <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy> */}\n            <BuyCardButton asset={asset} mint={Number(market.tokenId)} />\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { Modal } from '../../../components';\nimport { InputField } from '../../../components/InputField';\nimport {\n  StyledModalButtonsWrapper,\n  StyledModalButton,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IProfile } from '../../../services/models';\n\ninterface TransferCardTokenIdModalProps {\n  cardAddress: string;\n  tokenId: number;\n  profile: IProfile;\n  onDismiss: () => any;\n  network: NetworkName;\n}\n\nexport const TransferCardTokenIdModal = ({\n  cardAddress,\n  tokenId,\n  profile,\n  onDismiss,\n  network,\n}: TransferCardTokenIdModalProps) => {\n  const [toAddress, setToAddress] = useState<string>('');\n\n  const { transferCard, transferState, resetState } = useTransferLsp8Token(\n    cardAddress,\n    toAddress,\n    tokenId,\n    profile,\n    network,\n  );\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'TRANSFERING CARD...',\n    },\n    successful: {\n      mainHeading: 'TRANSFER SUCCESSFULL',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'TRANSFER FAILED',\n    },\n  };\n\n  return (\n    <>\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={(e) => setToAddress(e.target.value)}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n        value={toAddress}\n      />\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={transferCard}\n          disabled={!ethers.utils.isAddress(toAddress)}\n        >\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={transferState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectMintModalContent = styled.div`\n  max-height: 40em;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectMintListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledSelectMintListHeaderContent = styled.h4``;\n\nexport const StyledSelectMintList = styled.div`\n  overflow-y: scroll;\n`;\n\nexport const StyledSelectMintListContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 1em;\n  cursor: pointer;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledListMint = styled.p``;\n\nexport const StyledListPrice = styled.p``;\n","import { useMemo } from 'react';\nimport { IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledListMint,\n  StyledListPrice,\n  StyledSelectMintList,\n  StyledSelectMintListContent,\n  StyledSelectMintListHeader,\n  StyledSelectMintListHeaderContent,\n  StyledSelectMintModalContent,\n} from './styles';\n\ninterface IProps {\n  ownedTokenIds: number[];\n  markets: IMarket[];\n  whiteListedTokens: IWhiteListedTokens[];\n  onSelect: (index: number) => void;\n  onSelectCallback: () => void;\n}\n\nexport const SelectMintModalContent = ({\n  ownedTokenIds,\n  markets,\n  whiteListedTokens,\n  onSelect,\n  onSelectCallback,\n}: IProps) => {\n  const renderMintList = useMemo(\n    () =>\n      ownedTokenIds.map((id) => {\n        const market = markets.find((item) => Number(item.tokenId) === id);\n        const token =\n          market &&\n          whiteListedTokens.find(\n            (i) => i.tokenAddress === market.acceptedToken,\n          );\n        return (\n          <StyledSelectMintListContent\n            onClick={() => {\n              onSelect(id);\n              onSelectCallback();\n            }}\n          >\n            <StyledListMint>{id}</StyledListMint>\n            <StyledListPrice>\n              {market && token\n                ? `${displayPrice(\n                    market?.minimumAmount.toString(),\n                    token?.decimals,\n                  )} ${token.symbol}`\n                : '-'}\n            </StyledListPrice>\n          </StyledSelectMintListContent>\n        );\n      }),\n    [markets, onSelect, onSelectCallback, ownedTokenIds, whiteListedTokens],\n  );\n\n  return (\n    <StyledSelectMintModalContent>\n      <StyledSelectMintListHeader>\n        <StyledSelectMintListHeaderContent>\n          Mint\n        </StyledSelectMintListHeaderContent>\n        <StyledSelectMintListHeaderContent>\n          Price\n        </StyledSelectMintListHeaderContent>\n      </StyledSelectMintListHeader>\n      <StyledSelectMintList>{renderMintList}</StyledSelectMintList>\n    </StyledSelectMintModalContent>\n  );\n};\n","import styled from 'styled-components';\nimport { Accordion } from '../../../../components';\n\nexport const StyledCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  row-gap: 1em;\n`;\nexport const StyledCardInfoAccordion = styled(Accordion)``;\n\nexport const StyledCardInfoContainer = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledCardInfoLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n  width: 50%;\n`;\n\nexport const StyledCardInfoValue = styled.p`\n  width: 50%;\n`;\n\nexport const StyledCardStandardLabel = styled.p`\n  margin-left: auto;\n`;\n","import { theme } from '../../../../boot/styles';\nimport { StyledAccordionTitle } from '../../../../components/Accordion/styles';\nimport { useMediaQuery } from '../../../../hooks/useMediaQuery';\nimport { ICard } from '../../../../services/models';\nimport { StyledDividerSpan } from '../../styles';\nimport {\n  StyledCardInfo,\n  StyledCardInfoAccordion,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardStandardLabel,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n}\n\nexport const CardInfoAccordion = ({ asset }: IProps) => {\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'NFT name',\n      value: asset.name,\n    },\n    {\n      label: asset.supportedInterface === 'lsp8' ? 'Mint' : 'Total Supply',\n      //   value:\n      //     ownedTokenIds && ownedTokenIds.length > 0\n      //       ? ownedTokenIds[currentIndex].toString()\n      //       : '',\n      value:\n        asset.supportedInterface === 'lsp8'\n          ? ` of ${asset.totalSupply.toString()}`\n          : asset.totalSupply.toString(),\n    },\n    {\n      label: 'Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n  ];\n\n  return (\n    <StyledCardInfoAccordion\n      header={\n        !isDesktop ? (\n          <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n        ) : null\n      }\n      enableToggle\n    >\n      <StyledCardInfo>\n        {cardInfo.map((item) => (\n          <StyledCardInfoContainer key={item.label}>\n            <StyledCardInfoLabel>{item.label}</StyledCardInfoLabel>\n            <StyledCardInfoValue>\n              {item.valueType === 'address'\n                ? `${item.value.slice(0, 8)}...${item.value.slice(\n                    item.value.length - 4,\n                    item.value.length,\n                  )}`\n                : item.value}\n            </StyledCardInfoValue>\n          </StyledCardInfoContainer>\n        ))}\n        <StyledDividerSpan />\n        <StyledCardStandardLabel>\n          {asset?.supportedInterface.toUpperCase()} on {asset?.network}\n        </StyledCardStandardLabel>\n      </StyledCardInfo>\n    </StyledCardInfoAccordion>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n  TransferIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardPriceWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n  StyledMintSliderInput,\n  StyledSelectMintModalButton,\n  StyledMediaContainer,\n  StyledHeroImg,\n  StyledAssetDetailContainer,\n  StyledContractDetailHeader,\n  StyledContractName,\n  StyledContractDescription,\n  StyledOtherMediaContainer,\n  StyledOtherImg,\n  StyledHeroImgContainer,\n  StyledVideo,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\nimport { useRemoveMarketForLsp8Token } from '../../hooks/useRemoveMarketForLsp8Token';\nimport { useModal } from '../../hooks/useModal';\nimport { TransferCardTokenIdModal } from './TransferCardTokenIdModal';\nimport { SelectMintModalContent } from './SelectMintModalContent';\nimport { BuyCardButton } from './components/BuyCardButton';\nimport Utils from '../../services/utilities/util';\nimport { CardInfoAccordion } from './components/CardInfoAccordion';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transfervalue: '0',\n    deploy: '0',\n    delegatecall: '0',\n    staticcall: '0',\n    call: '0',\n    setdata: '0',\n    addpermissions: '0',\n    changepermissions: '0',\n    changeowner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const history = useHistory();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state.cards[params.network], params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector(\n    (state: RootState) => state.cards[params.network].error,\n  );\n\n  const cardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status,\n  );\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards[params.network].marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards[params.network].metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const mintIdInputRef = useRef<HTMLInputElement>(null);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const currentTokenId = useMemo(() => {\n    let index: string = '0';\n    if (\n      asset?.supportedInterface === 'erc721' &&\n      metaDataStatus !== STATUS.FAILED\n    ) {\n      index = params.id ? params.id : '0';\n    } else if (asset?.supportedInterface === 'lsp8') {\n      index = ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '0';\n    }\n    return index;\n  }, [\n    asset?.supportedInterface,\n    currentIndex,\n    metaDataStatus,\n    ownedTokenIds,\n    params.id,\n  ]);\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find((item) => item.tokenId === currentTokenId);\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentTokenId, marketsForOwnedTokens, ownedTokenIds]);\n\n  const dispatch = useAppDispatch();\n\n  const { transferCard, transferState } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    Number(currentTokenId),\n    activeProfile ? activeProfile : ({} as IProfile),\n    params.network,\n  );\n\n  const { removeMarket, removingMarket } = useRemoveMarketForLsp8Token(\n    params.add,\n    parseInt(params.id),\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const {\n    handlePresent: onPresentSellCardModal,\n    onDismiss: onDismissSellCardModal,\n  } = useModal(\n    asset && ownedTokenIds && activeProfile && (\n      <SellCardModal\n        ownerProfile={activeProfile}\n        address={params.add}\n        mint={Number(currentTokenId)}\n        price={currentMintMarket ? currentMintMarket.minimumAmount : undefined}\n        marketTokenAddress={\n          currentMintMarket ? currentMintMarket.acceptedToken : undefined\n        }\n        cardImg={asset.lsp8MetaData[params.id ? params.id : 0]?.image}\n        onDismiss={() => onDismissSellCardModal()}\n        whiteListedTokens={asset.whiteListedTokens}\n        network={params.network}\n      />\n    ),\n    'Sell Card Modal',\n    'Sell Card',\n  );\n\n  const {\n    handlePresent: onPresentSelectMintModal,\n    onDismiss: onDismissSelectMintModal,\n  } = useModal(\n    ownedTokenIds && asset && (\n      <SelectMintModalContent\n        ownedTokenIds={ownedTokenIds}\n        markets={asset.markets}\n        whiteListedTokens={asset.whiteListedTokens}\n        onSelect={(tokenId: number) => {\n          setCurrentIndex(ownedTokenIds.indexOf(Number(tokenId)));\n        }}\n        onSelectCallback={() => onDismissSelectMintModal()}\n      />\n    ),\n    'Select Mint Modal',\n    'Select Mint',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardModal,\n    onDismiss: onDismissTransferCardModal,\n  } = useModal(\n    <>\n      {activeProfile && (\n        <TransferCardTokenIdModal\n          cardAddress={params.add}\n          tokenId={parseInt(params.id)}\n          profile={activeProfile}\n          onDismiss={() => onDismissTransferCardModal()}\n          network={params.network}\n        />\n      )}\n    </>,\n    'Card Transfer Modal',\n    'Transfer Card',\n  );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds && asset?.supportedInterface === 'lsp8') {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    asset?.supportedInterface,\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ((ownedTokenIds && ownedTokenIds.length > 0) ||\n        asset?.supportedInterface === 'erc721') &&\n      asset &&\n      !(params.id in asset.lsp8MetaData) &&\n      metaDataStatus === STATUS.IDLE\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: params.id,\n          supportedInterface: asset.supportedInterface,\n        }),\n      );\n    }\n  }, [\n    asset,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState(params.network));\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (nextIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (previousIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const mintChangeHelper = (mint: number) => {\n    if (ownedTokenIds && mint > 0 && mint <= ownedTokenIds.length) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[mint - 1]}`,\n      );\n      setCurrentIndex(mint - 1);\n    }\n  };\n\n  const onEnterHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    const val = Number(event.target.value);\n    mintChangeHelper(val);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            {asset && ownedTokenIds && (\n              <BuyCardButton asset={asset} mint={Number(currentTokenId)} />\n            )}\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={onPresentSellCardModal}>\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton onClick={onPresentSellCardModal}>\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton onClick={removeMarket}>\n              {removingMarket ? 'Withdrawing from sale…' : 'Withdraw from sale'}\n            </StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentUsersPermissionsSet,\n    currentMintMarket,\n    ownedTokenIds,\n    asset,\n    currentTokenId,\n    onPresentSellCardModal,\n    transferCard,\n    transferState,\n    removeMarket,\n    removingMarket,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.lsp8MetaData[currentTokenId]?.attributes &&\n      asset.lsp8MetaData[currentTokenId].attributes.length > 0\n    ) {\n      return asset?.lsp8MetaData[currentTokenId].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    }\n  }, [asset, currentTokenId, propertiesImages]);\n\n  const renderContractDetailHeader = useMemo(\n    () => (\n      <StyledContractDetailHeader>\n        <StyledContractName>{asset?.name}</StyledContractName>\n        <StyledQuickActions>\n          {ownedTokenIds && currentUsersPermissionsSet.call === '1' && (\n            <StyledReloadPriceAction>\n              <StyledActionIcon\n                src={TransferIcon}\n                alt=\"transfer\"\n                title=\"transfer\"\n                onClick={onPresentTransferCardModal}\n              />\n            </StyledReloadPriceAction>\n          )}\n          <StyledReloadPriceAction>\n            <StyledActionIcon src={ReloadIcon} alt=\"reload\" title=\"reload\" />\n          </StyledReloadPriceAction>\n          <StyledReloadPriceAction>\n            <StyledActionIcon src={ShareIcon} alt=\"share\" title=\"share\" />\n          </StyledReloadPriceAction>\n          <StyledReloadPriceAction>\n            <StyledActionIcon src={OptionIcon} alt=\"options\" title=\"options\" />\n          </StyledReloadPriceAction>\n        </StyledQuickActions>\n      </StyledContractDetailHeader>\n    ),\n    [\n      asset?.name,\n      currentUsersPermissionsSet.call,\n      onPresentTransferCardModal,\n      ownedTokenIds,\n    ],\n  );\n\n  const getHeroImgSrc = useMemo(() => {\n    if (asset?.supportedInterface === 'erc721') {\n      const img =\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[currentTokenId]?.image;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    } else if (asset?.supportedInterface === 'lsp8') {\n      console.log(asset?.lsp8MetaData[currentTokenId], currentTokenId);\n      const img =\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images[0][0]?.url;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    } else {\n      const img =\n        asset?.lsp8MetaData[0]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[0]?.LSP4Metadata?.images[0][0]?.url;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    }\n  }, [asset?.lsp8MetaData, asset?.supportedInterface, currentTokenId]);\n\n  const getOtherImgs = useMemo(() => {\n    if (\n      asset &&\n      asset.supportedInterface === 'lsp4' &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n      asset.lsp8MetaData[0]?.LSP4Metadata?.images.length > 1\n    ) {\n      return asset.lsp8MetaData[0]?.LSP4Metadata?.images.map((item, i) => {\n        if (i !== 0) {\n          return item[0]?.url.startsWith('ipfs://')\n            ? Utils.convertImageURL(item[0].url)\n            : item[0].url;\n        }\n      });\n    } else if (\n      asset &&\n      asset.supportedInterface === 'lsp8' &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images.length > 1\n    ) {\n      return asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images.map(\n        (item, i) => {\n          if (i !== 0) {\n            return item[0]?.url.startsWith('ipfs://')\n              ? Utils.convertImageURL(item[0].url)\n              : item[0].url;\n          }\n        },\n      );\n    }\n  }, [asset, currentTokenId]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            asset && (\n              <StyledAssetDetailContent>\n                {!isDesktop && renderContractDetailHeader}\n                <StyledMediaContainer>\n                  <StyledHeroImgContainer>\n                    <StyledHeroImg src={getHeroImgSrc} />\n                    {asset.supportedInterface === 'lsp8' &&\n                      wasActiveProfile &&\n                      ownedTokenIds && (\n                        <>\n                          <StyledMintControls>\n                            <StyledMintSkipButton onClick={previousMint}>\n                              <StyledMintSkipButtonImg\n                                src={BackwardsIcon}\n                                alt=\"\"\n                              />\n                            </StyledMintSkipButton>\n                            <StyledMintSliderIndex>\n                              <StyledMintSliderInput\n                                type=\"number\"\n                                min={1}\n                                max={ownedTokenIds.length}\n                                defaultValue={currentIndex + 1}\n                                ref={mintIdInputRef}\n                                onKeyPress={onEnterHandler}\n                                onBlur={onBlurHandler}\n                              />\n                              /{ownedTokenIds.length}\n                            </StyledMintSliderIndex>\n                            <StyledMintSkipButton onClick={nextMint}>\n                              <StyledMintSkipButtonImg\n                                src={ForwardsIcon}\n                                alt=\"\"\n                              />\n                            </StyledMintSkipButton>\n                            <StyledSelectMintModalButton\n                              onClick={onPresentSelectMintModal}\n                            >\n                              Select Mint\n                            </StyledSelectMintModalButton>\n                          </StyledMintControls>\n                        </>\n                      )}\n                  </StyledHeroImgContainer>\n                  {asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n                    asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images\n                      .length > 1 &&\n                    ['lsp8', 'lsp4'].includes(asset.supportedInterface) && (\n                      <StyledOtherMediaContainer>\n                        {getOtherImgs &&\n                          getOtherImgs.length > 0 &&\n                          getOtherImgs?.map((item, i) =>\n                            item === undefined ? (\n                              <></>\n                            ) : (\n                              <StyledOtherImg key={i} src={item} />\n                            ),\n                          )}\n                      </StyledOtherMediaContainer>\n                    )}\n                  {asset.supportedInterface === 'lsp4' &&\n                    asset.lsp8MetaData[currentTokenId].LSP4Metadata.assets.map(\n                      (item) => {\n                        if (item.fileType === 'mp4') {\n                          return (\n                            <StyledVideo\n                              src={Utils.convertImageURL(item.url)}\n                              controls\n                            />\n                          );\n                        }\n                      },\n                    )}\n                  {['lsp8', 'erc721'].includes(asset.supportedInterface) &&\n                    (asset.lsp8MetaData[currentTokenId]?.animation_url ? (\n                      <StyledVideo\n                        src={Utils.convertImageURL(\n                          asset.lsp8MetaData[currentTokenId].animation_url,\n                        )}\n                        controls\n                      />\n                    ) : (\n                      <></>\n                    ))}\n                </StyledMediaContainer>\n                <StyledAssetDetailContainer>\n                  {isDesktop && renderContractDetailHeader}\n                  <StyledContractDescription>\n                    {asset.lsp8MetaData[0].description ||\n                      asset.lsp8MetaData[0].LSP4Metadata.description}\n                  </StyledContractDescription>\n                  {!isDesktop && <CardInfoAccordion asset={asset} />}\n                  {!isDesktop ? (\n                    <TabedAccordion\n                      tabs={[\n                        { name: 'Creators', content: renderCreators },\n                        { name: 'Owner', content: renderCurrentMintOwner },\n                        { name: 'Issuer', content: renderIssuer },\n                      ]}\n                    />\n                  ) : (\n                    <DesktopCreatorsAccordion\n                      creatorsContent={renderCreators}\n                      ownerContent={activeProfile && renderCurrentMintOwner}\n                      issuerContent={renderIssuer}\n                    />\n                  )}\n\n                  <StyledCardPropertiesAccordion\n                    header={\n                      <StyledAccordionTitle>Details</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardProperties>\n                      {renderCardProperties}\n                    </StyledCardProperties>\n                  </StyledCardPropertiesAccordion>\n                  {asset.supportedInterface === 'lsp8' && (\n                    <StyledCardPriceWrapper>\n                      <StyledCardPriceWrapperHeader>\n                        <StyledCardPriceLabel>Item Price</StyledCardPriceLabel>\n                      </StyledCardPriceWrapperHeader>\n\n                      {renderCardPrice}\n                    </StyledCardPriceWrapper>\n                  )}\n                  {isDesktop && <CardInfoAccordion asset={asset} />}\n                  {asset.supportedInterface === 'lsp8' && (\n                    <StyledMarketAccordion\n                      header={\n                        <StyledAccordionTitle>Market</StyledAccordionTitle>\n                      }\n                      enableToggle\n                    >\n                      {asset && (\n                        <CardMarket\n                          asset={asset}\n                          cardMarkets={asset?.markets}\n                          whiteListedTokens={asset?.whiteListedTokens}\n                        />\n                      )}\n                    </StyledMarketAccordion>\n                  )}\n                  {['lsp4', 'lsp8'].includes(asset.supportedInterface) && (\n                    <StyledHoldersAccordion\n                      header={\n                        <StyledAccordionTitle>\n                          Other Holders\n                        </StyledAccordionTitle>\n                      }\n                      enableToggle\n                    >\n                      {renderHolderPagination}\n                    </StyledHoldersAccordion>\n                  )}\n                </StyledAssetDetailContainer>\n              </StyledAssetDetailContent>\n            )\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useRemoveMarketForLsp8Token = (\n  cardAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [removingMarket, setRemovingMarket] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const removeMarket = async () => {\n    setRemovingMarket(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.removeMarketViaKeymanager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    } else {\n      await LSP3ProfileApi.removeMarket(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    }\n  };\n\n  return { removeMarket, removingMarket, error };\n};\n"],"sourceRoot":""}