{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","components/Accordion/styles.ts","components/Accordion/Accordion.tsx","pages/AssetDetails/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledProfileCard","styled","Link","demo","sm","StyledProfileDetailWrappar","div","StyledBalanceWrappar","StyledBalance","p","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","StyledAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledAccordionTitle","StyledAccordionToggleButton","button","StyledAccordiomToggleIcon","Accordion","title","children","enableToggle","useState","expand","setExpand","onClick","src","AccordionToggleIcon","alt","StyledAssetDetailsContentWrappar","StyledCardError","h1","StyledLoadingHolder","StyledLoader","Puff","StyledAssetDetailContent","xl","StyledCardMainDetails","StyledMediaWrapper","BgMetaCard","StyledMedia","StyledCardInfoWrapper","StyledCardPriceWrapper","StyledCardPriceWrapperHeader","StyledCardPriceLabel","StyledQuickActions","StyledReloadPriceAction","StyledActionIcon","StyledCardPriceValueWrapper","StyledTokenIcon","StyledCardPriceValue","StyledActionsButtonWrapper","StyledBuyButton","StyledMakeOfferButton","StyledCardInfoAccordion","StyledCardInfo","StyledCardInfoContainer","StyledCardInfoLabel","StyledCardInfoValue","StyledCardPropertiesAccordion","StyledCardProperties","lg","StyledCardPropertyContainer","StyledCardPropertyIconWrapper","StyledCardPropertyIcon","StyledCardProperty","StyledCardPropertyLabel","StyledCardPropertyValue","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","className","data-tip","tokenIds","data-for","length","polygon","makeBlockie","profileImage","name","AssetDetails","profiles","useSelector","state","selectUserIds","userData","selectCardById","owner","selectUserById","holders","selectAllUsersItems","filter","item","some","i","creators","cardError","cards","error","cardStatus","status","dispatch","useAppDispatch","a","id","LSP4DigitalAssetApi","getTokenSale","Number","fetchProfileByAddress","fetchCard","addresses","forEach","includes","push","fetchAssetHolders","fetchAssetCreator","useEffect","window","scrollTo","findBalanceOf","Fragment","getContent","dataTip","map","creator","holder","metaCardInfo","label","value","ls8MetaData","tierLabel","icon","TierPropertyIcon","edition","EditionPropertyIcon","editionCategory","CategoryPropertyIcon","editionSet","SetPropertyIcon","season","SeasonPropertyIcon","zoneLabel","ZonePropertyIcon","leagueLabel","SubzonePropertyIcon","teamLabel","TeamPropertyIcon","cardInfo","valueType","color","image","ReloadIcon","ShareIcon","OptionIcon","WethIcon","slice"],"mappings":"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","file":"static/js/6.42df6edc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\nimport { sm } from '../../../utility';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${sm} {\n    width: ${({ demo }) => (demo ? '212px' : '117px')};\n  }\n`;\n\nexport const StyledProfileDetailWrappar = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrappar = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: 400;\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import styled from 'styled-components';\nimport { md } from '../../utility';\n\nexport const StyledAccordionWrapper = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  height: 40px;\n`;\n\nexport const StyledAccordionTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionTitle,\n  StyledAccordionToggleButton,\n  StyledAccordionWrapper,\n} from './styles';\n\ninterface IProps {\n  title: string;\n  children: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const Accordion: React.FC<IProps> = ({\n  title,\n  children,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledAccordionWrapper $expanded={expand}>\n      <StyledAccordionHeader $expanded={expand}>\n        <StyledAccordionTitle>{title}</StyledAccordionTitle>\n        {enableToggle && (\n          <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n            <StyledAccordiomToggleIcon\n              $expanded={expand}\n              src={AccordionToggleIcon}\n              alt=\"\"\n            />\n          </StyledAccordionToggleButton>\n        )}\n      </StyledAccordionHeader>\n      {expand && children}\n    </StyledAccordionWrapper>\n  );\n};\n","import { Puff } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport { BgMetaCard } from '../../assets';\nimport { Accordion } from '../../components/Accordion';\nimport { lg, md, sm, xl } from '../../utility';\n\nexport const StyledAssetDetailsContentWrappar = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nexport const StyledCardError = styled.h1`\n  font-size: 30px;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledLoadingHolder = styled.div`\n  margin: auto;\n`;\n\nexport const StyledLoader = styled(Puff)`\n  margin: 0 auto 0 auto;\n  height: 400px;\n`;\n\nexport const StyledAssetDetailContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n\n  @media ${md} {\n    max-width: 1440px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 48px 40px 0 40px;\n  }\n\n  @media ${xl} {\n    padding: 48px 40px 0 40px;\n  }\n`;\n\n// export const StyledGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(2, 392px);\n//     margin: 0 auto 0 auto;\n//     column-gap: 20px;\n//   }\n\n//   @media ${xl} {\n//     grid-template-columns: 2fr 1fr;\n//     column-gap: 10px;\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledAssetDetailGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n//   column-gap: 10px;\n//   row-gap: 20px;\n\n//   @media ${xl} {\n//     grid-template-columns: repeat(2, 1fr);\n//   }\n// `;\n\n// export const StyledMediaWrappar = styled.div`\n//   position: relative;\n//   background: url(${BgMetaCard});\n//   background-position: center;\n//   background-repeat: no-repeat;\n//   background-size: cover;\n//   display: flex;\n//   height: 473px;\n\n//   @media ${sm} {\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//   }\n// `;\n\n// export const StyledMetaCardImg = styled.img`\n//   width: 221px;\n//   margin: auto;\n// `;\n\n// export const StyledStatsName = styled.h1`\n//   position: absolute;\n//   left: 5%;\n//   margin-top: 10px;\n//   font-size: 24px;\n//   font-weight: 700;\n// `;\n\n// export const StyledUniversalProfileIcon = styled.img`\n//   position: absolute;\n//   width: 44px;\n//   height: 44px;\n//   bottom: 5%;\n//   left: 10%;\n//   animation: ${pulseAnimate} 2s ease-in-out infinite;\n// `;\n\n// export const StyledBlockScoutIcon = styled.img`\n//   position: absolute;\n//   width: 44px;\n//   height: 44px;\n//   bottom: 5%;\n//   right: 10%;\n//   animation: ${pulseAnimate} 2s ease-in-out infinite;\n// `;\n\n// export const StyledDetailsWrappar = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 10px 0px 0px 0px;\n\n//   @media ${sm} {\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     min-height: 473px;\n//   }\n// `;\n\n// export const StyledCardInfoLabel = styled.h2`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin: 0 8px 10px 8px;\n//   border-width: 0 0 1px 0;\n//   border-style: solid;\n//   border-color: white;\n//   padding-bottom: 5px;\n\n//   @media ${sm} {\n//     margin: 0 20px 5px 20px;\n//   }\n// `;\n\n// export const StyledInfoGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 35% 1fr;\n//   padding: 0 8px 5px 8px;\n//   row-gap: 10px;\n\n//   @media ${sm} {\n//     padding: 0 20px 0 20px;\n//   }\n// `;\n\nexport const StyledLabel = styled.p`\n  font-size: 15px;\n`;\n\n// export const StyledValue = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   text-transform: capitalize;\n// `;\n\n// export const StyledFullName = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   margin: 0 10px 0 10px;\n//   padding: 15px 0 15px 0;\n//   border-width: 2px 0 2px 0;\n//   border-style: solid;\n//   border-color: rgba(255, 255, 255, 0.25);\n//   line-height: 17px;\n\n//   @media ${sm} {\n//     margin: 0;\n//     padding: 15px 20px 15px 20px;\n//     border-width: 2px 0 0 0;\n//     margin-top: auto;\n//   }\n// `;\n\n// export const StyledExtraInfo = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   height: max-content;\n//   padding: 0 8px 0 8px;\n//   margin-top: 20px;\n\n//   @media ${sm} {\n//     padding: 0;\n//   }\n\n//   @media ${lg} {\n//     margin: 0;\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     padding: 15px 10px 15px 10px;\n//   }\n// `;\n\n// export const StyledIssuerLabel = styled.h3`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin-bottom: 10px;\n\n//   @media ${lg} {\n//     width: 116px;\n//     border-width: 0 0 1px 0;\n//     border-style: solid;\n//     border-color: rgba(223, 223, 223, 1);\n//   }\n// `;\n\n// export const StyledCreatorLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n// `;\n\n// export const StyledHolderLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n//   margin-left: 8px;\n//   border: none;\n\n//   @media ${sm} {\n//     margin-left: 48px;\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledIssuerWrappar = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   justify-items: center;\n//   column-gap: 5px;\n//   row-gap: 10px;\n//   /*\n//     @media ${sm} {\n//         grid-template-columns: repeat(3, 1fr);\n//     } */\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(3, 1fr);\n//   }\n// `;\n\n// export const StyledCreatorWrappar = styled(StyledIssuerWrappar)``;\n\n// export const StyledHolderWrappar = styled(StyledIssuerWrappar)`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   margin: 0 8px 0 8px;\n//   justify-items: center;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(5, 1fr);\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//     grid-template-columns: repeat(6, 1fr);\n//   }\n// `;\n\n// Re designed styled components\n\nexport const StyledCardMainDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 20px;\n    height: 590px;\n  }\n`;\n\nexport const StyledMediaWrapper = styled.div`\n  display: flex;\n  background: url(${BgMetaCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 445px;\n\n  @media ${md} {\n    width: 50%;\n    border-radius: 10px;\n    border: 1px solid rgba(255, 255, 255, 0.25);\n    height: 100%;\n  }\n`;\n\nexport const StyledMedia = styled.img`\n  width: 230px;\n  margin: auto;\n`;\n\nexport const StyledCardInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    width: 50%;\n    row-gap: 20px;\n  }\n`;\n\nexport const StyledCardPriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  row-gap: 10px;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 98.49%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledCardPriceWrapperHeader = styled.div`\n  display: flex;\n`;\n\nexport const StyledCardPriceLabel = styled.p``;\n\nexport const StyledQuickActions = styled.div`\n  display: grid;\n  width: 110px;\n  height: 30px;\n  grid-template-columns: repeat(3, 1fr);\n  margin-left: auto;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n`;\n\nexport const StyledReloadPriceAction = styled.button`\n  display: flex;\n  border-right: 1px solid rgba(255, 255, 255, 0.15);\n`;\n\nexport const StyledShareCardAction = styled(StyledReloadPriceAction)``;\n\nexport const StyledOptionAction = styled(StyledReloadPriceAction)`\n  border-right: none;\n`;\n\nexport const StyledActionIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledCardPriceValueWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledTokenIcon = styled.img``;\n\nexport const StyledCardPriceValue = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledActionsButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 10px;\n  }\n`;\n\nexport const StyledBuyButton = styled.button`\n  width: 100%;\n  background: rgba(255, 129, 1, 1);\n  border-radius: 5px;\n  padding: 7px 0;\n\n  @media ${md} {\n    width: 50%;\n  }\n`;\n\nexport const StyledMakeOfferButton = styled(StyledBuyButton)`\n  background: rgba(255, 255, 255, 0.2);\n`;\n\nexport const StyledCardInfoAccordion = styled(Accordion)``;\n\nexport const StyledCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledCardInfoContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: auto 0;\n`;\n\nexport const StyledCardInfoLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n  width: 50%;\n`;\n\nexport const StyledCardInfoValue = styled.p`\n  width: 50%;\n`;\n\nexport const StyledCardPropertiesAccordion = styled(Accordion)``;\n\nexport const StyledCardProperties = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  row-gap: 20px;\n  padding: 20px 0;\n\n  @media ${sm} {\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 20px;\n  }\n\n  @media ${md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media ${lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport const StyledCardPropertyContainer = styled.div`\n  display: flex;\n  padding: 15px 20px;\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.06);\n  column-gap: 10px;\n`;\n\nexport const StyledCardPropertyIconWrapper = styled.div`\n  display: flex;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  height: 50px;\n  width: 50px;\n`;\n\nexport const StyledCardPropertyIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledCardProperty = styled.div``;\n\nexport const StyledCardPropertyLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n`;\n\nexport const StyledCardPropertyValue = styled.p``;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrappar,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrappar,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      className=\"animate-cardrender\"\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrappar demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrappar>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrappar demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrappar>\n    </StyledProfileCard>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport {\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  WethIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport { fetchCard, selectCardById } from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchAssetHolders,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport { IProfile } from '../../services/models';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrappar,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledTokenIcon,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledMakeOfferButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { getChainExplorer } from '../../utility';\nimport ReactTooltip from 'react-tooltip';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { useSigner } from 'wagmi';\nimport { Accordion } from '../../components/Accordion';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const params = useParams<IPrams>();\n\n  const profiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  })?.filter((item) => {\n    return asset?.holders.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const dispatch = useAppDispatch();\n\n  const tokenIdForSale = useMemo(\n    async () =>\n      params.id &&\n      (await LSP4DigitalAssetApi.getTokenSale(\n        params.add,\n        Number(params.id),\n        params.network,\n      )),\n    [params.add, params.network, params.id],\n  );\n\n  useMemo(() => {\n    if (!owner && asset) {\n      dispatch(\n        fetchProfileByAddress({\n          address: asset.owner,\n          network: params.network,\n        }),\n      );\n    }\n  }, [asset, dispatch, owner, params.network]);\n\n  useMemo(() => {\n    if (!asset) {\n      dispatch(fetchCard({ address: params.add, network: params.network }));\n    }\n  }, [asset, dispatch, params.add, params.network]);\n\n  useMemo(() => {\n    let addresses: string[] = [];\n    asset?.holders.forEach((item) => {\n      if (!profiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetHolders({ address: addresses, network: params.network }),\n      );\n    }\n  }, [asset?.holders, dispatch, params.network, profiles]);\n\n  useMemo(() => {\n    let addresses: string[] = [];\n    asset?.creators.forEach((item) => {\n      if (!profiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n  }, [asset?.creators, dispatch, params.network, profiles]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [params.add, params.network]);\n\n  const renderOwner = useMemo(() => {\n    if (asset?.address === params.add) {\n      if (owner?.address === asset.owner) {\n        const findBalanceOf = owner.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={owner.address}>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }\n    }\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderDesigners = useMemo(\n    () =>\n      creators?.map((creator: IProfile) => {\n        const findBalanceOf = creator.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={creator.address}>\n            <ProfileCard\n              userProfile={creator}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"creator\"\n              tooltipId=\"designerTooltip\"\n            />\n            <ReactTooltip\n              id=\"designerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }),\n    [creators, params.add],\n  );\n\n  const renderHolders = useMemo(\n    () =>\n      holders?.map((holder: IProfile) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={holder.address}>\n            <ProfileCard\n              userProfile={holder}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  const metaCardInfo = [\n    // { text: 'Name', data: asset?.name.split('•')[0] },\n    // { text: 'Card Type', data: asset?.ls8MetaData.cardType },\n    {\n      label: 'Tier',\n      value: asset?.ls8MetaData.tierLabel,\n      icon: TierPropertyIcon,\n    },\n    {\n      label: 'Edition',\n      value: asset?.ls8MetaData.edition,\n      icon: EditionPropertyIcon,\n    },\n    {\n      label: 'Category',\n      value: asset?.ls8MetaData.editionCategory,\n      icon: CategoryPropertyIcon,\n    },\n    {\n      label: 'Set',\n      value: asset?.ls8MetaData.editionSet,\n      icon: SetPropertyIcon,\n    },\n    {\n      label: 'Season',\n      value: asset?.ls8MetaData.season,\n      icon: SeasonPropertyIcon,\n    },\n    {\n      label: 'Zone',\n      value: asset?.ls8MetaData.zoneLabel,\n      icon: ZonePropertyIcon,\n    },\n    {\n      label: 'League',\n      value: asset?.ls8MetaData.leagueLabel,\n      icon: SubzonePropertyIcon,\n    },\n    {\n      label: 'Team',\n      value: asset?.ls8MetaData.teamLabel,\n      icon: TeamPropertyIcon,\n    },\n  ];\n\n  const cardInfo: { label: string; value: string; valueType?: string }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    { label: 'Mint', value: '' },\n    { label: 'Total amount of Tokens', value: '' },\n    { label: 'Token Standard', value: '' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    { label: 'Current owner', value: '', valueType: 'address' },\n  ];\n\n  // const renderCardProperties = useMemo(() => {\n  //   const keys = asset && Object.keys(asset && asset.ls8MetaData);\n  //   if (\n  //     keys &&\n  //     keys.includes('attributes') &&\n  //     asset &&\n  //     asset.ls8MetaData.attributes.length > 0\n  //   ) {\n  //     return asset.ls8MetaData.attributes.map((attribute: any, i) => (\n  //       <React.Fragment key={i}>\n  //         <StyledLabel>{attribute.trait_type}</StyledLabel>\n  //         {Object.keys(attribute).includes('max_value') ? (\n  //           <StyledValue>\n  //             {attribute.value} of {attribute.max_value}\n  //           </StyledValue>\n  //         ) : (\n  //           <StyledValue>{attribute.value}</StyledValue>\n  //         )}\n  //       </React.Fragment>\n  //     ));\n  //   } else {\n  //     return metaCardInfo.map((items, i) => (\n  //       <React.Fragment key={i}>\n  //         <StyledLabel>{items.text}</StyledLabel>\n  //         <StyledValue>{items.data}</StyledValue>\n  //       </React.Fragment>\n  //     ));\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [asset]);\n\n  return (\n    <StyledAssetDetailsContentWrappar>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  <StyledMedia src={asset?.ls8MetaData.image} alt=\"\" />\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    <StyledCardPriceValueWrapper>\n                      <StyledTokenIcon src={WethIcon} alt=\"\" />\n                      <StyledCardPriceValue>\n                        11.5 ($35,023.25)\n                      </StyledCardPriceValue>\n                    </StyledCardPriceValueWrapper>\n                    <StyledActionsButtonWrapper>\n                      <StyledBuyButton>Buy now</StyledBuyButton>\n                      <StyledMakeOfferButton>Make offer</StyledMakeOfferButton>\n                    </StyledActionsButtonWrapper>\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion title=\"Card Info\" enableToggle>\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              <StyledCardPropertiesAccordion title=\"Details\" enableToggle>\n                <StyledCardProperties>\n                  {metaCardInfo.map((item) => (\n                    <StyledCardPropertyContainer>\n                      <StyledCardPropertyIconWrapper>\n                        <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n                      </StyledCardPropertyIconWrapper>\n                      <StyledCardProperty>\n                        <StyledCardPropertyLabel>\n                          {item.label}\n                        </StyledCardPropertyLabel>\n                        <StyledCardPropertyValue>\n                          {item.value}\n                        </StyledCardPropertyValue>\n                      </StyledCardProperty>\n                    </StyledCardPropertyContainer>\n                  ))}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              {/* <StyledGrid>\n                <StyledAssetDetailGrid>\n                  <StyledMediaWrappar>\n                    {params.network === 'l14' && (\n                      <a\n                        href={\n                          'https://universalprofile.cloud/asset/' +\n                          asset?.address\n                        }\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <StyledUniversalProfileIcon\n                          src={UniversalProfileIcon}\n                          alt=\"\"\n                        />\n                      </a>\n                    )}\n                    <a\n                      href={explorer && explorer.exploreUrl + asset?.address}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <StyledBlockScoutIcon src={explorer?.icon} alt=\"\" />\n                    </a>\n                    <StyledStatsName>{metaCardInfo[0].data}</StyledStatsName>\n                    <StyledMetaCardImg src={asset?.ls8MetaData.image} alt=\"\" />\n                  </StyledMediaWrappar>\n                  <StyledDetailsWrappar>\n                    <StyledCardInfoLabel>Card Info</StyledCardInfoLabel>\n                    <StyledInfoGrid>{renderCardProperties}</StyledInfoGrid>\n                    <StyledFullName>{asset?.name}</StyledFullName>\n                  </StyledDetailsWrappar>\n                </StyledAssetDetailGrid>\n                <StyledExtraInfo>\n                  <StyledIssuerLabel>Issuer</StyledIssuerLabel>\n                  <StyledIssuerWrappar>{renderOwner}</StyledIssuerWrappar>\n                  <StyledCreatorLabel>Creator</StyledCreatorLabel>\n                  <StyledCreatorWrappar>{renderDesigners}</StyledCreatorWrappar>\n                </StyledExtraInfo>\n              </StyledGrid>\n              <StyledHolderLabel>Holder</StyledHolderLabel>\n              <StyledHolderWrappar>{renderHolders}</StyledHolderWrappar> */}\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrappar>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}