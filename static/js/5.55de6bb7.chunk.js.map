{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/useTransferLsp8Token/useTransferLsp8Token.ts","hooks/usePagination/usePagination.ts","utility/permissions.ts","components/InputField/styles.ts","components/InputField/InputField.tsx","components/ModalOverlay/styles.ts","components/ModalOverlay/ModalOverlay.tsx","hooks/useSellBuyLsp8Token/useSellBuyLsp8Token.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useUrlParams/useUrlParams.ts","hooks/useErc20/useErc20.ts","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","useTransferLsp8Token","cardAddress","toAddress","tokenId","profile","callback","useState","transfering","setTransfering","error","setError","useSigner","signer","data","transferCard","a","isOwnerKeyManager","KeyManagerApi","transferCardViaKeyManager","owner","then","catch","finally","LSP3ProfileApi","transferCardViaUniversalProfile","usePagination","range","setRange","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","InputField","label","changeHandler","step","onChange","StyledModalOverlay","StyledModal","StyledCloseModalButton","button","StyledCloseButtonIcon","ModalOverlay","children","onClose","modalRef","useRef","useOutsideClick","ref","onClick","CloseIcon","useSellBuyLsp8Token","useAccount","buyFromMarket","amount","universalProfileAddress","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","buyFromCardMarketViaKeyManager","LSP4DigitalAssetApi","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","setForSale","ownerProfile","mint","tokenAddress","decimals","setCardMarketViaKeyManager","convertPrice","setMarketViaUniversalProfile","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","price","slice","toString","StyledBuyCardModalContent","StyledModalHeader","StyledInfoText","StyledToggleButtonGroup","StyledToggleButton","$active","StyledButtonGroup","StyledBuyButton","StyledCancelButton","StyledApproveButton","BuyCardModal","whiteListedTokens","useUrlParams","approve","account","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","spenderAddress","buyer","checkBalanceOf","checkAllowance","allowance","approveTokenViaKeyManager","approveTokenViaUniversalProfile","ownerAddress","balanceOf","useErc20","upAddress","setUpAddress","toggleEOABuy","setToggleEOABuy","marketToken","i","displayPrice","event","currentTarget","value","undefined","symbol","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","select","StyledSetPriceButton","SellCardModal","marketTokenAddress","sellForm","setSellForm","selectedTokenDecimals","selectedToken","item","marketTokenDecimals","useEffect","map","disabled","StyledTabsHeader","StyledTabsLabel","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","content","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","STATUS","LOADING","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","status","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","setExpand","AccordionToggleIcon","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","StyledCardMarketBuy","CardMarket","cardMarkets","onBuyClick","findDecimals","findSymbol","market","Number","minimumAmount","acceptedToken","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","ownerStatus","creators","cardError","cards","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","currentIndex","setCurrentIndex","openBuyModal","setOpenBuyModal","openSellModal","setOpenSellModal","selectedMarketTokenId","setSelectedMarketTokenId","ownedTokenIds","IDLE","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","indexOf","push","ls8MetaData","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","marketsForOwnedTokens","markets","currentMintMarket","token","selectedMintMarket","cardInfo","valueType","totalSupply","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","color","image","href","exploreUrl","target","rel","previousIndex","BackwardsIcon","nextIndex","ForwardsIcon","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.55de6bb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [transfering, setTransfering] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const transferCard = async () => {\n    setTransfering(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    }\n  };\n\n  return { transferCard, transfering, error };\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const InputField = ({ name, label, type, changeHandler }: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n      />\n    </StyledInputContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const StyledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(49, 49, 49, 1);\n  border: 1px solid rgba(170, 170, 170, 1);\n  margin: auto;\n  padding: 1.5em 1em;\n  width: 100%;\n  max-width: 25em;\n`;\n\nexport const StyledCloseModalButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 1em 1em 0 0;\n`;\n\nexport const StyledCloseButtonIcon = styled.img``;\n","import React, { ReactNode, useRef } from 'react';\nimport { CloseIcon } from '../../assets';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport {\n  StyledCloseButtonIcon,\n  StyledCloseModalButton,\n  StyledModal,\n  StyledModalOverlay,\n} from './styles';\n\ninterface IProps {\n  children: ReactNode;\n  onClose: () => void;\n}\n\nexport const ModalOverlay: React.FC<IProps> = ({ children, onClose }) => {\n  const modalRef = useRef(null);\n  useOutsideClick(modalRef, onClose);\n  return (\n    <StyledModalOverlay>\n      <StyledModal ref={modalRef}>\n        <StyledCloseModalButton onClick={onClose}>\n          <StyledCloseButtonIcon src={CloseIcon} alt=\"\" />\n        </StyledCloseModalButton>\n        {children}\n      </StyledModal>\n    </StyledModalOverlay>\n  );\n};\n","import { BigNumber, BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice } from '../../utility';\n\nexport const useSellBuyLsp8Token = (\n  assetAddress: string,\n  network: NetworkName,\n) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [{ data: account }] = useAccount();\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n  };\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n  ) => {\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n  };\n\n  return { buyFromMarket, setForSale };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledToggleButtonGroup = styled.div`\n  border-radius: 0.5em;\n  width: max-content;\n  border: 1px solid rgba(153, 153, 153, 1);\n  margin: 0 auto;\n\n  button {\n    border-right: 1px solid rgba(153, 153, 153, 1);\n\n    :first-child {\n      border-radius: 0.4em 0 0 0.4em;\n    }\n\n    :last-child {\n      border-right: none;\n      border-radius: 0 0.4em 0.4em 0;\n    }\n  }\n`;\n\nexport const StyledToggleButton = styled.button<{ $active: boolean }>`\n  padding: 0.5em;\n  color: ${({ $active }) => ($active ? 'rgba(255, 129, 1, 1)' : 'white')};\n  background-color: ${({ $active }) =>\n    $active ? 'rgba(255, 255, 255, 0.2)' : ''};\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n\nexport const StyledApproveButton = styled(StyledCancelButton)``;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { InputField } from '../../../components/InputField';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\nimport { useUrlParams } from '../../../hooks/useUrlParams';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { convertPrice, displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledApproveButton,\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledCancelButton,\n  StyledInfoText,\n  StyledModalHeader,\n  StyledToggleButton,\n  StyledToggleButtonGroup,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n}: IProps) => {\n  const { network } = useUrlParams();\n  const { approve } = useErc20({ tokenAddress, network });\n  const { buyFromMarket } = useSellBuyLsp8Token(address, network);\n  const [upAddress, setUpAddress] = useState<string>('');\n  const [toggleEOABuy, setToggleEOABuy] = useState<boolean>(false);\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUpAddress(event.currentTarget.value);\n  };\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledBuyCardModalContent>\n        <StyledModalHeader>BUY CARD</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n          cardImg={cardImg}\n        />\n        <StyledToggleButtonGroup>\n          <StyledToggleButton\n            $active={!toggleEOABuy}\n            onClick={() => setToggleEOABuy(false)}\n          >\n            With UP\n          </StyledToggleButton>\n          <StyledToggleButton\n            $active={toggleEOABuy}\n            onClick={() => setToggleEOABuy(true)}\n          >\n            With EOA\n          </StyledToggleButton>\n        </StyledToggleButtonGroup>\n        {!toggleEOABuy && (\n          <InputField\n            name=\"universalProfileAddress\"\n            label=\"UP Address\"\n            type=\"text\"\n            changeHandler={changeHandler}\n          />\n        )}\n        <StyledApproveButton\n          onClick={async () =>\n            await approve(\n              address,\n              price,\n              network,\n              !toggleEOABuy ? upAddress : undefined,\n            )\n          }\n        >\n          Check balance & Approve\n        </StyledApproveButton>\n        <StyledInfoText>\n          Do you confirm the purchase of this card mint for{' '}\n          {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n          {marketToken ? marketToken.symbol : ''}?\n        </StyledInfoText>\n        <StyledButtonGroup>\n          <StyledBuyButton\n            onClick={async () =>\n              await buyFromMarket(\n                address,\n                price,\n                mint,\n                !toggleEOABuy ? upAddress : undefined,\n              )\n            }\n          >\n            Buy\n          </StyledBuyButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledBuyCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [error, setError] = useState();\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n\n    const balance = await checkBalanceOf(buyer);\n\n    const allowance =\n      balance >= amount && (await checkAllowance(buyer, spenderAddress));\n    if (allowance && allowance >= amount) {\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    } else {\n      await erc20Contract.approve(spenderAddress, amount);\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../../boot/types';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledCancelButton,\n  StyledInputGroup,\n  StyledModalHeader,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale } = useSellBuyLsp8Token(address, params.network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  useEffect(() => {}, []);\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledSellCardModalContent>\n        <StyledModalHeader>SET CARD FOR SALE</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={\n            price &&\n            displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n          }\n          cardImg={cardImg}\n        />\n        {whiteListedTokens && (\n          <StyledInputGroup>\n            <InputField\n              name=\"amount\"\n              label=\"Your Price\"\n              type=\"number\"\n              changeHandler={changeHandler}\n            />\n            <StyledTokenSelectorDropDown\n              name=\"tokenAddress\"\n              onChange={changeHandler}\n            >\n              <option>Token</option>\n              {whiteListedTokens?.map((item, i) => (\n                <option key={i} value={item.tokenAddress}>\n                  {item.symbol}\n                </option>\n              ))}\n            </StyledTokenSelectorDropDown>\n          </StyledInputGroup>\n        )}\n        <StyledButtonGroup>\n          <StyledSetPriceButton\n            onClick={() =>\n              setForSale(\n                address,\n                ownerProfile,\n                mint,\n                sellForm.tokenAddress,\n                sellForm.amount,\n                selectedTokenDecimals,\n              )\n            }\n            disabled={!whiteListedTokens || whiteListedTokens?.length === 0}\n          >\n            Set for sale\n          </StyledSetPriceButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledSellCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      {ownerContent && (\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Owner</StyledHeaderTitle>\n          </StyledHeader>\n          {ownerContent}\n        </StyledIssuerContainer>\n      )}\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledCardMarket,\n  StyledCardMarketBuy,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset?: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n  onBuyClick: (tokenId: number) => void;\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n  onBuyClick,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy>\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { BuyCardModal } from './BuyCardModal';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const history = useHistory();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [openBuyModal, setOpenBuyModal] = useState<boolean>(false);\n  const [openSellModal, setOpenSellModal] = useState<boolean>(false);\n  const [selectedMarketTokenId, setSelectedMarketTokenId] = useState<\n    number | null\n  >(null);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const dispatch = useAppDispatch();\n\n  const { transferCard } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    ownedTokenIds ? ownedTokenIds[currentIndex] : 0,\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset?.markets.find(\n      (item) => Number(item.tokenId) === selectedMarketTokenId,\n    );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, selectedMarketTokenId]);\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledBuyButton\n              onClick={() => {\n                setOpenBuyModal(!openBuyModal);\n                setSelectedMarketTokenId(Number(currentMintMarket.tokenId));\n              }}\n            >\n              Buy now\n            </StyledBuyButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              Transfer to metamask account\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton>Withdraw from sale</StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              Transfer to metamask account\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentMintMarket,\n    currentUsersPermissionsSet,\n    openBuyModal,\n    openSellModal,\n    ownedTokenIds,\n    transferCard,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              {openBuyModal && asset && selectedMintMarket && (\n                <BuyCardModal\n                  address={params.add}\n                  mint={Number(selectedMintMarket.tokenId)}\n                  price={selectedMintMarket.minimumAmount}\n                  tokenAddress={selectedMintMarket.acceptedToken}\n                  whiteListedTokens={asset.whiteListedTokens}\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n                  onClose={() => {\n                    setOpenBuyModal(!openBuyModal);\n                    setSelectedMarketTokenId(null);\n                  }}\n                />\n              )}\n              {openSellModal && asset && ownedTokenIds && activeProfile && (\n                <SellCardModal\n                  ownerProfile={activeProfile}\n                  address={params.add}\n                  mint={ownedTokenIds[currentIndex]}\n                  price={\n                    currentMintMarket\n                      ? currentMintMarket.minimumAmount\n                      : undefined\n                  }\n                  marketTokenAddress={\n                    currentMintMarket\n                      ? currentMintMarket.acceptedToken\n                      : undefined\n                  }\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0].image}\n                  onClose={() => setOpenSellModal(!openSellModal)}\n                  whiteListedTokens={asset.whiteListedTokens}\n                />\n              )}\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <StyledMintControls>\n                      <StyledMintSkipButton onClick={previousMint}>\n                        <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                      <StyledMintSliderIndex>\n                        {currentIndex + 1}/{ownedTokenIds?.length}\n                      </StyledMintSliderIndex>\n                      <StyledMintSkipButton onClick={nextMint}>\n                        <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                    </StyledMintControls>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Owner', content: renderCurrentMintOwner },\n                    { name: 'Issuer', content: renderIssuer },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  ownerContent={activeProfile && renderCurrentMintOwner}\n                  issuerContent={renderIssuer}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                <CardMarket\n                  asset={asset}\n                  cardMarkets={asset?.markets}\n                  whiteListedTokens={asset?.whiteListedTokens}\n                  onBuyClick={(tokenId: number) => {\n                    setSelectedMarketTokenId(tokenId);\n                    setOpenBuyModal(true);\n                  }}\n                />\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}