{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/usePagination/usePagination.ts","utility/permissions.ts","components/InputField/styles.ts","components/InputField/InputField.tsx","components/ModalOverlay/styles.ts","components/ModalOverlay/ModalOverlay.tsx","hooks/useSellBuyLsp8Token/useSellBuyLsp8Token.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useUrlParams/useUrlParams.ts","hooks/useErc20/useErc20.ts","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","usePagination","useState","range","setRange","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","InputField","label","changeHandler","step","onChange","StyledModalOverlay","StyledModal","StyledCloseModalButton","button","StyledCloseButtonIcon","ModalOverlay","children","onClose","modalRef","useRef","useOutsideClick","ref","onClick","CloseIcon","useSellBuyLsp8Token","useSigner","signer","data","useAccount","buyFromMarket","amount","tokenId","universalProfileAddress","a","LSP3ProfileApi","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","owner","checkKeyManager","KeyManagerApi","buyFromCardMarketViaKeyManager","LSP4DigitalAssetApi","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","setForSale","ownerProfile","mint","tokenAddress","decimals","isOwnerKeyManager","setCardMarketViaKeyManager","convertPrice","setMarketViaUniversalProfile","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","price","slice","toString","StyledBuyCardModalContent","StyledModalHeader","StyledInfoText","StyledToggleButtonGroup","StyledToggleButton","$active","StyledButtonGroup","StyledBuyButton","StyledCancelButton","StyledApproveButton","BuyCardModal","whiteListedTokens","useUrlParams","approve","account","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","spenderAddress","buyer","checkBalanceOf","checkAllowance","allowance","approveTokenViaKeyManager","approveTokenViaUniversalProfile","ownerAddress","balanceOf","useErc20","upAddress","setUpAddress","toggleEOABuy","setToggleEOABuy","marketToken","i","displayPrice","event","currentTarget","value","undefined","symbol","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","select","StyledSetPriceButton","SellCardModal","marketTokenAddress","sellForm","setSellForm","selectedTokenDecimals","selectedToken","item","marketTokenDecimals","useEffect","map","disabled","StyledTabsHeader","StyledTabsLabel","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","content","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","STATUS","LOADING","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","status","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","setExpand","AccordionToggleIcon","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","StyledCardMarketBuy","CardMarket","cardMarkets","onBuyClick","findDecimals","findSymbol","market","Number","minimumAmount","acceptedToken","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","ownerStatus","creators","cardError","cards","error","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","currentIndex","setCurrentIndex","openBuyModal","setOpenBuyModal","openSellModal","setOpenSellModal","selectedMarketTokenId","setSelectedMarketTokenId","ownedTokenIds","IDLE","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","indexOf","ls8MetaData","fetchMetaDataForTokenId","addresses","forEach","includes","push","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","marketsForOwnedTokens","markets","currentMintMarket","token","selectedMintMarket","cardInfo","valueType","totalSupply","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","color","image","href","exploreUrl","target","rel","previousIndex","BackwardsIcon","nextIndex","ForwardsIcon","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"uGAAe,QAA0B,qC,mdCI5BA,EAAoBC,YAAOC,IAAPD,CAAH,iUACf,qBAAGE,MAAkBC,UAAUC,cACnC,qBAAGC,KAAmB,QAAU,WAUhC,qBAAGH,MAAkBI,OAAOC,MAM1BC,EAA6BR,IAAOS,IAAV,uLAG3B,qBAAGJ,KAAmB,OAAS,UAM9BK,EAAuBV,IAAOS,IAAV,2JAEtB,qBAAGJ,KAAmB,OAAS,UAI1B,qBAAGA,KAAmB,OAAS,UAC7B,qBAAGA,KAAmB,OAAS,SAGpCM,EAAgBX,IAAOY,EAAV,qFACX,qBAAGP,KAAmB,OAAS,SAC7B,qBAAGH,MAAkBW,KAAKC,OAAOC,WAIrCC,EAAgBhB,IAAOiB,IAAV,yIAGV,qBAAGZ,KAAmB,OAAS,SAC7B,qBAAGA,KAAmB,OAAS,SACtC,qBAAGA,KAAmB,OAAS,UAI7Ba,EAAsBlB,IAAOS,IAAV,yEAKnBU,EAAoBnB,IAAOoB,GAAV,6IACf,qBAAGf,KAAmB,OAAS,UAC7B,qBAAGH,MAAkBW,KAAKC,OAAOO,UAMrCC,EAAoBtB,IAAOY,EAAV,mEAKjBW,EAAqBvB,IAAOS,IAAV,yPACXe,KAOR,qBAAGnB,KAAmB,QAAU,WAI/BoB,EAAuBzB,IAAOiB,IAAV,yPACtB,qBAAGZ,KAAmB,QAAU,UAC/B,qBAAGA,KAAmB,QAAU,UAQjC,qBAAGH,MAAkBI,OAAOC,MACzB,qBAAGF,KAAmB,QAAU,UACjC,qBAAGA,KAAmB,QAAU,UAIhCqB,EAAmB1B,IAAOiB,IAAV,oLACjB,qBAAGZ,KAAmB,QAAU,UACjC,qBAAGA,KAAmB,QAAU,UAKhC,qBAAGH,MAAkBI,OAAOC,MAC1B,qBAAGF,KAAmB,QAAU,UAC/B,qBAAGA,KAAmB,QAAU,W,wJC9EjCsB,EAAgC,SAAC,GAK/B,IAJbC,EAIY,EAJZA,YACAC,EAGY,EAHZA,QACAC,EAEY,EAFZA,KACAC,EACY,EADZA,UAEMC,EAASC,cACTC,EAAqBC,mBACzB,iBACW,SAATL,GACAF,EAAYQ,YAAYC,MACtB,SAACC,GAAD,OACEA,EAAMC,aAAaC,gBAAkBR,EAAOS,IAAID,mBAEtD,CAACR,EAAOS,IAAKX,EAAMF,EAAYQ,cAGjC,OACE,eAAC,IAAD,CACEM,GACE,WAAIV,EAAOW,QAAX,aACAC,IAAKC,MAAMC,kBAAkBlB,EAAYmB,SAE3C1C,KAAe,SAATyB,EACNkB,WACW,SAATlB,GAAmBI,GAAsBA,EAAmBe,SAE9DC,WAAUnB,EATZ,UAWE,cAAC,IAAD,CAAsB1B,KAAe,SAATyB,EAA5B,SACE,cAAC,IAAD,CAAezB,KAAe,SAATyB,EAArB,SACY,SAATA,EAAkBF,EAAYQ,YAAYe,OAAStB,MAGxD,cAAC,IAAD,CACEuB,IAAKC,IACLC,IAAI,GACJjD,KAAe,SAATyB,IAER,eAAC,IAAD,CAAoBzB,KAAe,SAATyB,EAA1B,UACE,cAAC,IAAD,CACEsB,IAAKG,IAAY3B,EAAYmB,SAC7BO,IAAI,GACJjD,KAAe,SAATyB,IAER,cAAC,IAAD,CACEsB,IAAKxB,EAAY4B,aACjBF,IAAI,GACJjD,KAAe,SAATyB,OAGV,cAAC,IAAD,CAA4BzB,KAAe,SAATyB,EAAlC,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAmBzB,KAAe,SAATyB,EAAzB,UACG,IADH,IAEIF,EAAY6B,KAAM,OAEtB,cAAC,IAAD,qC,uFCxFGC,EAAgB,WAC3B,MAA0BC,mBAA2B,CAAC,EAAG,IAAzD,mBAEA,MAAO,CACLC,MAHF,KAIEC,SAJF,Q,kCCAF,kCAAO,IAAMC,EAA0C,SACrDC,EACAC,GAEA,OAAOD,EAAc1B,MACnB,SAAC4B,GAAD,OACEA,EAAElB,QAAQP,gBAAkBwB,EAAexB,eAAiByB,EAAEC,iB,sSCPvDC,GAAuBnE,KAAOS,IAAV,sFAMpB2D,GAAmBpE,KAAOY,EAAV,2MAShByD,GAAmBrE,KAAOsE,MAAV,6M,SCJhBC,GAAa,SAAC,GAAkD,IAAhDd,EAA+C,EAA/CA,KAAMe,EAAyC,EAAzCA,MAAO1C,EAAkC,EAAlCA,KAAM2C,EAA4B,EAA5BA,cAC9C,OACE,gBAACN,GAAD,WACE,eAACC,GAAD,UAAmBI,IACnB,eAACH,GAAD,CACEZ,KAAMA,EACN3B,KAAMA,EACN4C,KAAK,MACLC,SAAUF,Q,UCnBLG,GAAqB5E,KAAOS,IAAV,gLAWlBoE,GAAc7E,KAAOS,IAAV,4RAaXqE,GAAyB9E,KAAO+E,OAAV,oGAOtBC,GAAwBhF,KAAOiB,IAAV,2BClBrBgE,GAAiC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACnDC,EAAWC,iBAAO,MAExB,OADAC,aAAgBF,EAAUD,GAExB,eAACP,GAAD,UACE,gBAACC,GAAD,CAAaU,IAAKH,EAAlB,UACE,eAACN,GAAD,CAAwBU,QAASL,EAAjC,SACE,eAACH,GAAD,CAAuB5B,IAAKqC,KAAWnC,IAAI,OAE5C4B,Q,0DCdIQ,GAAsB,SACjCnD,EACAI,GAEA,MAA2BgD,eAAZC,EAAf,oBAASC,KACT,EAA0BlC,qBAA1B,mBACA,GADA,UAC4BmC,gBAA5B,oBAASD,KAqFT,MAAO,CAAEE,cAnFU,yCAAG,WACpBxD,EACAyD,EACAC,EACAC,GAJoB,kBAAAC,EAAA,8DAOlBD,GAPkB,qCAQXE,KAAeC,mBACpBH,EACAvD,GAVgB,6BAMd2D,EANc,UAalBJ,GACAI,GAdkB,uCAeXF,KAAeG,oBACpBL,EACAvD,GAjBgB,+BAYd6D,EAZc,UAoBlBA,GApBkB,uCAoBFJ,KAAeK,gBAAgBD,EAAO7D,GApBpC,uCAqBG6D,GAASN,GArBZ,yBAsBlBN,GAtBkB,uCAuBTc,KAAcC,+BACnBpE,EACAiE,EACAN,EACAD,EACAD,EACAJ,GA7Bc,YAgChBY,IAASN,EAhCO,yBAiClBN,GAjCkB,uCAkCTgB,KAAoBC,qCACzBtE,EACA2D,EACAD,EACAD,EACAJ,GAvCc,wCA0ClBA,GA1CkB,uCA2CTgB,KAAoBE,oBACzBvE,EACA0D,EACAD,EACAJ,GA/Cc,4CAAH,4DAmFKmB,WA/BR,yCAAG,WACjBxE,EACAyE,EACAC,EACAC,EACAlB,EACAmB,GANiB,UAAAhB,EAAA,0DAQba,EAAaI,oBAAqBxB,EARrB,gCASTc,KAAcW,2BAClB9E,EACAyE,EAAajE,QACbiE,EAAaR,MACbS,EACAC,EACAI,aAAatB,EAAQmB,GACrBvB,GAhBa,UAmBZoB,EAAaI,oBAAqBxB,EAnBtB,gCAoBTgB,KAAoBW,6BACxBhF,EACAyE,EAAajE,QACbkE,EACAC,EACAI,aAAatB,EAAQmB,GACrBvB,GA1Ba,2CAAH,kECpEL4B,GAA+BxH,KAAOS,IAAV,mFAM5BgH,GAAgBzH,KAAOiB,IAAV,gDAIbyG,GAAa1H,KAAOS,IAAV,mGAMVkH,GAAkB3H,KAAOY,EAAV,uFAKfgH,GAAkB5H,KAAOY,EAAV,mDCNfiH,GAAwB,SAAC,GAKvB,IAJbC,EAIY,EAJZA,QACA/E,EAGY,EAHZA,QACAkE,EAEY,EAFZA,KACAc,EACY,EADZA,MAEA,OACE,gBAACP,GAAD,WACE,eAACC,GAAD,CAAerE,IAAK0E,EAASxE,IAAI,KACjC,gBAACoE,GAAD,WACE,eAACC,GAAD,uBACA,gBAACC,GAAD,WACG7E,EAAQiF,MAAM,EAAG,GADpB,MAEGjF,EAAQiF,MAAMjF,EAAQI,OAAS,EAAGJ,EAAQI,WAE7C,eAACwE,GAAD,oBACA,eAACC,GAAD,UAAkBX,IAClB,eAACU,GAAD,qBACA,eAACC,GAAD,iBAAkBG,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOE,oBCjCpBC,GAA4BlI,KAAOS,IAAV,gIAQzB0H,GAAoBnI,KAAOoB,GAAV,+FAEb,qBAAGlB,MAAkBW,KAAKC,OAAOC,WAIrCqH,GAAiBpI,KAAOY,EAAV,mDAIdyH,GAA0BrI,KAAOS,IAAV,uXAoBvB6H,GAAqBtI,KAAO+E,OAAV,yFAEpB,qBAAGwD,QAAyB,uBAAyB,WAC1C,qBAAGA,QACX,2BAA6B,MAG9BC,GAAoBxI,KAAOS,IAAV,2BAEjBgI,GAAkBzI,KAAO+E,OAAV,uJAQf2D,GAAqB1I,aAAOyI,GAAPzI,CAAH,6FAKlB2I,GAAsB3I,aAAO0I,GAAP1I,CAAH,2BC9BnB4I,GAAe,SAAC,GAQd,IAPb7F,EAOY,EAPZA,QACAoC,EAMY,EANZA,QACA8B,EAKY,EALZA,KACAc,EAIY,EAJZA,MACAD,EAGY,EAHZA,QACAZ,EAEY,EAFZA,aACA2B,EACY,EADZA,kBAEQlG,EChCkB,WAC1B,IAAMX,EAASC,eAEf,MAAO,CACLU,QAASX,EAAOW,QAChBI,QAASf,EAAOe,QAChBkD,QAASjE,EAAOiE,SD0BE6C,GAAZnG,QACAoG,EE5Bc,SAAC,GAAuC,IAArC7B,EAAoC,EAApCA,aAAcvE,EAAsB,EAAtBA,QACvC,EAA2BgD,eAAZC,EAAf,oBAASC,KACT,EAA4BC,eAAbkD,EAAf,oBAASnD,KACT,EAA0BlC,qBAA1B,mBACMsF,GADN,UACiBC,aAAevG,IAC1BwG,EAAgBhH,mBACpB,kBAAMiH,KAAeC,QAAQnC,EAActB,GAAkBqD,KAC7D,CAACA,EAAUrD,EAAQsB,IAGf6B,EAAO,yCAAG,WACdO,EACAtD,EACArD,EACAuD,GAJc,wBAAAC,EAAA,6DAMRoD,EAAQrD,IAEV8C,EACAA,EAAQjG,QACR,IAVU,SAYQyG,EAAeD,GAZvB,UAYR1H,EAZQ,YAeZA,GAAWmE,GAfC,qCAegByD,EAAeF,EAAOD,GAftC,gCAcRI,EAdQ,OAgBGA,GAAa1D,GAhBhB,2DAqBZE,GArBY,uCAsBLE,KAAeC,mBACpBH,EACAvD,GAxBU,+BAoBR2D,EApBQ,UA2BZJ,GACAI,GA5BY,uCA6BLF,KAAeG,oBACpBL,EACAvD,GA/BU,+BA0BR6D,EA1BQ,UAmCZA,GAnCY,uCAmCIJ,KAAeK,gBAAgBD,EAAO7D,GAnC1C,uCAoCS6D,GAASN,GApClB,yBAqCZN,GArCY,uCAsCHc,KAAciD,0BACnBnD,EACAN,EACAoD,EACApC,EACAlB,EACAJ,GA5CQ,YA+CVY,IAASN,EA/CC,yBAgDZN,GAhDY,uCAiDHQ,KAAewD,gCACpB1D,EACAoD,EACApC,EACAlB,EACAJ,GAtDQ,iDAyDNuD,EAAcJ,QAAQO,EAAgBtD,GAzDhC,4CAAH,4DA6DPyD,EAAc,yCAAG,WACrBI,EACAP,GAFqB,gBAAAnD,EAAA,sEAIGgD,EAAcO,UACpCG,EACAP,GANmB,cAIfI,EAJe,yBAQdA,GARc,2CAAH,wDAWdF,EAAc,yCAAG,WAAOzG,GAAP,gBAAAoD,EAAA,sEACCgD,EAAcW,UAAU/G,GADzB,cACflB,EADe,yBAEdA,GAFc,2CAAH,sDAKpB,MAAO,CACLkH,UACAU,iBACAD,kBF9DkBO,CAAS,CAAE7C,eAAcvE,YAArCoG,QACAhD,EAAkBL,GAAoB3C,EAASJ,GAA/CoD,cACR,EAAkCpC,mBAAiB,IAAnD,mBAAOqG,EAAP,KAAkBC,EAAlB,KACA,EAAwCtG,oBAAkB,GAA1D,mBAAOuG,EAAP,KAAqBC,EAArB,KAEMC,EACJvB,GACAA,EAAkB1F,OAAS,GAC3B0F,EAAkBxG,MAAK,SAACgI,GAAD,OAAOA,EAAEnD,eAAiBA,KAMnD,OACE,eAAC,GAAD,CAAc/B,QAASA,EAAvB,SACE,gBAAC+C,GAAD,WACE,eAACC,GAAD,uBACA,eAAC,GAAD,CACEpF,QAASA,EACTkE,KAAMA,EACNc,MAAOuC,aAAavC,EAAOqC,EAAcA,EAAYjD,SAAW,GAChEW,QAASA,IAEX,gBAACO,GAAD,WACE,eAACC,GAAD,CACEC,SAAU2B,EACV1E,QAAS,kBAAM2E,GAAgB,IAFjC,qBAMA,eAAC7B,GAAD,CACEC,QAAS2B,EACT1E,QAAS,kBAAM2E,GAAgB,IAFjC,0BAOAD,GACA,eAAC,GAAD,CACEzG,KAAK,0BACLe,MAAM,aACN1C,KAAK,OACL2C,cAjCY,SAAC8F,GACrBN,EAAaM,EAAMC,cAAcC,UAmC7B,eAAC9B,GAAD,CACEnD,QAAO,wBAAE,uBAAAW,EAAA,sEACD4C,EACJhG,EACAgF,EACApF,EACCuH,OAA2BQ,EAAZV,GALX,mFADX,qCAYA,gBAAC5B,GAAD,+DACoD,IACjDkC,aAAavC,EAAOqC,EAAcA,EAAYjD,SAAW,GAAI,IAC7DiD,EAAcA,EAAYO,OAAS,GAHtC,OAKA,gBAACnC,GAAD,WACE,eAACC,GAAD,CACEjD,QAAO,wBAAE,uBAAAW,EAAA,sEACDJ,EACJhD,EACAgF,EACAd,EACCiD,OAA2BQ,EAAZV,GALX,mFADX,iBAYA,eAACtB,GAAD,CAAoBlD,QAASL,EAA7B,6B,SGpHGyF,GAA6B5K,KAAOS,IAAV,gIAQ1B0H,GAAoBnI,KAAOoB,GAAV,+FAEb,qBAAGlB,MAAkBW,KAAKC,OAAOC,WAIrC8J,GAAmB7K,KAAOS,IAAV,0GAOhBqK,GAA8B9K,KAAO+K,OAAV,kDAI3BvC,GAAoBxI,KAAOS,IAAV,2BAEjBuK,GAAuBhL,KAAO+E,OAAV,uJAQpB2D,GAAqB1I,aAAOgL,GAAPhL,CAAH,6FCAlBiL,GAAgB,SAAC,GASf,IAAD,EARZlI,EAQY,EARZA,QACAoC,EAOY,EAPZA,QACA8B,EAMY,EANZA,KACAc,EAKY,EALZA,MACAD,EAIY,EAJZA,QACAd,EAGY,EAHZA,aACA6B,EAEY,EAFZA,kBACAqC,EACY,EADZA,mBAEMlJ,EAASC,eACf,EAAgC0B,mBAG7B,CACDqC,OAAQ,EACRkB,aACE2B,GAAqBA,EAAkB1F,OAAS,EAC5C0F,EAAkB,GAAG3B,aACrB,KARR,mBAAOiE,EAAP,KAAiBC,EAAjB,KAUQrE,EAAerB,GAAoB3C,EAASf,EAAOW,SAAnDoE,WAEFtC,EAAgB,SACpB8F,GAEAa,EAAY,2BACPD,GADM,mBAERZ,EAAMC,cAAc/G,KAAO8G,EAAMC,cAAcC,UAI9CY,EAAwBlJ,mBAAQ,WACpC,IAAMmJ,EACJzC,GACAA,EAAkBxG,MAChB,SAACkJ,GAAD,OAAUA,EAAKrE,eAAiBiE,EAASjE,gBAE7C,OAAIoE,EACKA,EAAcnE,SAEhB,IACN,CAACgE,EAASjE,aAAc2B,IAErB2C,EACJ3C,IAAiB,UACjBA,EAAkBxG,MAAK,SAACgI,GAAD,OAAOA,EAAEnD,eAAiBgE,YADhC,aACjB,EACI/D,UAIN,OAFAsE,qBAAU,cAAU,IAGlB,eAAC,GAAD,CAActG,QAASA,EAAvB,SACE,gBAACyF,GAAD,WACE,eAAC,GAAD,gCACA,eAAC,GAAD,CACE7H,QAASA,EACTkE,KAAMA,EACNc,MACEA,GACAuC,aAAavC,EAAOyD,GAA4C,GAElE1D,QAASA,IAEVe,GACC,gBAACgC,GAAD,WACE,eAAC,GAAD,CACEpH,KAAK,SACLe,MAAM,aACN1C,KAAK,SACL2C,cAAeA,IAEjB,gBAACqG,GAAD,CACErH,KAAK,eACLkB,SAAUF,EAFZ,UAIE,4CAJF,OAKGoE,QALH,IAKGA,OALH,EAKGA,EAAmB6C,KAAI,SAACH,EAAMlB,GAAP,OACtB,yBAAgBI,MAAOc,EAAKrE,aAA5B,SACGqE,EAAKZ,QADKN,YAOrB,gBAAC,GAAD,WACE,eAACW,GAAD,CACExF,QAAS,kBACPuB,EACEhE,EACAiE,EACAC,EACAkE,EAASjE,aACTiE,EAASnF,OACTqF,IAGJM,UAAW9C,GAAmD,KAAb,OAAjBA,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB1F,QAXrD,0BAeA,eAAC,GAAD,CAAoBqC,QAASL,EAA7B,6B,UCxIGyG,GAAmB5L,KAAOS,IAAV,qEAKhBoL,GAAkB7L,KAAO+E,OAAV,4CACjB,qBAAGwD,QAAyB,QAAU,8BCGpCuD,GAAiB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAC/B,EAAkCpI,mBAAiB,GAAnD,mBAAOqI,EAAP,KAAkBC,EAAlB,KACA,OACE,eAACC,GAAA,EAAD,CACEC,OACE,eAACP,GAAD,UACGG,EAAKL,KAAI,SAACU,EAAK/B,GAAN,OACR,eAACwB,GAAD,CAEEtD,QAASyD,IAAc3B,EACvB7E,QAAS,kBAAMyG,EAAa5B,IAH9B,SAKG+B,EAAI3I,MAJA4G,QASbgC,cAAY,EAdd,SAgBGN,EAAKC,GAAWM,W,qDCPVC,GAAmB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,iBAC3BC,EAAWC,eACX1K,EAASC,eACT0K,EAAeC,cACnB,SAACC,GAAD,OAAsBA,EAAMC,SAAS9K,EAAOW,SAASgK,gBAGvD,EAA6DjJ,eAA9CqJ,EAAf,EAAQnJ,MAAgCoJ,EAAxC,EAA8BnJ,SAExBoJ,EAAUL,cAAY,SAACC,GAC3B,OAAOK,aAAoBL,EAAMC,SAAS9K,EAAOW,aAChDwK,QAAO,SAAC5B,GACT,OAAOiB,EACJxE,MAAM+E,EAAc,GAAIA,EAAc,GAAK,GAC3CK,MAAK,SAAC/C,GACL,OAAOA,IAAMkB,EAAKxI,cAIxB0I,qBAAU,WACJkB,IAAiBU,KAAOC,SAAuC,IAA5Bd,EAAiBrJ,QAExDsJ,EACEc,aAAkB,CAChBxK,QAASyJ,EAAiBxE,MAAM+E,EAAc,GAAIA,EAAc,GAAK,GACrEpK,QAASX,EAAOW,aAInB,CAAC8J,EAAUD,EAAkBxK,EAAOW,QAASoK,IAEhD,IAAMS,EAAgBrL,mBACpB,kBACE8K,EAAQvB,KAAI,SAAC+B,GACX,IAAMC,EAAgBD,EAAOrL,YAAYC,MACvC,SAACkJ,GAAD,OAAUA,EAAKhJ,eAAiBP,EAAOS,IAAID,iBAE7C,OACE,uCACE,eAACb,GAAA,EAAD,CAEEE,SAAsB,OAAb6L,QAAa,IAAbA,OAAA,EAAAA,EAAe7L,SAAU6L,EAAc7L,QAAU,EAC1DD,YAAa6L,EACb3L,KAAK,SACLC,UAAU,iBAJL0L,EAAO1K,SAMd,eAAC,KAAD,CACE4K,GAAG,gBACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,gBAKrD,CAACZ,EAASjL,EAAOS,MAGnB,OACE,eAAC,KAAD,CACEqL,OAAQnB,EACRoB,WAAYP,EACZQ,mBAAoBxB,EAAiBrJ,OACrC8K,mBAAoBjB,K,WClFbkB,GAAwClO,KAAOS,IAAV,iWAItC,qBAAG0N,UAA6B,OAAS,UAG1C,qBAAGjO,MAAkBI,OAAO8N,MAY1BC,GAAwBrO,KAAOS,IAAV,gHAIvB,qBAAGP,MAAkBI,OAAO8N,MAClB,qBAAGD,UACN,qCAAuC,UAI5CG,GAA0BtO,KAAOS,IAAV,oEAKvB8N,GAAwBvO,KAAOS,IAAV,yMAUrB+N,GAAexO,KAAOS,IAAV,wFAGN,qBAAG0N,UACN,qCAAuC,UAG1CM,GAAoBzO,KAAOoB,GAAV,gDAMjBsN,IAFwB1O,KAAOS,IAAV,2BAEST,KAAO+E,OAAV,2DAI3B4J,GAA4B3O,KAAOiB,IAAV,gDACvB,qBAAGkN,UACF,eAAiB,oBC7CpBS,GAA6C,SAAC,GAKpD,IAJLC,EAII,EAJJA,gBACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACA1C,EACI,EADJA,aAEA,EAA4B1I,oBAAkB,GAA9C,mBAAOqL,EAAP,KAAeC,EAAf,KAEA,OACE,gBAACf,GAAD,CAAuCC,UAAWa,EAAlD,UACE,gBAACV,GAAD,CAAyBH,UAAWa,EAApC,UACE,eAACR,GAAD,CAAcL,UAAWa,EAAzB,SACE,eAACP,GAAD,yBAEDI,KAEFE,GACC,gBAACR,GAAD,CAAuBJ,UAAWa,EAAlC,UACE,eAACR,GAAD,CAAcL,UAAWa,EAAzB,SACE,eAACP,GAAD,sBAEDM,KAGL,gBAACR,GAAD,CAAuBJ,UAAWa,EAAlC,UACE,gBAACR,GAAD,CAAcL,UAAWa,EAAzB,UACE,eAACP,GAAD,qBACCpC,GACC,eAACqC,GAAD,CAA6BlJ,QAAS,kBAAMyJ,GAAWD,IAAvD,SACE,eAACL,GAAD,CACER,UAAWa,EACX5L,IAAK8L,KACL5L,IAAI,UAKXwL,KAEH,eAACT,GAAD,CAAuBF,UAAWa,Q,mBCzD3BG,GAA4BnP,KAAOS,IAAV,kEAKzB2O,GAAwBpP,KAAOS,IAAV,6CAIrB4O,GAA6BrP,KAAOS,IAAV,wMAS1B6O,GAAoCtP,KAAOuP,GAAV,2BAEjCC,GAAmBxP,KAAOS,IAAV,ySAehBgP,GAAuBzP,KAAOY,EAAV,gDAIpB8O,GAAwB1P,KAAOY,EAAV,gDAIrB+O,GAAsB3P,KAAO+E,OAAV,sHCzBnB6K,GAAa,SAAC,GAKb,EAJZtN,MAIa,IAHbuN,EAGY,EAHZA,YACAhH,EAEY,EAFZA,kBACAiH,EACY,EADZA,WAEMC,EAAe,SAAC7I,GAA0B,IAAD,EACvCC,EACJ0B,IAAiB,UACjBA,EAAkBxG,MAAK,SAACkJ,GAAD,OAAUA,EAAKrE,eAAiBA,YADtC,aACjB,EACIC,UACN,OAAOA,GAAsB,GAGzB6I,EAAa,SAAC9I,GAA0B,IAAD,EACrCyD,EACJ9B,IAAiB,UACjBA,EAAkBxG,MAAK,SAACkJ,GAAD,OAAUA,EAAKrE,eAAiBA,YADtC,aACjB,EACIyD,QACN,OAAOA,GAAkB,IAG3B,OAAOkF,GAAeA,EAAY1M,OAAS,GAAK0F,EAC9C,eAACsG,GAAD,UAEE,gBAACC,GAAD,WACE,gBAACC,GAAD,WACE,eAACC,GAAD,mBAGA,eAACA,GAAD,uBAIDO,EAAYnE,KAAI,SAACuE,GAAD,OACf,gBAACT,GAAD,WACE,eAACC,GAAD,UACGS,OAAOD,EAAOhK,WAEjB,gBAACyJ,GAAD,WACGpF,aACC2F,EAAOE,cACPJ,EAAaE,EAAOG,gBACnB,IACFJ,EAAWC,EAAOG,kBAErB,eAACT,GAAD,CACEnK,QAAS,kBAAMsK,EAAWI,OAAOD,EAAOhK,WAD1C,4BAUR,uDCkzBWoK,UAlxBgB,WAAO,IAAD,MACnC,EAAoE1M,mBAElE,CACA2M,KAAM,IACNC,cAAe,IACfC,OAAQ,IACRC,aAAc,IACdC,WAAY,IACZC,KAAM,IACNC,QAAS,IACTC,eAAgB,IAChBC,kBAAmB,IACnBC,YAAa,MAZf,mBAAOC,EAAP,KAAmCC,EAAnC,KAcMjP,EAASC,eAETiP,EAAWC,aAAiBnP,EAAOW,SAEnCyO,EAAYC,aAAcnR,KAAMI,OAAO8N,IAEvCkD,EAAmB1E,cAAY,SAACC,GAAD,OAAsBA,EAAMC,SAASyE,MAEpEC,EAAgB5E,cACpB,SAACC,GAAD,OACEyE,GACAG,aAAe5E,EAAMC,SAAS9K,EAAOW,SAAU2O,MAG7CI,EAAc9E,cAAY,SAACC,GAAD,OAC9B8E,aAAc9E,EAAMC,SAAS9K,EAAOW,aAGhCL,EAAQsK,cAAY,SAACC,GAAD,OACxB+E,aAAe/E,EAAO7K,EAAOS,QAGzB+D,EAAQoG,cAAY,SAACC,GAAD,OACxB4E,aACE5E,EAAMC,SAAS9K,EAAOW,UACjB,OAALL,QAAK,IAALA,OAAA,EAAAA,EAAOkE,OAAQlE,EAAMkE,MAAQ,OAIjC,EAA4BV,eAAbkD,EAAf,oBAASnD,KAEHgM,EAAcjF,cAClB,SAACC,GAAD,OAAsBA,EAAMC,SAAS9K,EAAOW,SAASmL,UAGjDgE,EAAQ,UAAGlF,cAAY,SAACC,GAAD,OAC3BK,aAAoBL,EAAMC,SAAS9K,EAAOW,oBAD9B,aAAG,EAEdwK,QAAO,SAAC5B,GACT,cAAOjJ,QAAP,IAAOA,OAAP,EAAOA,EAAOwP,SAAS1E,MAAK,SAAC/C,GAC3B,OAAOA,IAAMkB,EAAKxI,SAAWwI,EAAK5I,UAAYX,EAAOW,cAInDoP,EAAYnF,cAAY,SAACC,GAAD,OAAsBA,EAAMmF,MAAMC,SAE1DC,EAAatF,cAAY,SAACC,GAAD,OAAsBA,EAAMmF,MAAMlE,UAE3DqE,EAAgBvF,cACpB,SAACC,GAAD,OAAsBA,EAAMmF,MAAMG,iBAG9BC,EAAiBxF,cACrB,SAACC,GAAD,OAAsBA,EAAMmF,MAAMI,kBAG9BC,EAAiBzF,cACrB,SAACC,GAAD,OAAsBA,EAAMC,SAAS9K,EAAOW,SAAS2P,iBAGvD,EAAwC3O,mBAAiB,GAAzD,mBAAO4O,EAAP,KAAqBC,EAArB,KACA,EAAwC7O,oBAAkB,GAA1D,mBAAO8O,EAAP,KAAqBC,EAArB,KACA,EAA0C/O,oBAAkB,GAA5D,mBAAOgP,EAAP,KAAsBC,EAAtB,KACA,EAA0DjP,mBAExD,MAFF,mBAAOkP,EAAP,KAA8BC,EAA9B,KAIMC,EAAgB5Q,mBACpB,wBACEqP,IAAa,UACbA,EAAcpP,YAAYC,MACxB,SAACkJ,GAAD,OAAUA,EAAKhJ,aAAaC,gBAAkBR,EAAOS,IAAID,wBAF9C,aACb,EAEGS,YACL,CAACuO,EAAexP,EAAOS,MAGnBgK,EAAWC,eAEjBvK,mBAAQ,WACDG,IAASkE,GAASqL,IAAgBxE,KAAO2F,MAE9CvG,EACEwG,aAAsB,CACpBlQ,QAAST,EAAMkE,MACf7D,QAASX,EAAOW,aAGnB,CAACL,EAAOmK,EAAUjG,EAAOqL,EAAa7P,EAAOW,UAEhDR,mBAAQ,WACFqP,GAEJF,GACE7E,EACEyG,aAAoB,CAClBnQ,QAASuO,EACT3O,QAASX,EAAOW,aAGrB,CAAC6O,EAAe/E,EAAUzK,EAAOW,QAAS2O,IAG7CnP,mBAAQ,WACDG,GAAS6P,IAAkB9E,KAAO2F,MAEvCvG,EACE0G,aAAgB,CAAE5Q,aAAcP,EAAOS,IAAKE,QAASX,EAAOW,aAE7D,CAACL,EAAOmK,EAAU0F,EAAenQ,EAAOS,IAAKT,EAAOW,UAEvDR,mBAAQ,WACDH,EAAO2L,IAAOoF,GACnBP,EAAgBO,EAAcK,QAAQlD,OAAOlO,EAAO2L,QACnD,CAACoF,EAAe/Q,EAAO2L,KAE1BxL,mBAAQ,WAEJmP,GACAyB,GACAA,EAAc5P,OAAS,GACvBb,KACE,UAAGyQ,EAAcR,GAActK,cAAgB3F,EAAM+Q,cACvDjB,IAAmB/E,KAAOC,SAE1Bb,EACE6G,aAAwB,CACtB/Q,aAAcP,EAAOS,IACrBE,QAASX,EAAOW,QAChBsD,QAAS8M,EAAcR,QAI5B,CACDjQ,EACAiQ,EACA9F,EACA2F,EACAW,EACA/Q,EAAOS,IACPT,EAAOW,QACP2O,IAGFnP,mBAAQ,WACN,GAAKG,GAAS+P,IAAmBhF,KAAOC,QAAxC,CACA,IAAIiG,EAAsB,GAC1BjR,EAAMwP,SAAS0B,SAAQ,SAACjI,IAClB,OAACmG,QAAD,IAACA,OAAD,EAACA,EAAa+B,SAASlI,KACzBgI,EAAUG,KAAKnI,MAGfgI,EAAUpQ,OAAS,GACrBsJ,EACEkH,aAAkB,CAAE5Q,QAASwQ,EAAW5Q,QAASX,EAAOW,cAI3D,CAACL,EAAOoP,EAAajF,EAAUzK,EAAOW,UAEzC8I,qBAAU,WACRgB,EAASmH,kBACR,CAACnH,EAAUzK,IAEdyJ,qBAAU,WACRoI,OAAOC,SAAS,EAAG,GACfxR,GAAS4P,IAAe7E,KAAO2F,MACnCvG,EACEsH,aAAU,CACRhR,QAASf,EAAOS,IAChBE,QAASX,EAAOW,QAChBsD,QAASjE,EAAO2L,QAGnB,CAACrL,EAAO4P,EAAYzF,EAAUzK,EAAOS,IAAKT,EAAO2L,GAAI3L,EAAOW,UAE/D8I,qBAAU,WACHzJ,EAAO2L,IAAO3L,EAAOS,KAC1BgK,EACEuH,aAA2B,CACzBzR,aAAcP,EAAOS,IACrBwD,QAASjE,EAAO2L,GAChBhL,QAASX,EAAOW,aAGnB,CAAC8J,EAAUzK,EAAOS,IAAKT,EAAO2L,GAAI3L,EAAOW,UAE5C8I,qBAAU,WACR,GAAK+F,GAAkBxI,EAAvB,CACA,IAAMiL,EAA8BnQ,aAClC0N,EAAczN,cACdiF,EAAQjG,cAE0B2H,IAAhCuJ,GACFhD,EAA8BgD,EAA4B/P,gBAC3D,CAACsC,EAAOwC,EAASwI,IAEpB,IAAM0C,EAA8C/R,mBAClD,iBAAO,CACLgS,KAAMC,KACNC,QAASC,KACT,mBAAoBC,KACpB,cAAeC,KACfC,OAAQC,KACRC,KAAMC,KACNC,OAAQC,KACRC,KAAMC,QAER,IAGIC,EAAiB9S,mBACrB,qCAAM,CACJ,CACEqC,MAAO,OACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACI2C,KACNC,KAAMf,MAER,CACE5P,MAAO,UACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACI6C,QACND,KAAMb,MAER,CACE9P,MAAO,WACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACI8C,gBACNF,KAAMZ,MAER,CACE/P,MAAO,MACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACI+C,WACNH,KAAMX,MAER,CACEhQ,MAAO,SACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACIgD,OACNJ,KAAMT,MAER,CACElQ,MAAO,OACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACIiD,UACNL,KAAMP,MAER,CACEpQ,MAAO,SACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACIkD,YACNN,KAAML,MAER,CACEtQ,MAAO,OACPiG,MAAK,OACHnI,QADG,IACHA,GADG,UACHA,EAAO+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD9D,aACH,EACImD,UACNP,KAAMH,SAGV,CAAC1S,EAAOiQ,EAAcQ,IAGlB4C,EAAwBxT,mBAC5B,kBACE4Q,IAAa,OACbzQ,QADa,IACbA,OADa,EACbA,EAAOsT,QAAQzI,QAAO,SAAC5B,GACrB,OAAOwH,EAAc3F,MAAK,SAAC/C,GACzB,OAAOA,IAAM6F,OAAO3E,EAAKtF,kBAG/B,QAAC3D,QAAD,IAACA,OAAD,EAACA,EAAOsT,QAAS7C,IAGb8C,EAAoB1T,mBAAQ,WAChC,IAAM8N,EACJ0F,GACA5C,GACA4C,EAAsBtT,MACpB,SAACkJ,GAAD,OAAU2E,OAAO3E,EAAKtF,WAAa8M,EAAcR,MAE/CuD,EACJ7F,GACA3N,GACAA,EAAMuG,kBAAkBxG,MACtB,SAACgI,GAAD,OAAOA,EAAEnD,eAAiB+I,EAAOG,iBAErC,OACEH,GAAM,2BACDA,GADC,IAEJ9I,SAAU2O,GAASA,EAAM3O,SACzBwD,OAAQmL,GAASA,EAAMnL,WAG1B,CAACrI,EAAOiQ,EAAcoD,EAAuB5C,IAE1CgD,EAAqB5T,mBAAQ,WACjC,IAAM8N,EAAM,OAAG3N,QAAH,IAAGA,OAAH,EAAGA,EAAOsT,QAAQvT,MAC5B,SAACkJ,GAAD,OAAU2E,OAAO3E,EAAKtF,WAAa4M,KAE/BiD,EACJ7F,GACA3N,GACAA,EAAMuG,kBAAkBxG,MACtB,SAACgI,GAAD,OAAOA,EAAEnD,eAAiB+I,EAAOG,iBAErC,OACEH,GAAM,2BACDA,GADC,IAEJ9I,SAAU2O,GAASA,EAAM3O,SACzBwD,OAAQmL,GAASA,EAAMnL,WAG1B,CAACrI,EAAOuQ,IAELmD,EAIA,CACJ,CACExR,MAAO,mBACPiG,MAAOnI,EAAQA,EAAMS,QAAU,GAC/BkT,UAAW,WAEb,CACEzR,MAAO,OACPiG,MAAOsI,EAAgBA,EAAcR,GAActK,WAAa,IAElE,CACEzD,MAAO,yBACPiG,MAAOnI,EAAQA,EAAM4T,YAAYjO,WAAa,IAEhD,CAAEzD,MAAO,iBAAkBiG,MAAO,QAClC,CAAEjG,MAAO,UAAWiG,MAAOnI,EAAQA,EAAMK,QAAU,IACnD,CAAE6B,MAAO,QAASiG,MAAO,IACzB,CACEjG,MAAO,gBACPiG,MAAO6G,GAAsC,GAC7C2E,UAAW,YAgBTE,EAAehU,mBAAQ,WAC3B,IAAMuL,EACJlH,GACAA,EAAMpE,YAAYC,MAChB,SAACkJ,GAAD,OAAUA,EAAKhJ,eAAiBP,EAAOS,IAAID,iBAE/C,OACE,gBAAC,KAAD,YACQ,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOS,WAAYf,EAAOS,MAAY,OAAL+D,QAAK,IAALA,OAAA,EAAAA,EAAOzD,WAAYT,EAAMkE,OACzD,uCACE,eAAC7E,GAAA,EAAD,CACEC,YAAa4E,EACb3E,SAAsB,OAAb6L,QAAa,IAAbA,OAAA,EAAAA,EAAe7L,SAAU6L,EAAc7L,QAAU,EAC1DC,KAAK,QACLC,UAAU,iBAEZ,eAAC,KAAD,CACE4L,GAAG,eACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,YAI/CrH,GACA,eAAC,KAAD,oCAIL,QAAClE,QAAD,IAACA,OAAD,EAACA,EAAOS,QAAR,OAAiBT,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAOkE,MAAOxE,EAAOS,IAAK+D,IAExC4P,EAAyBjU,mBAAQ,WACrC,IAAMuL,EACJ8D,GACAA,EAAcpP,YAAYC,MACxB,SAACkJ,GAAD,OAAUA,EAAKhJ,eAAiBP,EAAOS,IAAID,iBAE/C,OACE,gBAAC,KAAD,WACGgP,GACC,uCACE,eAAC7P,GAAA,EAAD,CACEC,YAAa4P,EACb3P,QAAS6L,EAAgBA,EAAc7L,QAAU,EACjDC,KAAK,QACLC,UAAU,iBAEZ,eAAC,KAAD,CACE4L,GAAG,eACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,YAI/C2D,GACA,eAAC,KAAD,mCAIL,CAACA,EAAexP,EAAOS,MAEpB4T,GAAiBlU,mBACrB,kBACE,gBAAC,KAAD,kBACG2P,QADH,IACGA,OADH,EACGA,EAAUpG,KAAI,SAAC4K,GACd,IAAM5I,EAAgB4I,EAAQlU,YAAYC,MACxC,SAACkJ,GAAD,OAAUA,EAAKhJ,eAAiBP,EAAOS,IAAID,iBAE7C,OACE,gBAAC,IAAM+T,SAAP,WACE,eAAC5U,GAAA,EAAD,CACEC,YAAa0U,EACbzU,SAAsB,OAAb6L,QAAa,IAAbA,OAAA,EAAAA,EAAe7L,SAAU6L,EAAc7L,QAAU,EAC1DC,KAAK,UACLC,UAAU,oBAEZ,eAAC,KAAD,CACE4L,GAAG,kBACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,UAT1ByI,EAAQvT,YAcZ,IAApB+O,EAAS3O,QACR,eAAC,KAAD,sCAIN,CAAC2O,EAAU9P,EAAOS,MAGd+T,GAAyBrU,mBAAQ,WACrC,GAAKG,EACL,OAAO,eAAC,GAAD,CAAkBkK,iBAAkBlK,EAAM2K,YAChD,CAAC3K,IAEEmU,GAAkBtU,mBAAQ,WAC9B,OACI6O,GACoC,MAApCA,EAA2BL,OAC7BkF,GA8BCA,GACD9C,GACoC,MAApC/B,EAA2BL,KAGzB,uCACE,eAAC,KAAD,UACE,eAAC,KAAD,kBAEF,eAAC,KAAD,UACE,eAAC,KAAD,CACEnL,QAAS,kBAAMoN,GAAkBD,IADnC,4BAUNkD,GACA9C,GACoC,MAApC/B,EAA2BL,KAGzB,uCACE,eAAC,KAAD,UACE,gBAAC,KAAD,WACGkF,EAAkB1F,eACjB0F,EAAkB1O,UAClBmD,aACEuL,EAAkB1F,cAClB0F,EAAkB1O,UAClBc,WAAY,IACf4N,EAAkBlL,YAGvB,gBAAC,KAAD,WACE,eAAC,KAAD,CACEnF,QAAS,kBAAMoN,GAAkBD,IADnC,0BAKA,eAAC,KAAD,4CAxBR,EA9CI,uCACE,eAAC,KAAD,UACE,gBAAC,KAAD,WACGkD,EAAkB1F,eACjB0F,EAAkB1O,UAClBmD,aACEuL,EAAkB1F,cAClB0F,EAAkB1O,UAClBc,WAAY,IACf4N,EAAkBlL,YAGvB,eAAC,KAAD,UACE,eAAC,KAAD,CACEnF,QAAS,WACPkN,GAAiBD,GACjBK,EAAyB5C,OAAO2F,EAAkB5P,WAHtD,4BA8DP,CACD4P,EACA7E,EACAyB,EACAE,EACAI,IAGI2D,GAAuBvU,mBAAQ,WAAO,IAAD,EACzC,OACEG,IAAK,UACLA,EAAM+Q,YAAYN,EAAgBA,EAAcR,GAAgB,UAD3D,aACL,EACIoE,aACJrU,EAAM+Q,YAAYN,EAAgBA,EAAcR,GAAgB,GAC7DoE,WAAWxT,OAAS,EAEvB,OAAOb,QAAP,IAAOA,OAAP,EAAOA,EAAO+Q,YACZN,EAAgBA,EAAcR,GAAgB,GAC9CoE,WAAWjL,KAAI,SAACH,GAChB,MAAI,eAAgBA,EAEhB,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,CACEnI,IAAK8Q,EAAiB3I,EAAKqL,YAC3BtT,IAAI,OAGR,gBAAC,KAAD,WACE,eAAC,KAAD,UACGiI,EAAKqL,aAER,eAAC,KAAD,UAA0BrL,EAAKd,aAXDc,EAAKqL,YAgBpC,QAGF3B,EAAevJ,KAAI,SAACH,GAAD,OACxB,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAwBnI,IAAKmI,EAAK4J,KAAM7R,IAAI,OAE9C,gBAAC,KAAD,WACE,eAAC,KAAD,UAA0BiI,EAAK/G,QAC/B,eAAC,KAAD,UAA0B+G,EAAKd,aANDc,EAAK/G,YAW1C,CAAClC,EAAO2S,EAAgB1C,EAAcQ,EAAemB,IAExD,OACE,eAAC,KAAD,UACkB,YAAfhC,EACC,eAAC,KAAD,UACE,eAAC,KAAD,CAAc2E,MAAM,cAGtB,qCACG9E,GAA4B,WAAfG,EACZ,qCACE,eAAC,KAAD,gCAGF,gBAAC,KAAD,WACGO,GAAgBnQ,GAASyT,GACxB,eAAC,GAAD,CACEhT,QAASf,EAAOS,IAChBwE,KAAMiJ,OAAO6F,EAAmB9P,SAChC8B,MAAOgO,EAAmB5F,cAC1BjJ,aAAc6O,EAAmB3F,cACjCvH,kBAAmBvG,EAAMuG,kBACzBf,QAAO,UAAExF,EAAM+Q,YAAYrR,EAAO2L,GAAK3L,EAAO2L,GAAK,UAA5C,aAAE,EAA8CmJ,MACvD3R,QAAS,WACPuN,GAAiBD,GACjBK,EAAyB,SAI9BH,GAAiBrQ,GAASyQ,GAAiBvB,GAC1C,eAAC,GAAD,CACExK,aAAcwK,EACdzO,QAASf,EAAOS,IAChBwE,KAAM8L,EAAcR,GACpBxK,MACE8N,EACIA,EAAkB1F,mBAClBzF,EAENQ,mBACE2K,EACIA,EAAkBzF,mBAClB1F,EAEN5C,QAASxF,EAAM+Q,YAAYrR,EAAO2L,GAAK3L,EAAO2L,GAAK,GAAGmJ,MACtD3R,QAAS,kBAAMyN,GAAkBD,IACjC9J,kBAAmBvG,EAAMuG,oBAG7B,gBAAC,KAAD,WACE,gBAAC,KAAD,WACGvG,GACC,eAAC,KAAD,CACEc,IAAG,UACDd,EAAM+Q,YACJN,EAAgBA,EAAcR,GAAgB,UAF/C,aACD,EAEGuE,MAELxT,IAAI,KAGR,oBACEyT,KAAM7F,GAAYA,EAAS8F,YAAT,OAAsB1U,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOS,SAC/CkU,OAAO,SACPC,IAAI,aAHN,SAKE,eAAC,KAAD,CAAoB9T,IAAG,OAAE8N,QAAF,IAAEA,OAAF,EAAEA,EAAUiE,KAAM7R,IAAI,OAE9CgO,GAAoByB,GACnB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAsBvN,QAhTrB,WACnB,IAAM2R,EAAgB5E,EAAe,GAChCQ,GAAiBoE,EAAgB,GACtC3E,EAAgB2E,IA6SE,SACE,eAAC,KAAD,CAAyB/T,IAAKgU,KAAe9T,IAAI,OAEnD,gBAAC,KAAD,WACGiP,EAAe,EADlB,WACsBQ,QADtB,IACsBA,OADtB,EACsBA,EAAe5P,UAErC,eAAC,KAAD,CAAsBqC,QA5TzB,WACf,IAAM6R,EAAY9E,EAAe,GAC5BQ,GAAiBsE,GAAatE,EAAc5P,QACjDqP,EAAgB6E,IAyTE,SACE,eAAC,KAAD,CAAyBjU,IAAKkU,KAAchU,IAAI,aAKxD,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,eAAC,KAAD,4BACA,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBF,IAAKmU,SAEzB,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBnU,IAAKoU,SAEzB,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBpU,IAAKqU,eAI5BhB,MAEH,eAAC,KAAD,CACEtK,OACE,eAAC,KAAD,wBAEFE,cAAY,EAJd,SAME,eAAC,KAAD,UACG2J,EAAStK,KAAI,SAACH,GAAD,OACZ,gBAAC,KAAD,WACE,eAAC,KAAD,UACGA,EAAK/G,QAER,eAAC,KAAD,UACsB,YAAnB+G,EAAK0K,UAAL,UACM1K,EAAKd,MAAMzC,MAAM,EAAG,GAD1B,cACkCuD,EAAKd,MAAMzC,MACxCuD,EAAKd,MAAMtH,OAAS,EACpBoI,EAAKd,MAAMtH,SAEboI,EAAKd,UAViBc,EAAK/G,oBAkB3C4M,EASA,eAAC,GAAD,CACEvC,gBAAiBwH,GACjBtH,aAAcyC,GAAiB4E,EAC/BtH,cAAeqH,EACf9J,cAAY,IAZd,eAAC,GAAD,CACEN,KAAM,CACJ,CAAEtI,KAAM,WAAY6I,QAAS+J,IAC7B,CAAE5S,KAAM,QAAS6I,QAAS8J,GAC1B,CAAE3S,KAAM,SAAU6I,QAAS6J,MAWjC,eAAC,KAAD,CACEhK,OAAQ,eAAC,KAAD,sBACRE,cAAY,EAFd,SAIE,eAAC,KAAD,UACGqK,OAGL,eAAC,KAAD,CACEvK,OAAQ,eAAC,KAAD,qBACRE,cAAY,EAFd,SAIE,eAAC,GAAD,CACE/J,MAAOA,EACPuN,YAAW,OAAEvN,QAAF,IAAEA,OAAF,EAAEA,EAAOsT,QACpB/M,kBAAiB,OAAEvG,QAAF,IAAEA,OAAF,EAAEA,EAAOuG,kBAC1BiH,WAAY,SAAC7J,GACX6M,EAAyB7M,GACzByM,GAAgB,QAItB,eAAC,KAAD,CACEvG,OACE,eAAC,KAAD,4BAEFE,cAAY,EAJd,SAMGmK","file":"static/js/5.2a86a719.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const InputField = ({ name, label, type, changeHandler }: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n      />\n    </StyledInputContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const StyledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(49, 49, 49, 1);\n  border: 1px solid rgba(170, 170, 170, 1);\n  margin: auto;\n  padding: 1.5em 1em;\n  width: 100%;\n  max-width: 25em;\n`;\n\nexport const StyledCloseModalButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 1em 1em 0 0;\n`;\n\nexport const StyledCloseButtonIcon = styled.img``;\n","import React, { ReactNode, useRef } from 'react';\nimport { CloseIcon } from '../../assets';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport {\n  StyledCloseButtonIcon,\n  StyledCloseModalButton,\n  StyledModal,\n  StyledModalOverlay,\n} from './styles';\n\ninterface IProps {\n  children: ReactNode;\n  onClose: () => void;\n}\n\nexport const ModalOverlay: React.FC<IProps> = ({ children, onClose }) => {\n  const modalRef = useRef(null);\n  useOutsideClick(modalRef, onClose);\n  return (\n    <StyledModalOverlay>\n      <StyledModal ref={modalRef}>\n        <StyledCloseModalButton onClick={onClose}>\n          <StyledCloseButtonIcon src={CloseIcon} alt=\"\" />\n        </StyledCloseModalButton>\n        {children}\n      </StyledModal>\n    </StyledModalOverlay>\n  );\n};\n","import { BigNumber, BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice } from '../../utility';\n\nexport const useSellBuyLsp8Token = (\n  assetAddress: string,\n  network: NetworkName,\n) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [{ data: account }] = useAccount();\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n  };\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n  ) => {\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n  };\n\n  return { buyFromMarket, setForSale };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledToggleButtonGroup = styled.div`\n  border-radius: 0.5em;\n  width: max-content;\n  border: 1px solid rgba(153, 153, 153, 1);\n  margin: 0 auto;\n\n  button {\n    border-right: 1px solid rgba(153, 153, 153, 1);\n\n    :first-child {\n      border-radius: 0.4em 0 0 0.4em;\n    }\n\n    :last-child {\n      border-right: none;\n      border-radius: 0 0.4em 0.4em 0;\n    }\n  }\n`;\n\nexport const StyledToggleButton = styled.button<{ $active: boolean }>`\n  padding: 0.5em;\n  color: ${({ $active }) => ($active ? 'rgba(255, 129, 1, 1)' : 'white')};\n  background-color: ${({ $active }) =>\n    $active ? 'rgba(255, 255, 255, 0.2)' : ''};\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n\nexport const StyledApproveButton = styled(StyledCancelButton)``;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { InputField } from '../../../components/InputField';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\nimport { useUrlParams } from '../../../hooks/useUrlParams';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { convertPrice, displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledApproveButton,\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledCancelButton,\n  StyledInfoText,\n  StyledModalHeader,\n  StyledToggleButton,\n  StyledToggleButtonGroup,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n}: IProps) => {\n  const { network } = useUrlParams();\n  const { approve } = useErc20({ tokenAddress, network });\n  const { buyFromMarket } = useSellBuyLsp8Token(address, network);\n  const [upAddress, setUpAddress] = useState<string>('');\n  const [toggleEOABuy, setToggleEOABuy] = useState<boolean>(false);\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUpAddress(event.currentTarget.value);\n  };\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledBuyCardModalContent>\n        <StyledModalHeader>BUY CARD</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n          cardImg={cardImg}\n        />\n        <StyledToggleButtonGroup>\n          <StyledToggleButton\n            $active={!toggleEOABuy}\n            onClick={() => setToggleEOABuy(false)}\n          >\n            With UP\n          </StyledToggleButton>\n          <StyledToggleButton\n            $active={toggleEOABuy}\n            onClick={() => setToggleEOABuy(true)}\n          >\n            With EOA\n          </StyledToggleButton>\n        </StyledToggleButtonGroup>\n        {!toggleEOABuy && (\n          <InputField\n            name=\"universalProfileAddress\"\n            label=\"UP Address\"\n            type=\"text\"\n            changeHandler={changeHandler}\n          />\n        )}\n        <StyledApproveButton\n          onClick={async () =>\n            await approve(\n              address,\n              price,\n              network,\n              !toggleEOABuy ? upAddress : undefined,\n            )\n          }\n        >\n          Check balance & Approve\n        </StyledApproveButton>\n        <StyledInfoText>\n          Do you confirm the purchase of this card mint for{' '}\n          {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n          {marketToken ? marketToken.symbol : ''}?\n        </StyledInfoText>\n        <StyledButtonGroup>\n          <StyledBuyButton\n            onClick={async () =>\n              await buyFromMarket(\n                address,\n                price,\n                mint,\n                !toggleEOABuy ? upAddress : undefined,\n              )\n            }\n          >\n            Buy\n          </StyledBuyButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledBuyCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [error, setError] = useState();\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n\n    const balance = await checkBalanceOf(buyer);\n\n    const allowance =\n      balance >= amount && (await checkAllowance(buyer, spenderAddress));\n    if (allowance && allowance >= amount) {\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    } else {\n      await erc20Contract.approve(spenderAddress, amount);\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../../boot/types';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledCancelButton,\n  StyledInputGroup,\n  StyledModalHeader,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale } = useSellBuyLsp8Token(address, params.network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  useEffect(() => {}, []);\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledSellCardModalContent>\n        <StyledModalHeader>SET CARD FOR SALE</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={\n            price &&\n            displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n          }\n          cardImg={cardImg}\n        />\n        {whiteListedTokens && (\n          <StyledInputGroup>\n            <InputField\n              name=\"amount\"\n              label=\"Your Price\"\n              type=\"number\"\n              changeHandler={changeHandler}\n            />\n            <StyledTokenSelectorDropDown\n              name=\"tokenAddress\"\n              onChange={changeHandler}\n            >\n              <option>Token</option>\n              {whiteListedTokens?.map((item, i) => (\n                <option key={i} value={item.tokenAddress}>\n                  {item.symbol}\n                </option>\n              ))}\n            </StyledTokenSelectorDropDown>\n          </StyledInputGroup>\n        )}\n        <StyledButtonGroup>\n          <StyledSetPriceButton\n            onClick={() =>\n              setForSale(\n                address,\n                ownerProfile,\n                mint,\n                sellForm.tokenAddress,\n                sellForm.amount,\n                selectedTokenDecimals,\n              )\n            }\n            disabled={!whiteListedTokens || whiteListedTokens?.length === 0}\n          >\n            Set for sale\n          </StyledSetPriceButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledSellCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      {ownerContent && (\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Owner</StyledHeaderTitle>\n          </StyledHeader>\n          {ownerContent}\n        </StyledIssuerContainer>\n      )}\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledCardMarket,\n  StyledCardMarketBuy,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset?: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n  onBuyClick: (tokenId: number) => void;\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n  onBuyClick,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy>\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { BuyCardModal } from './BuyCardModal';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [openBuyModal, setOpenBuyModal] = useState<boolean>(false);\n  const [openSellModal, setOpenSellModal] = useState<boolean>(false);\n  const [selectedMarketTokenId, setSelectedMarketTokenId] = useState<\n    number | null\n  >(null);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const dispatch = useAppDispatch();\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset?.markets.find(\n      (item) => Number(item.tokenId) === selectedMarketTokenId,\n    );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, selectedMarketTokenId]);\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledBuyButton\n              onClick={() => {\n                setOpenBuyModal(!openBuyModal);\n                setSelectedMarketTokenId(Number(currentMintMarket.tokenId));\n              }}\n            >\n              Buy now\n            </StyledBuyButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Set price\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton>Withdraw from sale</StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentMintMarket,\n    currentUsersPermissionsSet,\n    openBuyModal,\n    openSellModal,\n    ownedTokenIds,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              {openBuyModal && asset && selectedMintMarket && (\n                <BuyCardModal\n                  address={params.add}\n                  mint={Number(selectedMintMarket.tokenId)}\n                  price={selectedMintMarket.minimumAmount}\n                  tokenAddress={selectedMintMarket.acceptedToken}\n                  whiteListedTokens={asset.whiteListedTokens}\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n                  onClose={() => {\n                    setOpenBuyModal(!openBuyModal);\n                    setSelectedMarketTokenId(null);\n                  }}\n                />\n              )}\n              {openSellModal && asset && ownedTokenIds && activeProfile && (\n                <SellCardModal\n                  ownerProfile={activeProfile}\n                  address={params.add}\n                  mint={ownedTokenIds[currentIndex]}\n                  price={\n                    currentMintMarket\n                      ? currentMintMarket.minimumAmount\n                      : undefined\n                  }\n                  marketTokenAddress={\n                    currentMintMarket\n                      ? currentMintMarket.acceptedToken\n                      : undefined\n                  }\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0].image}\n                  onClose={() => setOpenSellModal(!openSellModal)}\n                  whiteListedTokens={asset.whiteListedTokens}\n                />\n              )}\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <StyledMintControls>\n                      <StyledMintSkipButton onClick={previousMint}>\n                        <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                      <StyledMintSliderIndex>\n                        {currentIndex + 1}/{ownedTokenIds?.length}\n                      </StyledMintSliderIndex>\n                      <StyledMintSkipButton onClick={nextMint}>\n                        <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                    </StyledMintControls>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Owner', content: renderCurrentMintOwner },\n                    { name: 'Issuer', content: renderIssuer },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  ownerContent={activeProfile && renderCurrentMintOwner}\n                  issuerContent={renderIssuer}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                <CardMarket\n                  asset={asset}\n                  cardMarkets={asset?.markets}\n                  whiteListedTokens={asset?.whiteListedTokens}\n                  onBuyClick={(tokenId: number) => {\n                    setSelectedMarketTokenId(tokenId);\n                    setOpenBuyModal(true);\n                  }}\n                />\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}