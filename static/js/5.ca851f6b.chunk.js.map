{"version":3,"sources":["utility/content/addresses.ts","components/TransactionStateWindow/styles.ts","components/TransactionStateWindow/TransactionStateWindow.tsx","hooks/useModal/useModal.ts","hooks/useTransferLsp8Token/useTransferLsp8Token.ts","components/InputField/InputField.tsx","assets/polygon.svg","features/profiles/ProfileCard/styles.ts","components/InputField/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/usePagination/usePagination.ts","utility/permissions.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","hooks/useSellLsp8Token/useSellLsp8Token.ts","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useErc20/useErc20.ts","hooks/useBuyLsp8Token/useBuyLsp8Token.ts","pages/AssetDetails/components/BuyCardButton/styles.ts","pages/AssetDetails/components/BuyCardButton/BuyCardButton.tsx","hooks/useUrlParams/useUrlParams.ts","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/TransferCardTokenIdModal/TransferCardTokenIdModal.tsx","pages/AssetDetails/SelectMintModalContent/styles.ts","pages/AssetDetails/SelectMintModalContent/SelectMintModalContent.tsx","pages/AssetDetails/AssetDetails.tsx","hooks/useRemoveMarketForLsp8Token/useRemoveMarketForLsp8Token.ts"],"names":["getDefaultAddresses","network","type","a","fetch","res","json","trimedAddress","address","slice","length","getWhiteListedTokenAddresses","polygon","mumbai","ethereum","l14","l16","StyledProcessingWindow","styled","div","height","StyledStateContent","StyledStateIcon","img","StyledStateHeading","h2","StyledStateDescription","p","StyledTryButton","button","TransactionStateWindow","state","transactionMessages","callback","transactionStatesIcons","loading","icon","PendingIcon","successful","SuccessIcon","failed","ErrorIcon","STATUS","IDLE","src","alt","mainHeading","description","FAILED","onClick","useModal","content","key","persist","useContext","ModalContext","isOpen","onDismiss","onPresent","handlePresent","useCallback","useTransferLsp8Token","cardAddress","toAddress","tokenId","profile","useState","transferState","setTransferState","error","setError","useSigner","signer","data","useNetwork","networkData","transferCard","chain","name","toast","position","LOADING","isOwnerKeyManager","KeyManagerApi","transferCardViaKeyManager","owner","then","SUCCESSFUL","catch","LSP3ProfileApi","transferCardViaUniversalProfile","resetState","InputField","label","changeHandler","align","placeholder","value","disabled","step","onChange","StyledProfileCard","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","StyledBalanceWrapper","StyledBalance","font","weight","regular","StyledPolygon","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","ProfileCard","userProfile","balance","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","Web3","utils","toChecksumAddress","data-tip","tokenIds","data-for","makeBlockie","profileImage","usePagination","range","setRange","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","mint","price","toString","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","select","SellCardModal","ownerProfile","whiteListedTokens","marketTokenAddress","amount","tokenAddress","sellForm","setSellForm","sellState","setSellState","setForSale","decimals","setCardMarketViaKeyManager","convertPrice","LSP4DigitalAssetApi","setMarketViaUniversalProfile","useSellLsp8Token","event","currentTarget","selectedTokenDecimals","selectedToken","item","marketTokenDecimals","i","whiteListedtokensAddresses","displayPrice","map","selected","symbol","variant","StyledTabsHeader","StyledTabsLabel","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","useEffect","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","status","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","setExpand","AccordionToggleIcon","StyledBuyCardModalContent","StyledInfoText","StyledPaymentText","StyledRadioGroup","StyledRadioInput","StyledRadioLabel","$checked","StyledSelectInputContainer","StyledUpAddressSelectInput","StyledUpAddressSelectLabel","StyledBuyStepsContainer","StyledBuyStep","StyledErrorMessage","BuyCardModal","useAccount","account","approveError","setApproveError","isApproved","setIsApproved","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","approve","spenderAddress","universalProfileAddress","buyer","checkBalanceOf","checkAllowance","allowance","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","approveTokenViaKeyManager","err","approveTokenViaUniversalProfile","ownerAddress","balanceOf","resetApproveState","undefined","useErc20","buyState","setBuyState","buyFromMarket","buyFromCardMarketViaKeyManager","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","useBuyLsp8Token","savedProfiles","getItems","useLocalStorage","savedProfilesAddresses","Object","keys","upAddress","setUpAddress","paymentOption","setPaymentOption","marketToken","paymentChangeHandler","target","htmlFor","isAddress","StyledCardBuyButton","BuyCardButton","useUrlParams","selectedMintMarket","market","markets","Number","token","acceptedToken","minimumAmount","lsp8MetaData","image","onDismissBuyCardModal","onPresentBuyCardModal","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","CardMarket","cardMarkets","findDecimals","findSymbol","TransferCardTokenIdModal","setToAddress","e","ethers","StyledSelectMintModalContent","StyledSelectMintListHeader","StyledSelectMintListHeaderContent","StyledSelectMintList","StyledSelectMintListContent","StyledListMint","StyledListPrice","SelectMintModalContent","ownedTokenIds","onSelect","onSelectCallback","renderMintList","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","cards","ownerStatus","creators","cardError","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","mintIdInputRef","useRef","currentIndex","setCurrentIndex","marketsForOwnedTokens","currentMintMarket","removingMarket","setRemovingMarket","removeMarket","removeMarketViaKeymanager","tokenIdAsBytes32","finally","useRemoveMarketForLsp8Token","parseInt","onDismissSellCardModal","onPresentSellCardModal","indexOf","onDismissSelectMintModal","onPresentSelectMintModal","onDismissTransferCardModal","onPresentTransferCardModal","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","push","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardInfo","valueType","totalSupply","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","color","href","exploreUrl","rel","OpenseaIcon","previousIndex","current","BackwardsIcon","min","max","defaultValue","ref","onKeyPress","blur","onBlur","val","nextIndex","ForwardsIcon","TransferIcon","title","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.ca851f6b.chunk.js","sourcesContent":["import { NetworkName } from '../../boot/types';\nimport { Address } from '../../utils/types';\n\nexport const getDefaultAddresses = async (\n  network: NetworkName,\n  type: 'assetsAddresses' | 'profileAddresses',\n): Promise<Array<Address>> => {\n  const res = await fetch(`./api/${network}/${type}.json`);\n  return res.json();\n};\n\nexport const trimedAddress = (address: Address) =>\n  `${address.slice(0, 8)}...${address.slice(\n    address.length - 4,\n    address.length,\n  )}`;\n\nexport const getWhiteListedTokenAddresses = (network: NetworkName) => {\n  const whiteListedTokens: { [key in NetworkName]: Array<string> } = {\n    polygon: [\n      '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    ],\n    mumbai: ['0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa'],\n    ethereum: ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'],\n    l14: [''],\n    l16: [''],\n  };\n\n  return whiteListedTokens[network];\n};\n","import styled from 'styled-components';\n\nexport const StyledProcessingWindow = styled.div<{ height?: 'full' }>`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: ${({ height }) => (height ? '100%' : 'calc(100% - 11em)')};\n  bottom: 0;\n  left: -0.03em;\n  border-radius: 0.625em;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const StyledStateContent = styled.div`\n  text-align: center;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledStateIcon = styled.img`\n  height: 8.5em;\n`;\n\nexport const StyledStateHeading = styled.h2`\n  margin-top: -2em;\n`;\n\nexport const StyledStateDescription = styled.p``;\n\nexport const StyledTryButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  padding: 0.3em 0;\n`;\n","import { ErrorIcon, PendingIcon, SuccessIcon } from '../../assets';\nimport { STATUS } from '../../utility';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledProcessingWindow,\n  StyledStateContent,\n  StyledStateDescription,\n  StyledStateHeading,\n  StyledStateIcon,\n  StyledTryButton,\n} from './styles';\n\ninterface IProps {\n  state: STATUS;\n  height?: 'full';\n  callback?: () => any;\n  transactionMessages: {\n    loading: {\n      mainHeading: string;\n      description?: string;\n    };\n    successful: {\n      mainHeading: string;\n      description?: string;\n    };\n    failed: {\n      mainHeading: string;\n      description?: string;\n    };\n  };\n}\n\nexport const TransactionStateWindow = ({\n  state,\n  height,\n  transactionMessages,\n  callback,\n}: IProps) => {\n  const transactionStatesIcons = {\n    loading: {\n      icon: PendingIcon,\n    },\n    successful: {\n      icon: SuccessIcon,\n    },\n    failed: {\n      icon: ErrorIcon,\n    },\n  };\n  return (\n    <>\n      {state !== STATUS.IDLE && (\n        <StyledProcessingWindow height={height}>\n          <StyledStateContent>\n            <StyledStateIcon src={transactionStatesIcons[state].icon} alt=\"\" />\n            <StyledStateHeading>\n              {transactionMessages[state].mainHeading}\n            </StyledStateHeading>\n            <StyledStateDescription>\n              {transactionMessages[state]?.description}\n            </StyledStateDescription>\n            {callback && state === STATUS.FAILED && (\n              <StyledTryButton onClick={callback}>Try again</StyledTryButton>\n            )}\n          </StyledStateContent>\n        </StyledProcessingWindow>\n      )}\n    </>\n  );\n};\n","import { useCallback, useContext } from 'react';\nimport { ModalContext, IOnPresent } from '../../context/ModalProvider';\n\nexport const useModal = (\n  ...[content, key, persist]: Parameters<IOnPresent>\n) => {\n  const { isOpen, onDismiss, onPresent } = useContext(ModalContext);\n\n  const handlePresent = useCallback(() => {\n    onPresent(content, key, persist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content, key, onPresent]);\n\n  return { handlePresent, onDismiss, isOpen };\n};\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  network: NetworkName,\n) => {\n  const [transferState, setTransferState] = useState<STATUS>(STATUS.IDLE);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n\n  const transferCard = async () => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setTransferState(STATUS.LOADING);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    transferCard,\n    transferState,\n    error,\n    resetState: () => setTransferState(STATUS.IDLE),\n  };\n};\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  align?: string;\n  placeholder?: string;\n  value?: string;\n  disabled?: boolean;\n}\n\nexport const InputField = ({\n  name,\n  label,\n  type,\n  changeHandler,\n  align,\n  placeholder,\n  value,\n  disabled,\n}: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n        align={align}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n      />\n    </StyledInputContainer>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledInputGroup,\n  StyledSellCardModalContent,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellLsp8Token } from '../../../hooks/useSellLsp8Token';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const SellCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n  network,\n}: IProps) => {\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale, sellState } = useSellLsp8Token();\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'SETTING FOR SALE...',\n    },\n    successful: {\n      mainHeading: 'SUCCESSFULLY SET FOR SALE',\n    },\n    failed: {\n      mainHeading: 'SOMETHING WENT WRONG',\n    },\n  };\n\n  return (\n    <StyledSellCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={\n          price &&\n          displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n        }\n        cardImg={cardImg}\n      />\n      {whiteListedTokens && (\n        <StyledInputGroup>\n          <InputField\n            name=\"amount\"\n            label=\"Your Price\"\n            type=\"number\"\n            changeHandler={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            {whiteListedTokens?.map((item, i) => (\n              <option\n                key={i}\n                value={item.tokenAddress}\n                selected={\n                  item.tokenAddress.toLowerCase() ===\n                  whiteListedtokensAddresses[0].toLowerCase()\n                }\n              >\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n      )}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={() =>\n            setForSale(\n              address,\n              ownerProfile,\n              mint,\n              sellForm.tokenAddress,\n              sellForm.amount,\n              selectedTokenDecimals,\n              network,\n            )\n          }\n          disabled={\n            !whiteListedTokens ||\n            whiteListedTokens?.length === 0 ||\n            sellForm.amount <= 0\n          }\n        >\n          Set for sale\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={sellState}\n        transactionMessages={transactionStatesMessages}\n      />\n    </StyledSellCardModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice, STATUS } from '../../utility';\n\nexport const useSellLsp8Token = () => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [sellState, setSellState] = useState<STATUS>(STATUS.IDLE);\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n    network: NetworkName,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setSellState(STATUS.LOADING);\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    sellState,\n    setForSale,\n    error,\n    resetState: () => setSellState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      {ownerContent && (\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Owner</StyledHeaderTitle>\n          </StyledHeader>\n          {ownerContent}\n        </StyledIssuerContainer>\n      )}\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 1rem;\n`;\n\nexport const StyledPaymentText = styled.p`\n  font-size: 0.9em;\n  font-weight: 700;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  column-gap: 0.2em;\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  text-align: center;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledBuyStepsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2em;\n  margin-top: 1.5em;\n  position: relative;\n`;\n\nexport const StyledBuyStep = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 0.5em;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  color: red;\n`;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport { useBuyLsp8Token } from '../../../hooks/useBuyLsp8Token';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledBuyCardModalContent,\n  StyledBuyStep,\n  StyledBuyStepsContainer,\n  StyledErrorMessage,\n  StyledInfoText,\n  StyledPaymentText,\n  StyledRadioGroup,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from './styles';\nimport { isAddress } from 'ethers/lib/utils';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n  network,\n}: IProps) => {\n  const { approve, isApproved, resetApproveState, approveError } = useErc20({\n    tokenAddress,\n    network,\n  });\n  const { buyFromMarket, buyState, resetState } = useBuyLsp8Token(\n    address,\n    network,\n  );\n  const { getItems } = useLocalStorage();\n  const savedProfiles = getItems(network);\n  const savedProfilesAddresses = savedProfiles\n    ? Object.keys(savedProfiles)\n    : null;\n  const [upAddress, setUpAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [paymentOption, setPaymentOption] = useState<string>('');\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUpAddress(event.currentTarget.value);\n    resetApproveState();\n  };\n\n  const paymentChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPaymentOption(event.target.value);\n    resetApproveState();\n  };\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'Purchase is being verified',\n      description:\n        'In a few moments you will know if the purchase was successful.',\n    },\n    successful: {\n      mainHeading: 'Purchase successful!',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'Purchase failed',\n      description: 'Please try again.',\n    },\n  };\n\n  return (\n    <StyledBuyCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n        cardImg={cardImg}\n      />\n      <StyledBuyStepsContainer>\n        <StyledBuyStep>\n          <StyledPaymentText>1. CHOOSE PAYMENT METHOD</StyledPaymentText>\n          <StyledRadioGroup>\n            <StyledRadioLabel htmlFor=\"up\" $checked={paymentOption === 'up'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"up\"\n                value=\"up\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Universal Profile\n            </StyledRadioLabel>\n            <StyledRadioLabel htmlFor=\"mm\" $checked={paymentOption === 'mm'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"mm\"\n                value=\"mm\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Metamask\n            </StyledRadioLabel>\n          </StyledRadioGroup>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>\n            2. CONFIRM ADDRESS & CHECK BALANCE\n          </StyledPaymentText>\n          {paymentOption === 'up' &&\n            (savedProfilesAddresses ? (\n              <StyledSelectInputContainer>\n                <StyledUpAddressSelectLabel>\n                  UP Address\n                </StyledUpAddressSelectLabel>\n                <StyledUpAddressSelectInput>\n                  {savedProfilesAddresses.map((item) => (\n                    <option key={item} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </StyledUpAddressSelectInput>\n              </StyledSelectInputContainer>\n            ) : (\n              <InputField\n                name=\"universalProfileAddress\"\n                label=\"UP Address\"\n                type=\"text\"\n                changeHandler={changeHandler}\n                disabled={paymentOption === 'up' && isApproved}\n              />\n            ))}\n          <StyledModalButton\n            disabled={\n              ((paymentOption === 'up' || paymentOption === '') &&\n                !isAddress(upAddress)) ||\n              isApproved\n            }\n            onClick={async () =>\n              await approve(\n                address,\n                price,\n                network,\n                paymentOption === 'up' ? upAddress : undefined,\n              )\n            }\n          >\n            Check balance & Approve\n          </StyledModalButton>\n          <StyledErrorMessage>{approveError}</StyledErrorMessage>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>3. CONFIRM PURCHASE</StyledPaymentText>\n          <StyledInfoText>\n            Do you confirm the purchase of this card mint for{' '}\n            {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n            {marketToken ? marketToken.symbol : ''}?\n          </StyledInfoText>\n        </StyledBuyStep>\n      </StyledBuyStepsContainer>\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!isApproved}\n          onClick={async () =>\n            await buyFromMarket(\n              address,\n              price,\n              mint,\n              paymentOption === 'up' ? upAddress : undefined,\n            )\n          }\n        >\n          Buy\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={buyState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledBuyCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useAccount, useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [approveError, setApproveError] = useState<string>();\n  const [isApproved, setIsApproved] = useState<boolean>(false);\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n\n    const balance = await checkBalanceOf(buyer);\n\n    if (balance < amount) {\n      setApproveError('Not enough balance');\n      return;\n    }\n\n    const allowance = await checkAllowance(buyer, spenderAddress);\n\n    if (allowance && allowance >= amount) {\n      setIsApproved(true);\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    } else {\n      await erc20Contract\n        .approve(spenderAddress, amount)\n        .then(() => {\n          setIsApproved(true);\n        })\n        .catch((err) => {\n          setError(err);\n        });\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  const resetApproveState = () => {\n    setIsApproved(false);\n    setApproveError(undefined);\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n    isApproved,\n    resetApproveState,\n    approveError,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { STATUS } from '../../utility';\n\nexport const useBuyLsp8Token = (assetAddress: string, network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [buyState, setBuyState] = useState<STATUS>(STATUS.IDLE);\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setBuyState(STATUS.LOADING);\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n  };\n\n  return {\n    buyFromMarket,\n    error,\n    buyState,\n    resetState: () => setBuyState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n  width: 100%;\n`;\n","import { useMemo } from 'react';\nimport { useModal } from '../../../../hooks/useModal';\nimport { useUrlParams } from '../../../../hooks/useUrlParams';\nimport { ICard } from '../../../../services/models';\nimport { BuyCardModal } from '../../BuyCardModal';\nimport { StyledCardBuyButton } from './styles';\n\ninterface IProps {\n  asset: ICard;\n  mint: number;\n}\n\nexport const BuyCardButton = ({ asset, mint }: IProps) => {\n  const { network, tokenId } = useUrlParams();\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset.markets.find((item) => Number(item.tokenId) === mint);\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, mint]);\n\n  const {\n    handlePresent: onPresentBuyCardModal,\n    onDismiss: onDismissBuyCardModal,\n  } = useModal(\n    asset && selectedMintMarket && (\n      <BuyCardModal\n        address={asset.address}\n        mint={Number(selectedMintMarket.tokenId)}\n        price={selectedMintMarket.minimumAmount}\n        tokenAddress={selectedMintMarket.acceptedToken}\n        whiteListedTokens={asset.whiteListedTokens}\n        cardImg={asset.lsp8MetaData[tokenId ? tokenId : 0]?.image}\n        onDismiss={() => {\n          onDismissBuyCardModal();\n        }}\n        network={network}\n      />\n    ),\n    'Buy Card Modal',\n    'Buy Card',\n  );\n\n  return (\n    <StyledCardBuyButton onClick={onPresentBuyCardModal}>\n      {' '}\n      Buy{' '}\n    </StyledCardBuyButton>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { BuyCardButton } from '../components/BuyCardButton';\nimport {\n  StyledCardMarket,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            {/* <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy> */}\n            <BuyCardButton asset={asset} mint={Number(market.tokenId)} />\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { Modal } from '../../../components';\nimport { InputField } from '../../../components/InputField';\nimport {\n  StyledModalButtonsWrapper,\n  StyledModalButton,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IProfile } from '../../../services/models';\n\ninterface TransferCardTokenIdModalProps {\n  cardAddress: string;\n  tokenId: number;\n  profile: IProfile;\n  onDismiss: () => any;\n  network: NetworkName;\n}\n\nexport const TransferCardTokenIdModal = ({\n  cardAddress,\n  tokenId,\n  profile,\n  onDismiss,\n  network,\n}: TransferCardTokenIdModalProps) => {\n  const [toAddress, setToAddress] = useState<string>('');\n\n  const { transferCard, transferState, resetState } = useTransferLsp8Token(\n    cardAddress,\n    toAddress,\n    tokenId,\n    profile,\n    network,\n  );\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'TRANSFERING CARD...',\n    },\n    successful: {\n      mainHeading: 'TRANSFER SUCCESSFULL',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'TRANSFER FAILED',\n    },\n  };\n\n  return (\n    <>\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={(e) => setToAddress(e.target.value)}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n        value={toAddress}\n      />\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={transferCard}\n          disabled={!ethers.utils.isAddress(toAddress)}\n        >\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={transferState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectMintModalContent = styled.div`\n  max-height: 40em;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectMintListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledSelectMintListHeaderContent = styled.h4``;\n\nexport const StyledSelectMintList = styled.div`\n  overflow-y: scroll;\n`;\n\nexport const StyledSelectMintListContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 1em;\n  cursor: pointer;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledListMint = styled.p``;\n\nexport const StyledListPrice = styled.p``;\n","import { useMemo } from 'react';\nimport { IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledListMint,\n  StyledListPrice,\n  StyledSelectMintList,\n  StyledSelectMintListContent,\n  StyledSelectMintListHeader,\n  StyledSelectMintListHeaderContent,\n  StyledSelectMintModalContent,\n} from './styles';\n\ninterface IProps {\n  ownedTokenIds: number[];\n  markets: IMarket[];\n  whiteListedTokens: IWhiteListedTokens[];\n  onSelect: (index: number) => void;\n  onSelectCallback: () => void;\n}\n\nexport const SelectMintModalContent = ({\n  ownedTokenIds,\n  markets,\n  whiteListedTokens,\n  onSelect,\n  onSelectCallback,\n}: IProps) => {\n  const renderMintList = useMemo(\n    () =>\n      ownedTokenIds.map((id) => {\n        const market = markets.find((item) => Number(item.tokenId) === id);\n        const token =\n          market &&\n          whiteListedTokens.find(\n            (i) => i.tokenAddress === market.acceptedToken,\n          );\n        return (\n          <StyledSelectMintListContent\n            onClick={() => {\n              onSelect(id);\n              onSelectCallback();\n            }}\n          >\n            <StyledListMint>{id}</StyledListMint>\n            <StyledListPrice>\n              {market && token\n                ? `${displayPrice(\n                    market?.minimumAmount.toString(),\n                    token?.decimals,\n                  )} ${token.symbol}`\n                : '-'}\n            </StyledListPrice>\n          </StyledSelectMintListContent>\n        );\n      }),\n    [markets, onSelect, onSelectCallback, ownedTokenIds, whiteListedTokens],\n  );\n\n  return (\n    <StyledSelectMintModalContent>\n      <StyledSelectMintListHeader>\n        <StyledSelectMintListHeaderContent>\n          Mint\n        </StyledSelectMintListHeaderContent>\n        <StyledSelectMintListHeaderContent>\n          Price\n        </StyledSelectMintListHeaderContent>\n      </StyledSelectMintListHeader>\n      <StyledSelectMintList>{renderMintList}</StyledSelectMintList>\n    </StyledSelectMintModalContent>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n  TransferIcon,\n  OpenseaIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n  StyledMintSliderInput,\n  StyledSelectMintModalButton,\n  StyledOpenseaIcon,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\nimport { useRemoveMarketForLsp8Token } from '../../hooks/useRemoveMarketForLsp8Token';\nimport { useModal } from '../../hooks/useModal';\nimport { TransferCardTokenIdModal } from './TransferCardTokenIdModal';\nimport { SelectMintModalContent } from './SelectMintModalContent';\nimport { BuyCardButton } from './components/BuyCardButton';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const history = useHistory();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state.cards[params.network], params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector(\n    (state: RootState) => state.cards[params.network].error,\n  );\n\n  const cardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status,\n  );\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards[params.network].marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards[params.network].metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const mintIdInputRef = useRef<HTMLInputElement>(null);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const dispatch = useAppDispatch();\n\n  const { transferCard, transferState } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    ownedTokenIds ? ownedTokenIds[currentIndex] : 0,\n    activeProfile ? activeProfile : ({} as IProfile),\n    params.network,\n  );\n\n  const { removeMarket, removingMarket } = useRemoveMarketForLsp8Token(\n    params.add,\n    parseInt(params.id),\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const {\n    handlePresent: onPresentSellCardModal,\n    onDismiss: onDismissSellCardModal,\n  } = useModal(\n    asset && ownedTokenIds && activeProfile && (\n      <SellCardModal\n        ownerProfile={activeProfile}\n        address={params.add}\n        mint={ownedTokenIds[currentIndex]}\n        price={currentMintMarket ? currentMintMarket.minimumAmount : undefined}\n        marketTokenAddress={\n          currentMintMarket ? currentMintMarket.acceptedToken : undefined\n        }\n        cardImg={asset.lsp8MetaData[params.id ? params.id : 0]?.image}\n        onDismiss={() => onDismissSellCardModal()}\n        whiteListedTokens={asset.whiteListedTokens}\n        network={params.network}\n      />\n    ),\n    'Sell Card Modal',\n    'Sell Card',\n  );\n\n  const {\n    handlePresent: onPresentSelectMintModal,\n    onDismiss: onDismissSelectMintModal,\n  } = useModal(\n    ownedTokenIds && asset && (\n      <SelectMintModalContent\n        ownedTokenIds={ownedTokenIds}\n        markets={asset.markets}\n        whiteListedTokens={asset.whiteListedTokens}\n        onSelect={(tokenId: number) => {\n          setCurrentIndex(ownedTokenIds.indexOf(Number(tokenId)));\n        }}\n        onSelectCallback={() => onDismissSelectMintModal()}\n      />\n    ),\n    'Select Mint Modal',\n    'Select Mint',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardModal,\n    onDismiss: onDismissTransferCardModal,\n  } = useModal(\n    <>\n      {activeProfile && (\n        <TransferCardTokenIdModal\n          cardAddress={params.add}\n          tokenId={parseInt(params.id)}\n          profile={activeProfile}\n          onDismiss={() => onDismissTransferCardModal()}\n          network={params.network}\n        />\n      )}\n    </>,\n    'Card Transfer Modal',\n    'Transfer Card',\n  );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.lsp8MetaData) &&\n      metaDataStatus === STATUS.IDLE\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState(params.network));\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  // const cardProperties = useMemo(\n  //   () => [\n  //     {\n  //       label: 'Tier',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.tier,\n  //       icon: TierPropertyIcon,\n  //     },\n  //     {\n  //       label: 'Edition',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.edition,\n  //       icon: EditionPropertyIcon,\n  //     },\n  //     {\n  //       label: 'Category',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.editionCategory,\n  //       icon: CategoryPropertyIcon,\n  //     },\n  //     {\n  //       label: 'Set',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.editionSet,\n  //       icon: SetPropertyIcon,\n  //     },\n  //     {\n  //       label: 'Season',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.season,\n  //       icon: SeasonPropertyIcon,\n  //     },\n  //     {\n  //       label: 'Zone',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.zoneLabel,\n  //       icon: ZonePropertyIcon,\n  //     },\n  //     {\n  //       label: 'League',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.leagueLabel,\n  //       icon: SubzonePropertyIcon,\n  //     },\n  //     {\n  //       label: 'Team',\n  //       value:\n  //         asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n  //           ?.teamLabel,\n  //       icon: TeamPropertyIcon,\n  //     },\n  //   ],\n  //   [asset, currentIndex, ownedTokenIds],\n  // );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value:\n        ownedTokenIds && ownedTokenIds.length > 0\n          ? ownedTokenIds[currentIndex].toString()\n          : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (nextIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (previousIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const mintChangeHelper = (mint: number) => {\n    if (ownedTokenIds && mint > 0 && mint <= ownedTokenIds.length) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[mint - 1]}`,\n      );\n      setCurrentIndex(mint - 1);\n    }\n  };\n\n  const onEnterHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    const val = Number(event.target.value);\n    mintChangeHelper(val);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            {asset && ownedTokenIds && (\n              <BuyCardButton asset={asset} mint={ownedTokenIds[currentIndex]} />\n            )}\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={onPresentSellCardModal}>\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton onClick={onPresentSellCardModal}>\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton onClick={removeMarket}>\n              {removingMarket ? 'Withdrawing from sale…' : 'Withdraw from sale'}\n            </StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentUsersPermissionsSet,\n    currentMintMarket,\n    ownedTokenIds,\n    asset,\n    currentIndex,\n    onPresentSellCardModal,\n    transferCard,\n    transferState,\n    removeMarket,\n    removingMarket,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.lsp8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.lsp8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.lsp8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    }\n    // } else {\n    //   return cardProperties.map((item) => (\n    //     <StyledCardPropertyContainer key={item.label}>\n    //       <StyledCardPropertyIconWrapper>\n    //         <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n    //       </StyledCardPropertyIconWrapper>\n    //       <StyledCardProperty>\n    //         <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n    //         <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n    //       </StyledCardProperty>\n    //     </StyledCardPropertyContainer>\n    //   ));\n    // }\n  }, [asset, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.lsp8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {ownedTokenIds && params.network === 'polygon' && (\n                    <a\n                      href={`https://opensea.io/assets/matic/${params.add}/${ownedTokenIds[currentIndex]}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <StyledOpenseaIcon src={OpenseaIcon} alt=\"\" />\n                    </a>\n                  )}\n                  {wasActiveProfile && ownedTokenIds && (\n                    <>\n                      <StyledMintControls>\n                        <StyledMintSkipButton onClick={previousMint}>\n                          <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledMintSliderIndex>\n                          <StyledMintSliderInput\n                            type=\"number\"\n                            min={1}\n                            max={ownedTokenIds.length}\n                            defaultValue={currentIndex + 1}\n                            ref={mintIdInputRef}\n                            onKeyPress={onEnterHandler}\n                            onBlur={onBlurHandler}\n                          />\n                          /{ownedTokenIds.length}\n                        </StyledMintSliderIndex>\n                        <StyledMintSkipButton onClick={nextMint}>\n                          <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledSelectMintModalButton\n                          onClick={onPresentSelectMintModal}\n                        >\n                          Select Mint\n                        </StyledSelectMintModalButton>\n                      </StyledMintControls>\n                    </>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        {ownedTokenIds &&\n                          currentUsersPermissionsSet.call === '1' && (\n                            <StyledReloadPriceAction>\n                              <StyledActionIcon\n                                src={TransferIcon}\n                                alt=\"transfer\"\n                                title=\"transfer\"\n                                onClick={onPresentTransferCardModal}\n                              />\n                            </StyledReloadPriceAction>\n                          )}\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ReloadIcon}\n                            alt=\"reload\"\n                            title=\"reload\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ShareIcon}\n                            alt=\"share\"\n                            title=\"share\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={OptionIcon}\n                            alt=\"options\"\n                            title=\"options\"\n                          />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Owner', content: renderCurrentMintOwner },\n                    { name: 'Issuer', content: renderIssuer },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  ownerContent={activeProfile && renderCurrentMintOwner}\n                  issuerContent={renderIssuer}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                {asset && (\n                  <CardMarket\n                    asset={asset}\n                    cardMarkets={asset?.markets}\n                    whiteListedTokens={asset?.whiteListedTokens}\n                  />\n                )}\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useRemoveMarketForLsp8Token = (\n  cardAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [removingMarket, setRemovingMarket] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const removeMarket = async () => {\n    setRemovingMarket(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.removeMarketViaKeymanager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    } else {\n      await LSP3ProfileApi.removeMarket(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    }\n  };\n\n  return { removeMarket, removingMarket, error };\n};\n"],"sourceRoot":""}