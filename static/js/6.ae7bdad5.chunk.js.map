{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","pages/AssetDetails/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","components/Accordion/styles.ts","components/Accordion/Accordion.tsx","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledProfileCard","styled","Link","demo","sm","StyledProfileDetailWrappar","div","StyledBalanceWrappar","StyledBalance","p","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","StyledAssetDetailsContentWrappar","StyledCardError","h1","StyledLoadingHolder","StyledLoader","Puff","StyledAssetDetailContent","md","xl","StyledCardMainDetails","StyledMediaWrapper","BgMetaCard","StyledMedia","StyledCardInfoWrapper","StyledCardPriceWrapper","StyledCardPriceWrapperHeader","StyledCardPriceLabel","StyledQuickActions","StyledReloadPriceAction","button","StyledActionIcon","StyledCardPriceValueWrapper","StyledTokenIcon","StyledCardPriceValue","StyledActionsButtonWrapper","StyledBuyButton","StyledMakeOfferButton","StyledCardInfo","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","className","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","StyledAccordionWrapper","$expanded","StyledAccordionHeader","StyledAccordionTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","Accordion","title","children","enableToggle","useState","expand","setExpand","onClick","AccordionToggleIcon","AssetDetails","profiles","useSelector","state","selectUserIds","userData","selectCardById","owner","selectUserById","holders","selectAllUsersItems","filter","item","some","i","creators","cardError","cards","error","cardStatus","status","dispatch","useAppDispatch","a","id","LSP4DigitalAssetApi","getTokenSale","Number","fetchProfileByAddress","fetchCard","addresses","forEach","includes","push","fetchAssetHolders","fetchAssetCreator","useEffect","window","scrollTo","findBalanceOf","Fragment","getContent","dataTip","map","creator","holder","split","ls8MetaData","cardType","tierLabel","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","color","image","ReloadIcon","ShareIcon","OptionIcon","WethIcon"],"mappings":"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","file":"static/js/6.ae7bdad5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\nimport { sm } from '../../../utility';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${sm} {\n    width: ${({ demo }) => (demo ? '212px' : '117px')};\n  }\n`;\n\nexport const StyledProfileDetailWrappar = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrappar = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: 400;\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import { Puff } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport { BgMetaCard } from '../../assets';\nimport { md, xl } from '../../utility';\n\nexport const StyledAssetDetailsContentWrappar = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nexport const StyledCardError = styled.h1`\n  font-size: 30px;\n  margin: 60px auto 0 auto;\n`;\n\nexport const StyledLoadingHolder = styled.div`\n  margin: auto;\n`;\n\nexport const StyledLoader = styled(Puff)`\n  margin: 0 auto 0 auto;\n  height: 400px;\n`;\n\nexport const StyledAssetDetailContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @media ${md} {\n    max-width: 1440px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 48px 40px 0 40px;\n  }\n\n  @media ${xl} {\n    padding: 48px 40px 0 40px;\n  }\n`;\n\n// export const StyledGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(2, 392px);\n//     margin: 0 auto 0 auto;\n//     column-gap: 20px;\n//   }\n\n//   @media ${xl} {\n//     grid-template-columns: 2fr 1fr;\n//     column-gap: 10px;\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledAssetDetailGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n//   column-gap: 10px;\n//   row-gap: 20px;\n\n//   @media ${xl} {\n//     grid-template-columns: repeat(2, 1fr);\n//   }\n// `;\n\n// export const StyledMediaWrappar = styled.div`\n//   position: relative;\n//   background: url(${BgMetaCard});\n//   background-position: center;\n//   background-repeat: no-repeat;\n//   background-size: cover;\n//   display: flex;\n//   height: 473px;\n\n//   @media ${sm} {\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//   }\n// `;\n\n// export const StyledMetaCardImg = styled.img`\n//   width: 221px;\n//   margin: auto;\n// `;\n\n// export const StyledStatsName = styled.h1`\n//   position: absolute;\n//   left: 5%;\n//   margin-top: 10px;\n//   font-size: 24px;\n//   font-weight: 700;\n// `;\n\n// export const StyledUniversalProfileIcon = styled.img`\n//   position: absolute;\n//   width: 44px;\n//   height: 44px;\n//   bottom: 5%;\n//   left: 10%;\n//   animation: ${pulseAnimate} 2s ease-in-out infinite;\n// `;\n\n// export const StyledBlockScoutIcon = styled.img`\n//   position: absolute;\n//   width: 44px;\n//   height: 44px;\n//   bottom: 5%;\n//   right: 10%;\n//   animation: ${pulseAnimate} 2s ease-in-out infinite;\n// `;\n\n// export const StyledDetailsWrappar = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 10px 0px 0px 0px;\n\n//   @media ${sm} {\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     min-height: 473px;\n//   }\n// `;\n\n// export const StyledCardInfoLabel = styled.h2`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin: 0 8px 10px 8px;\n//   border-width: 0 0 1px 0;\n//   border-style: solid;\n//   border-color: white;\n//   padding-bottom: 5px;\n\n//   @media ${sm} {\n//     margin: 0 20px 5px 20px;\n//   }\n// `;\n\n// export const StyledInfoGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 35% 1fr;\n//   padding: 0 8px 5px 8px;\n//   row-gap: 10px;\n\n//   @media ${sm} {\n//     padding: 0 20px 0 20px;\n//   }\n// `;\n\nexport const StyledLabel = styled.p`\n  font-size: 15px;\n`;\n\n// export const StyledValue = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   text-transform: capitalize;\n// `;\n\n// export const StyledFullName = styled.p`\n//   font-size: 15px;\n//   font-weight: 700;\n//   margin: 0 10px 0 10px;\n//   padding: 15px 0 15px 0;\n//   border-width: 2px 0 2px 0;\n//   border-style: solid;\n//   border-color: rgba(255, 255, 255, 0.25);\n//   line-height: 17px;\n\n//   @media ${sm} {\n//     margin: 0;\n//     padding: 15px 20px 15px 20px;\n//     border-width: 2px 0 0 0;\n//     margin-top: auto;\n//   }\n// `;\n\n// export const StyledExtraInfo = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   height: max-content;\n//   padding: 0 8px 0 8px;\n//   margin-top: 20px;\n\n//   @media ${sm} {\n//     padding: 0;\n//   }\n\n//   @media ${lg} {\n//     margin: 0;\n//     background: linear-gradient(\n//         180deg,\n//         rgba(255, 255, 255, 0) 0%,\n//         rgba(255, 255, 255, 0.08) 100%\n//       ),\n//       #212121;\n//     border-radius: 10px;\n//     border: 1px solid rgba(255, 255, 255, 0.15);\n//     box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.25);\n//     padding: 15px 10px 15px 10px;\n//   }\n// `;\n\n// export const StyledIssuerLabel = styled.h3`\n//   font-size: 18px;\n//   font-weight: 700;\n//   margin-bottom: 10px;\n\n//   @media ${lg} {\n//     width: 116px;\n//     border-width: 0 0 1px 0;\n//     border-style: solid;\n//     border-color: rgba(223, 223, 223, 1);\n//   }\n// `;\n\n// export const StyledCreatorLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n// `;\n\n// export const StyledHolderLabel = styled(StyledIssuerLabel)`\n//   margin-top: 10px;\n//   margin-left: 8px;\n//   border: none;\n\n//   @media ${sm} {\n//     margin-left: 48px;\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//   }\n// `;\n\n// export const StyledIssuerWrappar = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   justify-items: center;\n//   column-gap: 5px;\n//   row-gap: 10px;\n//   /*\n//     @media ${sm} {\n//         grid-template-columns: repeat(3, 1fr);\n//     } */\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(3, 1fr);\n//   }\n// `;\n\n// export const StyledCreatorWrappar = styled(StyledIssuerWrappar)``;\n\n// export const StyledHolderWrappar = styled(StyledIssuerWrappar)`\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   margin: 0 8px 0 8px;\n//   justify-items: center;\n\n//   @media ${sm} {\n//     margin: 0 48px 0 48px;\n//   }\n\n//   @media ${md} {\n//     grid-template-columns: repeat(4, 1fr);\n//   }\n\n//   @media ${lg} {\n//     grid-template-columns: repeat(5, 1fr);\n//   }\n\n//   @media ${xl} {\n//     margin: 0;\n//     grid-template-columns: repeat(6, 1fr);\n//   }\n// `;\n\n// Re designed styled components\n\nexport const StyledCardMainDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 20px;\n    height: 590px;\n  }\n`;\n\nexport const StyledMediaWrapper = styled.div`\n  display: flex;\n  background: url(${BgMetaCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 445px;\n\n  @media ${md} {\n    width: 50%;\n    border-radius: 10px;\n    border: 1px solid rgba(255, 255, 255, 0.25);\n    height: 100%;\n  }\n`;\n\nexport const StyledMedia = styled.img`\n  width: 230px;\n  margin: auto;\n`;\n\nexport const StyledCardInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${md} {\n    width: 50%;\n    row-gap: 20px;\n  }\n`;\n\nexport const StyledCardPriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  row-gap: 10px;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 98.49%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledCardPriceWrapperHeader = styled.div`\n  display: flex;\n`;\n\nexport const StyledCardPriceLabel = styled.p``;\n\nexport const StyledQuickActions = styled.div`\n  display: grid;\n  width: 110px;\n  height: 30px;\n  grid-template-columns: repeat(3, 1fr);\n  margin-left: auto;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 5px;\n`;\n\nexport const StyledReloadPriceAction = styled.button`\n  display: flex;\n  border-right: 1px solid rgba(255, 255, 255, 0.15);\n`;\n\nexport const StyledShareCardAction = styled(StyledReloadPriceAction)``;\n\nexport const StyledOptionAction = styled(StyledReloadPriceAction)`\n  border-right: none;\n`;\n\nexport const StyledActionIcon = styled.img`\n  margin: auto;\n`;\n\nexport const StyledCardPriceValueWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledTokenIcon = styled.img``;\n\nexport const StyledCardPriceValue = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledActionsButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n\n  @media ${md} {\n    flex-direction: row;\n    column-gap: 10px;\n  }\n`;\n\nexport const StyledBuyButton = styled.button`\n  width: 100%;\n  background: rgba(255, 129, 1, 1);\n  border-radius: 5px;\n  padding: 7px 0;\n\n  @media ${md} {\n    width: 50%;\n  }\n`;\n\nexport const StyledMakeOfferButton = styled(StyledBuyButton)`\n  background: rgba(255, 255, 255, 0.2);\n`;\n\nexport const StyledCardInfo = styled.div``;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrappar,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrappar,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      className=\"animate-cardrender\"\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrappar demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrappar>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrappar demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrappar>\n    </StyledProfileCard>\n  );\n};\n","import styled from 'styled-components';\nimport { md } from '../../utility';\n\nexport const StyledAccordionWrapper = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  height: ${({ $expanded }) => ($expanded ? 'max-content' : '62px')};\n  overflow: hidden;\n\n  @media ${md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  height: 40px;\n`;\n\nexport const StyledAccordionTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionTitle,\n  StyledAccordionToggleButton,\n  StyledAccordionWrapper,\n} from './styles';\n\ninterface IProps {\n  title: string;\n  children: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const Accordion: React.FC<IProps> = ({\n  title,\n  children,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledAccordionWrapper $expanded={expand}>\n      <StyledAccordionHeader $expanded={expand}>\n        <StyledAccordionTitle>{title}</StyledAccordionTitle>\n        {enableToggle && (\n          <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n            <StyledAccordiomToggleIcon\n              $expanded={expand}\n              src={AccordionToggleIcon}\n              alt=\"\"\n            />\n          </StyledAccordionToggleButton>\n        )}\n      </StyledAccordionHeader>\n      {children}\n    </StyledAccordionWrapper>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport { OptionIcon, ReloadIcon, ShareIcon, WethIcon } from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport { fetchCard, selectCardById } from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchAssetHolders,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport { IProfile } from '../../services/models';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrappar,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledTokenIcon,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledMakeOfferButton,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { getChainExplorer } from '../../utility';\nimport ReactTooltip from 'react-tooltip';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { useSigner } from 'wagmi';\nimport { Accordion } from '../../components/Accordion';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const params = useParams<IPrams>();\n\n  const profiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  })?.filter((item) => {\n    return asset?.holders.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const dispatch = useAppDispatch();\n\n  const tokenIdForSale = useMemo(\n    async () =>\n      params.id &&\n      (await LSP4DigitalAssetApi.getTokenSale(\n        params.add,\n        Number(params.id),\n        params.network,\n      )),\n    [params.add, params.network, params.id],\n  );\n\n  useMemo(() => {\n    if (!owner && asset) {\n      dispatch(\n        fetchProfileByAddress({\n          address: asset.owner,\n          network: params.network,\n        }),\n      );\n    }\n  }, [asset, dispatch, owner, params.network]);\n\n  useMemo(() => {\n    if (!asset) {\n      dispatch(fetchCard({ address: params.add, network: params.network }));\n    }\n  }, [asset, dispatch, params.add, params.network]);\n\n  useMemo(() => {\n    let addresses: string[] = [];\n    asset?.holders.forEach((item) => {\n      if (!profiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetHolders({ address: addresses, network: params.network }),\n      );\n    }\n  }, [asset?.holders, dispatch, params.network, profiles]);\n\n  useMemo(() => {\n    let addresses: string[] = [];\n    asset?.creators.forEach((item) => {\n      if (!profiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n  }, [asset?.creators, dispatch, params.network, profiles]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [params.add, params.network]);\n\n  const renderOwner = useMemo(() => {\n    if (asset?.address === params.add) {\n      if (owner?.address === asset.owner) {\n        const findBalanceOf = owner.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={owner.address}>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }\n    }\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderDesigners = useMemo(\n    () =>\n      creators?.map((creator: IProfile) => {\n        const findBalanceOf = creator.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={creator.address}>\n            <ProfileCard\n              userProfile={creator}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"creator\"\n              tooltipId=\"designerTooltip\"\n            />\n            <ReactTooltip\n              id=\"designerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }),\n    [creators, params.add],\n  );\n\n  const renderHolders = useMemo(\n    () =>\n      holders?.map((holder: IProfile) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <React.Fragment key={holder.address}>\n            <ProfileCard\n              userProfile={holder}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </React.Fragment>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  const metaCardInfo = [\n    { text: 'Name', data: asset?.name.split('•')[0] },\n    { text: 'Card Type', data: asset?.ls8MetaData.cardType },\n    { text: 'Rarity', data: asset?.ls8MetaData.tierLabel },\n    { text: 'Edition', data: asset?.ls8MetaData.edition },\n    { text: 'Category', data: asset?.ls8MetaData.editionCategory },\n    { text: 'Set', data: asset?.ls8MetaData.editionSet },\n    { text: 'Season', data: asset?.ls8MetaData.season },\n    { text: 'Zone', data: asset?.ls8MetaData.zoneLabel },\n    { text: 'League', data: asset?.ls8MetaData.leagueLabel },\n    { text: 'Team', data: asset?.ls8MetaData.teamLabel },\n  ];\n\n  // const renderCardProperties = useMemo(() => {\n  //   const keys = asset && Object.keys(asset && asset.ls8MetaData);\n  //   if (\n  //     keys &&\n  //     keys.includes('attributes') &&\n  //     asset &&\n  //     asset.ls8MetaData.attributes.length > 0\n  //   ) {\n  //     return asset.ls8MetaData.attributes.map((attribute: any, i) => (\n  //       <React.Fragment key={i}>\n  //         <StyledLabel>{attribute.trait_type}</StyledLabel>\n  //         {Object.keys(attribute).includes('max_value') ? (\n  //           <StyledValue>\n  //             {attribute.value} of {attribute.max_value}\n  //           </StyledValue>\n  //         ) : (\n  //           <StyledValue>{attribute.value}</StyledValue>\n  //         )}\n  //       </React.Fragment>\n  //     ));\n  //   } else {\n  //     return metaCardInfo.map((items, i) => (\n  //       <React.Fragment key={i}>\n  //         <StyledLabel>{items.text}</StyledLabel>\n  //         <StyledValue>{items.data}</StyledValue>\n  //       </React.Fragment>\n  //     ));\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [asset]);\n\n  return (\n    <StyledAssetDetailsContentWrappar>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  <StyledMedia src={asset?.ls8MetaData.image} alt=\"\" />\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    <StyledCardPriceValueWrapper>\n                      <StyledTokenIcon src={WethIcon} alt=\"\" />\n                      <StyledCardPriceValue>\n                        11.5 ($35,023.25)\n                      </StyledCardPriceValue>\n                    </StyledCardPriceValueWrapper>\n                    <StyledActionsButtonWrapper>\n                      <StyledBuyButton>Buy now</StyledBuyButton>\n                      <StyledMakeOfferButton>Make offer</StyledMakeOfferButton>\n                    </StyledActionsButtonWrapper>\n                  </StyledCardPriceWrapper>\n                  <Accordion title=\"Card Info\" enableToggle>\n                    <StyledCardInfo></StyledCardInfo>\n                  </Accordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {/* <StyledGrid>\n                <StyledAssetDetailGrid>\n                  <StyledMediaWrappar>\n                    {params.network === 'l14' && (\n                      <a\n                        href={\n                          'https://universalprofile.cloud/asset/' +\n                          asset?.address\n                        }\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <StyledUniversalProfileIcon\n                          src={UniversalProfileIcon}\n                          alt=\"\"\n                        />\n                      </a>\n                    )}\n                    <a\n                      href={explorer && explorer.exploreUrl + asset?.address}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <StyledBlockScoutIcon src={explorer?.icon} alt=\"\" />\n                    </a>\n                    <StyledStatsName>{metaCardInfo[0].data}</StyledStatsName>\n                    <StyledMetaCardImg src={asset?.ls8MetaData.image} alt=\"\" />\n                  </StyledMediaWrappar>\n                  <StyledDetailsWrappar>\n                    <StyledCardInfoLabel>Card Info</StyledCardInfoLabel>\n                    <StyledInfoGrid>{renderCardProperties}</StyledInfoGrid>\n                    <StyledFullName>{asset?.name}</StyledFullName>\n                  </StyledDetailsWrappar>\n                </StyledAssetDetailGrid>\n                <StyledExtraInfo>\n                  <StyledIssuerLabel>Issuer</StyledIssuerLabel>\n                  <StyledIssuerWrappar>{renderOwner}</StyledIssuerWrappar>\n                  <StyledCreatorLabel>Creator</StyledCreatorLabel>\n                  <StyledCreatorWrappar>{renderDesigners}</StyledCreatorWrappar>\n                </StyledExtraInfo>\n              </StyledGrid>\n              <StyledHolderLabel>Holder</StyledHolderLabel>\n              <StyledHolderWrappar>{renderHolders}</StyledHolderWrappar> */}\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrappar>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}