{"version":3,"sources":["hooks/useTransferLsp8Token/useTransferLsp8Token.ts","assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/useModal/useModal.ts","hooks/usePagination/usePagination.ts","components/InputField/styles.ts","utility/permissions.ts","components/InputField/InputField.tsx","hooks/useSellBuyLsp8Token/useSellBuyLsp8Token.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useErc20/useErc20.ts","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/TransferCardTokenIdModal/TransferCardTokenIdModal.tsx","pages/AssetDetails/SelectMintModalContent/styles.ts","pages/AssetDetails/SelectMintModalContent/SelectMintModalContent.tsx","pages/AssetDetails/AssetDetails.tsx","hooks/useRemoveMarketForLsp8Token/useRemoveMarketForLsp8Token.ts"],"names":["useTransferLsp8Token","cardAddress","toAddress","tokenId","profile","callback","useState","transfering","setTransfering","error","setError","useSigner","signer","data","transferCard","a","isOwnerKeyManager","KeyManagerApi","transferCardViaKeyManager","address","owner","then","catch","finally","LSP3ProfileApi","transferCardViaUniversalProfile","StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","useModal","content","key","persist","useContext","ModalContext","isOpen","onDismiss","onPresent","handlePresent","useCallback","usePagination","range","setRange","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","align","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","InputField","label","changeHandler","placeholder","value","step","onChange","useSellBuyLsp8Token","useAccount","buyFromMarket","amount","universalProfileAddress","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","buyFromCardMarketViaKeyManager","LSP4DigitalAssetApi","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","setForSale","ownerProfile","mint","tokenAddress","decimals","setCardMarketViaKeyManager","convertPrice","setMarketViaUniversalProfile","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","price","slice","toString","StyledBuyCardModalContent","StyledInfoText","StyledToggleButtonGroup","StyledToggleButton","button","$active","StyledSelectInputContainer","StyledUpAddressSelectInput","select","StyledUpAddressSelectLabel","StyledButtonGroup","StyledBuyButton","StyledCancelButton","StyledApproveButton","BuyCardModal","onClose","whiteListedTokens","approve","account","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","spenderAddress","buyer","checkBalanceOf","checkAllowance","allowance","approveTokenViaKeyManager","approveTokenViaUniversalProfile","ownerAddress","balanceOf","useErc20","savedProfiles","getItems","useLocalStorage","savedProfilesAddresses","Object","keys","upAddress","setUpAddress","toggleEOABuy","setToggleEOABuy","marketToken","i","displayPrice","onClick","map","item","event","currentTarget","undefined","symbol","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","StyledSetPriceButton","SellCardModal","marketTokenAddress","sellForm","setSellForm","selectedTokenDecimals","selectedToken","marketTokenDecimals","useEffect","disabled","StyledTabsHeader","StyledTabsLabel","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","STATUS","LOADING","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","status","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","setExpand","AccordionToggleIcon","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","StyledCardMarketBuy","CardMarket","cardMarkets","onBuyClick","findDecimals","findSymbol","market","Number","minimumAmount","acceptedToken","TransferCardTokenIdModal","setToAddress","e","target","topMargin","ethers","isAddress","StyledSelectMintModalContent","StyledSelectMintListHeader","StyledSelectMintListHeaderContent","StyledSelectMintList","StyledSelectMintListContent","StyledListMint","StyledListPrice","SelectMintModalContent","ownedTokenIds","markets","onSelect","onSelectCallback","renderMintList","token","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","ownerStatus","creators","cardError","cards","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","mintIdInputRef","useRef","currentIndex","setCurrentIndex","selectedMarketTokenId","setSelectedMarketTokenId","marketsForOwnedTokens","currentMintMarket","selectedMintMarket","removingMarket","setRemovingMarket","removeMarket","removeMarketViaKeymanager","tokenIdAsBytes32","useRemoveMarketForLsp8Token","parseInt","ls8MetaData","image","onDismissBuyCardModal","onPresentBuyCardModal","onDismissSellCardModal","onPresentSellCardModal","indexOf","onDismissSelectMintModal","onPresentSelectMintModal","onDismissTransferCardModal","onPresentTransferCardModal","IDLE","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","push","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","cardInfo","valueType","totalSupply","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","color","href","exploreUrl","rel","previousIndex","current","BackwardsIcon","min","max","defaultValue","ref","onBlur","val","nextIndex","ForwardsIcon","TransferIcon","title","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.b42b6b82.chunk.js","sourcesContent":["import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [transfering, setTransfering] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const transferCard = async () => {\n    setTransfering(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    }\n  };\n\n  return { transferCard, transfering, error };\n};\n","export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useCallback, useContext } from 'react';\nimport { ModalContext, IOnPresent } from '../../context/ModalProvider';\n\nexport const useModal = (\n  ...[content, key, persist]: Parameters<IOnPresent>\n) => {\n  const { isOpen, onDismiss, onPresent } = useContext(ModalContext);\n\n  const handlePresent = useCallback(() => {\n    onPresent(content, key, persist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content, key, onPresent]);\n\n  return { handlePresent, onDismiss, isOpen };\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  align?: string;\n  placeholder?: string;\n  value?: string;\n}\n\nexport const InputField = ({\n  name,\n  label,\n  type,\n  changeHandler,\n  align,\n  placeholder,\n  value,\n}: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n        align={align}\n        placeholder={placeholder}\n        value={value}\n      />\n    </StyledInputContainer>\n  );\n};\n","import { BigNumber, BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice } from '../../utility';\n\nexport const useSellBuyLsp8Token = (\n  assetAddress: string,\n  network: NetworkName,\n) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [{ data: account }] = useAccount();\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n  };\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n  ) => {\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n  };\n\n  return { buyFromMarket, setForSale };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledToggleButtonGroup = styled.div`\n  border-radius: 0.5em;\n  width: max-content;\n  border: 1px solid rgba(153, 153, 153, 1);\n  margin: 0 auto;\n\n  button {\n    border-right: 1px solid rgba(153, 153, 153, 1);\n\n    :first-child {\n      border-radius: 0.4em 0 0 0.4em;\n    }\n\n    :last-child {\n      border-right: none;\n      border-radius: 0 0.4em 0.4em 0;\n    }\n  }\n`;\n\nexport const StyledToggleButton = styled.button<{ $active: boolean }>`\n  padding: 0.5em;\n  color: ${({ $active }) => ($active ? 'rgba(255, 129, 1, 1)' : 'white')};\n  background-color: ${({ $active }) =>\n    $active ? 'rgba(255, 255, 255, 0.2)' : ''};\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n\nexport const StyledApproveButton = styled(StyledCancelButton)``;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledApproveButton,\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledInfoText,\n  StyledSelectInputContainer,\n  StyledToggleButton,\n  StyledToggleButtonGroup,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n  network,\n}: IProps) => {\n  const { approve } = useErc20({ tokenAddress, network });\n  const { buyFromMarket } = useSellBuyLsp8Token(address, network);\n  const { getItems } = useLocalStorage();\n  const savedProfiles = getItems(network);\n  const savedProfilesAddresses = savedProfiles\n    ? Object.keys(savedProfiles)\n    : null;\n  const [upAddress, setUpAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [toggleEOABuy, setToggleEOABuy] = useState<boolean>(false);\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUpAddress(event.currentTarget.value);\n  };\n\n  return (\n    <StyledBuyCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n        cardImg={cardImg}\n      />\n      <StyledToggleButtonGroup>\n        <StyledToggleButton\n          $active={!toggleEOABuy}\n          onClick={() => setToggleEOABuy(false)}\n        >\n          With UP\n        </StyledToggleButton>\n        <StyledToggleButton\n          $active={toggleEOABuy}\n          onClick={() => setToggleEOABuy(true)}\n        >\n          With EOA\n        </StyledToggleButton>\n      </StyledToggleButtonGroup>\n      {!toggleEOABuy &&\n        (savedProfilesAddresses ? (\n          <StyledSelectInputContainer>\n            <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n            <StyledUpAddressSelectInput>\n              {savedProfilesAddresses.map((item) => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n            </StyledUpAddressSelectInput>\n          </StyledSelectInputContainer>\n        ) : (\n          <InputField\n            name=\"universalProfileAddress\"\n            label=\"UP Address\"\n            type=\"text\"\n            changeHandler={changeHandler}\n          />\n        ))}\n      <StyledApproveButton\n        onClick={async () =>\n          await approve(\n            address,\n            price,\n            network,\n            !toggleEOABuy ? upAddress : undefined,\n          )\n        }\n      >\n        Check balance & Approve\n      </StyledApproveButton>\n      <StyledInfoText>\n        Do you confirm the purchase of this card mint for{' '}\n        {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n        {marketToken ? marketToken.symbol : ''}?\n      </StyledInfoText>\n      <StyledButtonGroup>\n        <StyledBuyButton\n          onClick={async () =>\n            await buyFromMarket(\n              address,\n              price,\n              mint,\n              !toggleEOABuy ? upAddress : undefined,\n            )\n          }\n        >\n          Buy\n        </StyledBuyButton>\n      </StyledButtonGroup>\n    </StyledBuyCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [error, setError] = useState();\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n    const balance = await checkBalanceOf(buyer);\n\n    const allowance =\n      balance >= amount && (await checkAllowance(buyer, spenderAddress));\n    if (allowance && allowance >= amount) {\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    } else {\n      await erc20Contract.approve(spenderAddress, amount);\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledCancelButton,\n  StyledInputGroup,\n  StyledModalHeader,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n  network,\n}: IProps) => {\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale } = useSellBuyLsp8Token(address, network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  useEffect(() => {}, []);\n\n  return (\n    <StyledSellCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={\n          price &&\n          displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n        }\n        cardImg={cardImg}\n      />\n      {whiteListedTokens && (\n        <StyledInputGroup>\n          <InputField\n            name=\"amount\"\n            label=\"Your Price\"\n            type=\"number\"\n            changeHandler={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            <option>Token</option>\n            {whiteListedTokens?.map((item, i) => (\n              <option key={i} value={item.tokenAddress}>\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n      )}\n      <StyledButtonGroup>\n        <StyledSetPriceButton\n          onClick={() =>\n            setForSale(\n              address,\n              ownerProfile,\n              mint,\n              sellForm.tokenAddress,\n              sellForm.amount,\n              selectedTokenDecimals,\n            )\n          }\n          disabled={!whiteListedTokens || whiteListedTokens?.length === 0}\n        >\n          Set for sale\n        </StyledSetPriceButton>\n      </StyledButtonGroup>\n    </StyledSellCardModalContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      {ownerContent && (\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Owner</StyledHeaderTitle>\n          </StyledHeader>\n          {ownerContent}\n        </StyledIssuerContainer>\n      )}\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledCardMarket,\n  StyledCardMarketBuy,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset?: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n  onBuyClick: (tokenId: number) => void;\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n  onBuyClick,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy>\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { Modal } from '../../../components';\nimport { InputField } from '../../../components/InputField';\nimport {\n  StyledModalButtonsWrapper,\n  StyledModalButton,\n} from '../../../components/Modal/styles';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IProfile } from '../../../services/models';\n\ninterface TransferCardTokenIdModalProps {\n  cardAddress: string;\n  tokenId: number;\n  profile: IProfile;\n  onDismiss: () => any;\n}\n\nexport const TransferCardTokenIdModal = ({\n  cardAddress,\n  tokenId,\n  profile,\n  onDismiss,\n}: TransferCardTokenIdModalProps) => {\n  const [toAddress, setToAddress] = useState<string>('');\n\n  const { transferCard, transfering } = useTransferLsp8Token(\n    cardAddress,\n    toAddress,\n    tokenId,\n    profile,\n    onDismiss,\n  );\n\n  return (\n    <Modal>\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={(e) => setToAddress(e.target.value)}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n        value={toAddress}\n      />\n      <StyledModalButtonsWrapper topMargin>\n        <StyledModalButton\n          onClick={transferCard}\n          disabled={!ethers.utils.isAddress(toAddress)}\n        >\n          {transfering ? 'Transfering Card…' : 'Transfer Card'}\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectMintModalContent = styled.div`\n  max-height: 40em;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectMintListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledSelectMintListHeaderContent = styled.h4``;\n\nexport const StyledSelectMintList = styled.div`\n  overflow-y: scroll;\n`;\n\nexport const StyledSelectMintListContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 1em;\n  cursor: pointer;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledListMint = styled.p``;\n\nexport const StyledListPrice = styled.p``;\n","import { useMemo } from 'react';\nimport { IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledListMint,\n  StyledListPrice,\n  StyledSelectMintList,\n  StyledSelectMintListContent,\n  StyledSelectMintListHeader,\n  StyledSelectMintListHeaderContent,\n  StyledSelectMintModalContent,\n} from './styles';\n\ninterface IProps {\n  ownedTokenIds: number[];\n  markets: IMarket[];\n  whiteListedTokens: IWhiteListedTokens[];\n  onSelect: (index: number) => void;\n  onSelectCallback: () => void;\n}\n\nexport const SelectMintModalContent = ({\n  ownedTokenIds,\n  markets,\n  whiteListedTokens,\n  onSelect,\n  onSelectCallback,\n}: IProps) => {\n  const renderMintList = useMemo(\n    () =>\n      ownedTokenIds.map((id) => {\n        const market = markets.find((item) => Number(item.tokenId) === id);\n        const token =\n          market &&\n          whiteListedTokens.find(\n            (i) => i.tokenAddress === market.acceptedToken,\n          );\n        return (\n          <StyledSelectMintListContent\n            onClick={() => {\n              onSelect(id);\n              onSelectCallback();\n            }}\n          >\n            <StyledListMint>{id}</StyledListMint>\n            <StyledListPrice>\n              {market && token\n                ? `${displayPrice(\n                    market?.minimumAmount.toString(),\n                    token?.decimals,\n                  )} ${token.symbol}`\n                : '-'}\n            </StyledListPrice>\n          </StyledSelectMintListContent>\n        );\n      }),\n    [markets, onSelect, onSelectCallback, ownedTokenIds, whiteListedTokens],\n  );\n\n  return (\n    <StyledSelectMintModalContent>\n      <StyledSelectMintListHeader>\n        <StyledSelectMintListHeaderContent>\n          Mint\n        </StyledSelectMintListHeaderContent>\n        <StyledSelectMintListHeaderContent>\n          Price\n        </StyledSelectMintListHeaderContent>\n      </StyledSelectMintListHeader>\n      <StyledSelectMintList>{renderMintList}</StyledSelectMintList>\n    </StyledSelectMintModalContent>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n  TransferIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n  StyledMintSliderInput,\n  StyledSelectMintModalButton,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { BuyCardModal } from './BuyCardModal';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\nimport { useRemoveMarketForLsp8Token } from '../../hooks/useRemoveMarketForLsp8Token';\nimport { useModal } from '../../hooks/useModal';\nimport { TransferCardTokenIdModal } from './TransferCardTokenIdModal';\nimport { SelectMintModalContent } from './SelectMintModalContent';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const history = useHistory();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const mintIdInputRef = useRef<HTMLInputElement>(null);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [selectedMarketTokenId, setSelectedMarketTokenId] = useState<\n    number | null\n  >(null);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset?.markets.find(\n      (item) => Number(item.tokenId) === selectedMarketTokenId,\n    );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, selectedMarketTokenId]);\n\n  const dispatch = useAppDispatch();\n\n  const { transferCard, transfering } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    ownedTokenIds ? ownedTokenIds[currentIndex] : 0,\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const { removeMarket, removingMarket } = useRemoveMarketForLsp8Token(\n    params.add,\n    parseInt(params.id),\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const {\n    handlePresent: onPresentBuyCardModal,\n    onDismiss: onDismissBuyCardModal,\n  } = useModal(\n    asset && selectedMintMarket && (\n      <BuyCardModal\n        address={params.add}\n        mint={Number(selectedMintMarket.tokenId)}\n        price={selectedMintMarket.minimumAmount}\n        tokenAddress={selectedMintMarket.acceptedToken}\n        whiteListedTokens={asset.whiteListedTokens}\n        cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n        onClose={() => {\n          setSelectedMarketTokenId(null);\n          onDismissBuyCardModal();\n        }}\n        network={params.network}\n      />\n    ),\n    'Buy Card Modal',\n    'Buy Card',\n  );\n\n  const {\n    handlePresent: onPresentSellCardModal,\n    onDismiss: onDismissSellCardModal,\n  } = useModal(\n    asset && ownedTokenIds && activeProfile && (\n      <SellCardModal\n        ownerProfile={activeProfile}\n        address={params.add}\n        mint={ownedTokenIds[currentIndex]}\n        price={currentMintMarket ? currentMintMarket.minimumAmount : undefined}\n        marketTokenAddress={\n          currentMintMarket ? currentMintMarket.acceptedToken : undefined\n        }\n        cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n        onClose={() => onDismissSellCardModal()}\n        whiteListedTokens={asset.whiteListedTokens}\n        network={params.network}\n      />\n    ),\n    'Sell Card Modal',\n    'Sell Card',\n  );\n\n  const {\n    handlePresent: onPresentSelectMintModal,\n    onDismiss: onDismissSelectMintModal,\n  } = useModal(\n    ownedTokenIds && asset && (\n      <SelectMintModalContent\n        ownedTokenIds={ownedTokenIds}\n        markets={asset.markets}\n        whiteListedTokens={asset.whiteListedTokens}\n        onSelect={(tokenId: number) => {\n          setCurrentIndex(ownedTokenIds.indexOf(Number(tokenId)));\n        }}\n        onSelectCallback={() => onDismissSelectMintModal()}\n      />\n    ),\n    'Select Mint Modal',\n    'Select Mint',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardModal,\n    onDismiss: onDismissTransferCardModal,\n  } = useModal(\n    <>\n      {activeProfile && (\n        <TransferCardTokenIdModal\n          cardAddress={params.add}\n          tokenId={parseInt(params.id)}\n          profile={activeProfile}\n          onDismiss={() => onDismissTransferCardModal()}\n        />\n      )}\n    </>,\n    'Card Transfer Modal',\n    'Transfer Card',\n  );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (nextIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (previousIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledBuyButton\n              onClick={() => {\n                setSelectedMarketTokenId(Number(currentMintMarket.tokenId));\n                onPresentBuyCardModal();\n              }}\n            >\n              Buy now\n            </StyledBuyButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={onPresentSellCardModal}>\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transfering\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton onClick={onPresentSellCardModal}>\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton onClick={removeMarket}>\n              {removingMarket ? 'Withdrawing from sale…' : 'Withdraw from sale'}\n            </StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transfering\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentMintMarket,\n    currentUsersPermissionsSet,\n    onPresentBuyCardModal,\n    onPresentSellCardModal,\n    ownedTokenIds,\n    transferCard,\n    transfering,\n    removeMarket,\n    removingMarket,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <>\n                      <StyledMintControls>\n                        <StyledMintSkipButton onClick={previousMint}>\n                          <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledMintSliderIndex>\n                          <StyledMintSliderInput\n                            type=\"number\"\n                            min={1}\n                            max={ownedTokenIds.length}\n                            defaultValue={currentIndex + 1}\n                            ref={mintIdInputRef}\n                            onBlur={(\n                              event: React.FocusEvent<HTMLInputElement>,\n                            ) => {\n                              const val = Number(event.target.value);\n                              if (val > 0 && val <= ownedTokenIds.length) {\n                                history.push(\n                                  `/${params.network}/asset/${params.add}/${\n                                    ownedTokenIds[val - 1]\n                                  }`,\n                                );\n                                setCurrentIndex(val - 1);\n                              }\n                            }}\n                          />\n                          /{ownedTokenIds.length}\n                        </StyledMintSliderIndex>\n                        <StyledMintSkipButton onClick={nextMint}>\n                          <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledSelectMintModalButton\n                          onClick={onPresentSelectMintModal}\n                        >\n                          Select Mint\n                        </StyledSelectMintModalButton>\n                      </StyledMintControls>\n                    </>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        {ownedTokenIds &&\n                          currentUsersPermissionsSet.call === '1' && (\n                            <StyledReloadPriceAction>\n                              <StyledActionIcon\n                                src={TransferIcon}\n                                alt=\"transfer\"\n                                title=\"transfer\"\n                                onClick={onPresentTransferCardModal}\n                              />\n                            </StyledReloadPriceAction>\n                          )}\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ReloadIcon}\n                            alt=\"reload\"\n                            title=\"reload\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ShareIcon}\n                            alt=\"share\"\n                            title=\"share\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={OptionIcon}\n                            alt=\"options\"\n                            title=\"options\"\n                          />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Owner', content: renderCurrentMintOwner },\n                    { name: 'Issuer', content: renderIssuer },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  ownerContent={activeProfile && renderCurrentMintOwner}\n                  issuerContent={renderIssuer}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                <CardMarket\n                  asset={asset}\n                  cardMarkets={asset?.markets}\n                  whiteListedTokens={asset?.whiteListedTokens}\n                  onBuyClick={(tokenId: number) => {\n                    onPresentBuyCardModal();\n                    setSelectedMarketTokenId(tokenId);\n                  }}\n                />\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useRemoveMarketForLsp8Token = (\n  cardAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [removingMarket, setRemovingMarket] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const removeMarket = async () => {\n    setRemovingMarket(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.removeMarketViaKeymanager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    } else {\n      await LSP3ProfileApi.removeMarket(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    }\n  };\n\n  return { removeMarket, removingMarket, error };\n};\n"],"sourceRoot":""}