{"version":3,"sources":["assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","utility/permissions.ts","components/InputField/styles.ts","components/InputField/InputField.tsx","components/ModalOverlay/styles.ts","components/ModalOverlay/ModalOverlay.tsx","hooks/useSellBuyLsp8Token/useSellBuyLsp8Token.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useUrlParams/useUrlParams.ts","hooks/useErc20/useErc20.ts","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","features/pagination/styles.ts","pages/AssetDetails/HoldersPagination/styles.ts","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","hooks/usePaginate/usePaginate.ts","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/AssetDetails.tsx"],"names":["StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","address","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","InputField","label","changeHandler","step","onChange","StyledModalOverlay","StyledModal","StyledCloseModalButton","button","StyledCloseButtonIcon","ModalOverlay","children","onClose","modalRef","useRef","useOutsideClick","ref","onClick","CloseIcon","useSellBuyLsp8Token","useSigner","signer","data","useState","useAccount","buyFromMarket","amount","tokenId","universalProfileAddress","a","LSP3ProfileApi","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","owner","checkKeyManager","KeyManagerApi","buyFromCardMarketViaKeyManager","LSP4DigitalAssetApi","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","setForSale","ownerProfile","mint","tokenAddress","decimals","isOwnerKeyManager","setCardMarketViaKeyManager","convertPrice","setMarketViaUniversalProfile","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","price","slice","toString","StyledBuyCardModalContent","StyledModalHeader","StyledInfoText","StyledToggleButtonGroup","StyledToggleButton","$active","StyledButtonGroup","StyledBuyButton","StyledCancelButton","StyledApproveButton","BuyCardModal","whiteListedTokens","useUrlParams","approve","account","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","spenderAddress","buyer","checkBalanceOf","checkAllowance","allowance","approveTokenViaKeyManager","approveTokenViaUniversalProfile","ownerAddress","balanceOf","useErc20","upAddress","setUpAddress","toggleEOABuy","setToggleEOABuy","marketToken","i","displayPrice","event","currentTarget","value","undefined","symbol","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","select","StyledSetPriceButton","SellCardModal","marketTokenAddress","sellForm","setSellForm","selectedTokenDecimals","selectedToken","item","marketTokenDecimals","useEffect","map","StyledTabsHeader","StyledTabsLabel","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","content","StyledPaginationControls","h1","md","lg","xl","StyledNextButton","StyledPreviousButton","StyledNextIcon","StyledPrevIcon","StyledPageNumButton","active","StyledHolderPagination","StyledHolderPaginationGridContainer","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","totalItems","screenWidth","useViewPort","currentPage","setCurrentPage","pageCount","Math","ceil","limit","range","from","push","start","end","paginationGroup","usePaginate","allProfiles","selectUserIds","holders","selectAllUsersItems","filter","some","STATUS","LOADING","addresses","forEach","includes","fetchAssetHolders","changePage","pageNumber","Number","textContent","renderHolders","holder","findBalanceOf","id","getContent","dataTip","disabled","PrevIcon","NextIcon","StyledDesktopCreatorsAccordionWrapper","$expanded","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","expand","setExpand","AccordionToggleIcon","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","selectCardById","ownerStatus","status","creators","cardError","cards","error","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","currentIndex","setCurrentIndex","openBuyModal","setOpenBuyModal","openSellModal","setOpenSellModal","ownedTokenIds","IDLE","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","indexOf","ls8MetaData","fetchMetaDataForTokenId","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","marketsForOwnedTokens","markets","currentMintMarket","market","token","acceptedToken","cardInfo","valueType","totalSupply","renderOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","minimumAmount","renderCardProperties","attributes","trait_type","color","image","href","exploreUrl","target","rel","previousIndex","BackwardsIcon","nextIndex","ForwardsIcon","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"uGAAe,QAA0B,qC,mdCI5BA,EAAoBC,YAAOC,IAAPD,CAAH,iUACf,qBAAGE,MAAkBC,UAAUC,cACnC,qBAAGC,KAAmB,QAAU,WAUhC,qBAAGH,MAAkBI,OAAOC,MAM1BC,EAA6BR,IAAOS,IAAV,uLAG3B,qBAAGJ,KAAmB,OAAS,UAM9BK,EAAuBV,IAAOS,IAAV,2JAEtB,qBAAGJ,KAAmB,OAAS,UAI1B,qBAAGA,KAAmB,OAAS,UAC7B,qBAAGA,KAAmB,OAAS,SAGpCM,EAAgBX,IAAOY,EAAV,qFACX,qBAAGP,KAAmB,OAAS,SAC7B,qBAAGH,MAAkBW,KAAKC,OAAOC,WAIrCC,EAAgBhB,IAAOiB,IAAV,yIAGV,qBAAGZ,KAAmB,OAAS,SAC7B,qBAAGA,KAAmB,OAAS,SACtC,qBAAGA,KAAmB,OAAS,UAI7Ba,EAAsBlB,IAAOS,IAAV,yEAKnBU,EAAoBnB,IAAOoB,GAAV,6IACf,qBAAGf,KAAmB,OAAS,UAC7B,qBAAGH,MAAkBW,KAAKC,OAAOO,UAMrCC,EAAoBtB,IAAOY,EAAV,mEAKjBW,EAAqBvB,IAAOS,IAAV,yPACXe,KAOR,qBAAGnB,KAAmB,QAAU,WAI/BoB,EAAuBzB,IAAOiB,IAAV,yPACtB,qBAAGZ,KAAmB,QAAU,UAC/B,qBAAGA,KAAmB,QAAU,UAQjC,qBAAGH,MAAkBI,OAAOC,MACzB,qBAAGF,KAAmB,QAAU,UACjC,qBAAGA,KAAmB,QAAU,UAIhCqB,EAAmB1B,IAAOiB,IAAV,oLACjB,qBAAGZ,KAAmB,QAAU,UACjC,qBAAGA,KAAmB,QAAU,UAKhC,qBAAGH,MAAkBI,OAAOC,MAC1B,qBAAGF,KAAmB,QAAU,UAC/B,qBAAGA,KAAmB,QAAU,W,wJC9EjCsB,EAAgC,SAAC,GAK/B,IAJbC,EAIY,EAJZA,YACAC,EAGY,EAHZA,QACAC,EAEY,EAFZA,KACAC,EACY,EADZA,UAEMC,EAASC,cACTC,EAAqBC,mBACzB,iBACW,SAATL,GACAF,EAAYQ,YAAYC,MACtB,SAACC,GAAD,OACEA,EAAMC,aAAaC,gBAAkBR,EAAOS,IAAID,mBAEtD,CAACR,EAAOS,IAAKX,EAAMF,EAAYQ,cAGjC,OACE,eAAC,IAAD,CACEM,GACE,WAAIV,EAAOW,QAAX,aACAC,IAAKC,MAAMC,kBAAkBlB,EAAYmB,SAE3C1C,KAAe,SAATyB,EACNkB,WACW,SAATlB,GAAmBI,GAAsBA,EAAmBe,SAE9DC,WAAUnB,EATZ,UAWE,cAAC,IAAD,CAAsB1B,KAAe,SAATyB,EAA5B,SACE,cAAC,IAAD,CAAezB,KAAe,SAATyB,EAArB,SACY,SAATA,EAAkBF,EAAYQ,YAAYe,OAAStB,MAGxD,cAAC,IAAD,CACEuB,IAAKC,IACLC,IAAI,GACJjD,KAAe,SAATyB,IAER,eAAC,IAAD,CAAoBzB,KAAe,SAATyB,EAA1B,UACE,cAAC,IAAD,CACEsB,IAAKG,IAAY3B,EAAYmB,SAC7BO,IAAI,GACJjD,KAAe,SAATyB,IAER,cAAC,IAAD,CACEsB,IAAKxB,EAAY4B,aACjBF,IAAI,GACJjD,KAAe,SAATyB,OAGV,cAAC,IAAD,CAA4BzB,KAAe,SAATyB,EAAlC,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAmBzB,KAAe,SAATyB,EAAzB,UACG,IADH,IAEIF,EAAY6B,KAAM,OAEtB,cAAC,IAAD,qC,kCCvFV,kCAAO,IAAMC,EAA0C,SACrDC,EACAC,GAEA,OAAOD,EAActB,MACnB,SAACwB,GAAD,OACEA,EAAEd,QAAQP,gBAAkBoB,EAAepB,eAAiBqB,EAAEC,iB,mTCPvDC,GAAuB/D,KAAOS,IAAV,sFAMpBuD,GAAmBhE,KAAOY,EAAV,2MAShBqD,GAAmBjE,KAAOkE,MAAV,6M,SCJhBC,GAAa,SAAC,GAAkD,IAAhDV,EAA+C,EAA/CA,KAAMW,EAAyC,EAAzCA,MAAOtC,EAAkC,EAAlCA,KAAMuC,EAA4B,EAA5BA,cAC9C,OACE,gBAACN,GAAD,WACE,eAACC,GAAD,UAAmBI,IACnB,eAACH,GAAD,CACER,KAAMA,EACN3B,KAAMA,EACNwC,KAAK,MACLC,SAAUF,Q,UCnBLG,GAAqBxE,KAAOS,IAAV,gLAWlBgE,GAAczE,KAAOS,IAAV,4RAaXiE,GAAyB1E,KAAO2E,OAAV,oGAOtBC,GAAwB5E,KAAOiB,IAAV,2BClBrB4D,GAAiC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACnDC,EAAWC,kBAAO,MAExB,OADAC,aAAgBF,EAAUD,GAExB,eAACP,GAAD,UACE,gBAACC,GAAD,CAAaU,IAAKH,EAAlB,UACE,eAACN,GAAD,CAAwBU,QAASL,EAAjC,SACE,eAACH,GAAD,CAAuBxB,IAAKiC,KAAW/B,IAAI,OAE5CwB,Q,0DCdIQ,GAAsB,SACjC/C,EACAI,GAEA,MAA2B4C,eAAZC,EAAf,qBAASC,KACT,EAA0BC,sBAA1B,oBACA,GADA,UAC4BC,gBAA5B,qBAASF,KAqFT,MAAO,CAAEG,cAnFU,yCAAG,WACpBrD,EACAsD,EACAC,EACAC,GAJoB,kBAAAC,EAAA,8DAOlBD,GAPkB,qCAQXE,KAAeC,mBACpBH,EACApD,GAVgB,6BAMdwD,EANc,UAalBJ,GACAI,GAdkB,uCAeXF,KAAeG,oBACpBL,EACApD,GAjBgB,+BAYd0D,EAZc,UAoBlBA,GApBkB,uCAoBFJ,KAAeK,gBAAgBD,EAAO1D,GApBpC,uCAqBG0D,GAASN,GArBZ,yBAsBlBP,GAtBkB,uCAuBTe,KAAcC,+BACnBjE,EACA8D,EACAN,EACAD,EACAD,EACAL,GA7Bc,YAgChBa,IAASN,EAhCO,yBAiClBP,GAjCkB,uCAkCTiB,KAAoBC,qCACzBnE,EACAwD,EACAD,EACAD,EACAL,GAvCc,wCA0ClBA,GA1CkB,uCA2CTiB,KAAoBE,oBACzBpE,EACAuD,EACAD,EACAL,GA/Cc,4CAAH,4DAmFKoB,WA/BR,yCAAG,WACjBrE,EACAsE,EACAC,EACAC,EACAlB,EACAmB,GANiB,UAAAhB,EAAA,0DAQba,EAAaI,oBAAqBzB,EARrB,gCASTe,KAAcW,2BAClB3E,EACAsE,EAAa9D,QACb8D,EAAaR,MACbS,EACAC,EACAI,aAAatB,EAAQmB,GACrBxB,GAhBa,UAmBZqB,EAAaI,oBAAqBzB,EAnBtB,gCAoBTiB,KAAoBW,6BACxB7E,EACAsE,EAAa9D,QACb+D,EACAC,EACAI,aAAatB,EAAQmB,GACrBxB,GA1Ba,2CAAH,kECpEL6B,GAA+BrH,KAAOS,IAAV,mFAM5B6G,GAAgBtH,KAAOiB,IAAV,gDAIbsG,GAAavH,KAAOS,IAAV,mGAMV+G,GAAkBxH,KAAOY,EAAV,uFAKf6G,GAAkBzH,KAAOY,EAAV,mDCNf8G,GAAwB,SAAC,GAKvB,IAJbC,EAIY,EAJZA,QACA5E,EAGY,EAHZA,QACA+D,EAEY,EAFZA,KACAc,EACY,EADZA,MAEA,OACE,gBAACP,GAAD,WACE,eAACC,GAAD,CAAelE,IAAKuE,EAASrE,IAAI,KACjC,gBAACiE,GAAD,WACE,eAACC,GAAD,uBACA,gBAACC,GAAD,WACG1E,EAAQ8E,MAAM,EAAG,GADpB,MAEG9E,EAAQ8E,MAAM9E,EAAQI,OAAS,EAAGJ,EAAQI,WAE7C,eAACqE,GAAD,oBACA,eAACC,GAAD,UAAkBX,IAClB,eAACU,GAAD,qBACA,eAACC,GAAD,iBAAkBG,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOE,oBCjCpBC,GAA4B/H,KAAOS,IAAV,gIAQzBuH,GAAoBhI,KAAOoB,GAAV,+FAEb,qBAAGlB,MAAkBW,KAAKC,OAAOC,WAIrCkH,GAAiBjI,KAAOY,EAAV,mDAIdsH,GAA0BlI,KAAOS,IAAV,uXAoBvB0H,GAAqBnI,KAAO2E,OAAV,yFAEpB,qBAAGyD,QAAyB,uBAAyB,WAC1C,qBAAGA,QACX,2BAA6B,MAG9BC,GAAoBrI,KAAOS,IAAV,2BAEjB6H,GAAkBtI,KAAO2E,OAAV,uJAQf4D,GAAqBvI,aAAOsI,GAAPtI,CAAH,6FAKlBwI,GAAsBxI,aAAOuI,GAAPvI,CAAH,2BC9BnByI,GAAe,SAAC,GAQd,IAPb1F,EAOY,EAPZA,QACAgC,EAMY,EANZA,QACA+B,EAKY,EALZA,KACAc,EAIY,EAJZA,MACAD,EAGY,EAHZA,QACAZ,EAEY,EAFZA,aACA2B,EACY,EADZA,kBAEQ/F,EChCkB,WAC1B,IAAMX,EAASC,eAEf,MAAO,CACLU,QAASX,EAAOW,QAChBI,QAASf,EAAOe,QAChB+C,QAAS9D,EAAO8D,SD0BE6C,GAAZhG,QACAiG,EE5Bc,SAAC,GAAuC,IAArC7B,EAAoC,EAApCA,aAAcpE,EAAsB,EAAtBA,QACvC,EAA2B4C,eAAZC,EAAf,qBAASC,KACT,EAA4BE,eAAbkD,EAAf,qBAASpD,KACT,EAA0BC,sBAA1B,oBACMoD,GADN,UACiBC,aAAepG,IAC1BqG,EAAgB7G,oBACpB,kBAAM8G,KAAeC,QAAQnC,EAAcvB,GAAkBsD,KAC7D,CAACA,EAAUtD,EAAQuB,IAGf6B,EAAO,yCAAG,WACdO,EACAtD,EACAlD,EACAoD,GAJc,wBAAAC,EAAA,6DAMRoD,EAAQrD,IAEV8C,EACAA,EAAQ9F,QACR,IAVU,SAYQsG,EAAeD,GAZvB,UAYRvH,EAZQ,YAeZA,GAAWgE,GAfC,qCAegByD,EAAeF,EAAOD,GAftC,gCAcRI,EAdQ,OAgBGA,GAAa1D,GAhBhB,2DAqBZE,GArBY,uCAsBLE,KAAeC,mBACpBH,EACApD,GAxBU,+BAoBRwD,EApBQ,UA2BZJ,GACAI,GA5BY,uCA6BLF,KAAeG,oBACpBL,EACApD,GA/BU,+BA0BR0D,EA1BQ,UAmCZA,GAnCY,uCAmCIJ,KAAeK,gBAAgBD,EAAO1D,GAnC1C,uCAoCS0D,GAASN,GApClB,yBAqCZP,GArCY,uCAsCHe,KAAciD,0BACnBnD,EACAN,EACAoD,EACApC,EACAlB,EACAL,GA5CQ,YA+CVa,IAASN,EA/CC,yBAgDZP,GAhDY,uCAiDHS,KAAewD,gCACpB1D,EACAoD,EACApC,EACAlB,EACAL,GAtDQ,iDAyDNwD,EAAcJ,QAAQO,EAAgBtD,GAzDhC,4CAAH,4DA6DPyD,EAAc,yCAAG,WACrBI,EACAP,GAFqB,gBAAAnD,EAAA,sEAIGgD,EAAcO,UACpCG,EACAP,GANmB,cAIfI,EAJe,yBAQdA,GARc,2CAAH,wDAWdF,EAAc,yCAAG,WAAOtG,GAAP,gBAAAiD,EAAA,sEACCgD,EAAcW,UAAU5G,GADzB,cACflB,EADe,yBAEdA,GAFc,2CAAH,sDAKpB,MAAO,CACL+G,UACAU,iBACAD,kBF9DkBO,CAAS,CAAE7C,eAAcpE,YAArCiG,QACAhD,EAAkBN,GAAoBvC,EAASJ,GAA/CiD,cACR,EAAkCF,oBAAiB,IAAnD,oBAAOmE,EAAP,KAAkBC,EAAlB,KACA,EAAwCpE,qBAAkB,GAA1D,oBAAOqE,EAAP,KAAqBC,EAArB,KAEMC,EACJvB,GACAA,EAAkBrG,MAAK,SAAC6H,GAAD,OAAOA,EAAEnD,eAAiBA,KAMnD,OACE,eAAC,GAAD,CAAchC,QAASA,EAAvB,SACE,gBAACgD,GAAD,WACE,eAACC,GAAD,uBACA,eAAC,GAAD,CACEjF,QAASA,EACT+D,KAAMA,EACNc,MAAOuC,aAAavC,EAAOqC,EAAcA,EAAYjD,SAAW,GAChEW,QAASA,IAEX,gBAACO,GAAD,WACE,eAACC,GAAD,CACEC,SAAU2B,EACV3E,QAAS,kBAAM4E,GAAgB,IAFjC,qBAMA,eAAC7B,GAAD,CACEC,QAAS2B,EACT3E,QAAS,kBAAM4E,GAAgB,IAFjC,0BAOAD,GACA,eAAC,GAAD,CACEtG,KAAK,0BACLW,MAAM,aACNtC,KAAK,OACLuC,cAjCY,SAAC+F,GACrBN,EAAaM,EAAMC,cAAcC,UAmC7B,eAAC9B,GAAD,CACEpD,QAAO,wBAAE,uBAAAY,EAAA,sEACD4C,EACJ7F,EACA6E,EACAjF,EACCoH,OAA2BQ,EAAZV,GALX,mFADX,qCAYA,gBAAC5B,GAAD,+DACoD,IACjDkC,aAAavC,EAAOqC,EAAcA,EAAYjD,SAAW,GAAI,IAC7DiD,EAAcA,EAAYO,OAAS,GAHtC,OAKA,gBAACnC,GAAD,WACE,eAACC,GAAD,CACElD,QAAO,wBAAE,uBAAAY,EAAA,sEACDJ,EACJ7C,EACA6E,EACAd,EACCiD,OAA2BQ,EAAZV,GALX,mFADX,iBAYA,eAACtB,GAAD,CAAoBnD,QAASL,EAA7B,6B,SGnHG0F,GAA6BzK,KAAOS,IAAV,gIAQ1BuH,GAAoBhI,KAAOoB,GAAV,+FAEb,qBAAGlB,MAAkBW,KAAKC,OAAOC,WAIrC2J,GAAmB1K,KAAOS,IAAV,0GAOhBkK,GAA8B3K,KAAO4K,OAAV,kDAI3BvC,GAAoBrI,KAAOS,IAAV,2BAEjBoK,GAAuB7K,KAAO2E,OAAV,uJAQpB4D,GAAqBvI,aAAO6K,GAAP7K,CAAH,6FCAlB8K,GAAgB,SAAC,GASf,IAAD,EARZ/H,EAQY,EARZA,QACAgC,EAOY,EAPZA,QACA+B,EAMY,EANZA,KACAc,EAKY,EALZA,MACAD,EAIY,EAJZA,QACAd,EAGY,EAHZA,aACA6B,EAEY,EAFZA,kBACAqC,EACY,EADZA,mBAEM/I,EAASC,eACf,EAAgCyD,oBAG7B,CACDG,OAAQ,EACRkB,aAAc2B,EAAoBA,EAAkB,GAAG3B,aAAe,KALxE,oBAAOiE,EAAP,KAAiBC,EAAjB,KAOQrE,EAAetB,GAAoBvC,EAASf,EAAOW,SAAnDiE,WAEFvC,EAAgB,SACpB+F,GAEAa,EAAY,6BACPD,GADM,mBAERZ,EAAMC,cAAc5G,KAAO2G,EAAMC,cAAcC,UAI9CY,EAAwB/I,oBAAQ,WACpC,IAAMgJ,EACJzC,GACAA,EAAkBrG,MAChB,SAAC+I,GAAD,OAAUA,EAAKrE,eAAiBiE,EAASjE,gBAE7C,OAAIoE,EACKA,EAAcnE,SAEhB,IACN,CAACgE,EAASjE,aAAc2B,IAErB2C,EACJ3C,IAAiB,UACjBA,EAAkBrG,MAAK,SAAC6H,GAAD,OAAOA,EAAEnD,eAAiBgE,YADhC,aACjB,EACI/D,UAIN,OAFAsE,sBAAU,cAAU,IAGlB,eAAC,GAAD,CAAcvG,QAASA,EAAvB,SACE,gBAAC0F,GAAD,WACE,eAAC,GAAD,gCACA,eAAC,GAAD,CACE1H,QAASA,EACT+D,KAAMA,EACNc,MACEA,GACAuC,aAAavC,EAAOyD,GAA4C,GAElE1D,QAASA,IAEVe,GACC,gBAACgC,GAAD,WACE,eAAC,GAAD,CACEjH,KAAK,SACLW,MAAM,aACNtC,KAAK,SACLuC,cAAeA,IAEjB,gBAACsG,GAAD,CACElH,KAAK,eACLc,SAAUF,EAFZ,UAIE,4CAJF,OAKGqE,QALH,IAKGA,OALH,EAKGA,EAAmB6C,KAAI,SAACH,EAAMlB,GAAP,OACtB,yBAAgBI,MAAOc,EAAKrE,aAA5B,SACGqE,EAAKZ,QADKN,YAOrB,gBAAC,GAAD,WACE,eAACW,GAAD,CACEzF,QAAS,kBACPwB,EACE7D,EACA8D,EACAC,EACAkE,EAASjE,aACTiE,EAASnF,OACTqF,IARN,0BAcA,eAAC,GAAD,CAAoB9F,QAASL,EAA7B,6B,UCpIGyG,GAAmBxL,KAAOS,IAAV,qEAKhBgL,GAAkBzL,KAAO2E,OAAV,4CACjB,qBAAGyD,QAAyB,QAAU,8BCGpCsD,GAAiB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAC/B,EAAkCjG,oBAAiB,GAAnD,oBAAOkG,EAAP,KAAkBC,EAAlB,KACA,OACE,eAACC,GAAA,EAAD,CACEC,OACE,eAACP,GAAD,UACGG,EAAKJ,KAAI,SAACS,EAAK9B,GAAN,OACR,eAACuB,GAAD,CAEErD,QAASwD,IAAc1B,EACvB9E,QAAS,kBAAMyG,EAAa3B,IAH9B,SAKG8B,EAAIvI,MAJAyG,QASb+B,cAAY,EAdd,SAgBGN,EAAKC,GAAWM,W,gCCUVC,IAtC0BnM,KAAOS,IAAV,0EAKFT,KAAOS,IAAV,oGAMIT,KAAOoM,GAAV,6FAEf,qBAAGlM,MAAkBW,KAAKC,OAAOO,UAIfrB,KAAOS,IAAV,qaAUrB,qBAAGP,MAAkBI,OAAO+L,MAG5B,qBAAGnM,MAAkBI,OAAOgM,MAG5B,qBAAGpM,MAAkBI,OAAOiM,MAKCvM,KAAOS,IAAV,uIAQxB+L,GAAmBxM,KAAO2E,OAAV,sDAIhB8H,GAAuBzM,aAAOwM,GAAPxM,CAAH,2BAEpB0M,GAAiB1M,KAAOiB,IAAV,2BAEd0L,GAAiB3M,KAAOiB,IAAV,2BAEd2L,GAAsB5M,KAAO2E,OAAV,qGAEhB,qBAAGkI,OAAuB,UAAY,M,UC1DzCC,GAAyB9M,KAAOS,IAAV,mGAMtBsM,GAAsC/M,KAAOS,IAAV,qaAOrC,qBAAGP,MAAkBI,OAAOC,MAI5B,qBAAGL,MAAkBI,OAAO+L,MAI5B,qBAAGnM,MAAkBI,OAAOgM,MAI5B,qBAAGpM,MAAkBI,OAAOiM,MCS1BS,GAAmB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,iBAC3BC,EAAWC,eACXnL,EAASC,eACTmL,EAAeC,cACnB,SAACC,GAAD,OAAsBA,EAAMC,SAASvL,EAAOW,SAASyK,gBAGvD,ECpCyB,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,WACpBC,EAAgBC,eAAhBD,YACR,EAAsC/H,oBAAiB,GAAvD,oBAAOiI,EAAP,KAAoBC,EAApB,KAEA,EAA6BzL,oBAAQ,WACnC,OAAIsL,EAAc,KACT,CACLI,UAAWC,KAAKC,KAAKP,EAAa,IAClCQ,MAAO,IAGPP,EAAc,KACT,CACLI,UAAWC,KAAKC,KAAKP,EAAa,IAClCQ,MAAO,IAGPP,EAAc,IACT,CACLI,UAAWC,KAAKC,KAAKP,EAAa,GAClCQ,MAAO,GAIPP,EAAc,IACT,CACLI,UAAWC,KAAKC,KAAKP,EAAa,GAClCQ,MAAO,GAIJ,CACLH,UAAWC,KAAKC,KAAKP,EAAa,GAClCQ,MAAO,KAER,CAACP,EAAaD,IA/BTK,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,MAiCbC,EAAQ,SAACC,EAAcxL,GAG3B,IAFA,IAAMuL,EAAkB,GACpB/D,EAAIgE,EACDhE,GAAKxH,GACVuL,EAAME,KAAKjE,GACXA,IAEF,OAAO+D,GAiBHG,EAAQjM,oBACZ,kBAAMwL,EAAcK,EAAQA,IAC5B,CAACL,EAAaK,IAEVK,EAAMlM,oBAAQ,kBAAMiM,EAAQJ,IAAO,CAACA,EAAOI,IAEjD,MAAO,CACLT,cACAC,iBACAC,YACAG,QACAM,gBAzBsB,WACtB,GAAkB,IAAdT,EACF,OAAOI,EAAM,EAAG,GAElB,OAAQN,GACN,KAAK,EACH,OAAOM,EAAMN,EAAaA,EAAc,GAC1C,KAAKE,EACH,OAAOI,EAAMN,EAAc,EAAGA,GAChC,QACE,OAAOM,EAAMN,EAAc,EAAGA,EAAc,KAgBhDS,QACAC,OD/BEE,CAAY,CAAEf,WAAYP,EAAiB9J,SAN7CwK,EADF,EACEA,YACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,UACAS,EAJF,EAIEA,gBACAF,EALF,EAKEA,MACAC,EANF,EAMEA,IAGIG,EAAcnB,cAAY,SAACC,GAAD,OAC9BmB,aAAcnB,EAAMC,SAASvL,EAAOW,aAGhC+L,EAAUrB,cAAY,SAACC,GAC3B,OAAOqB,aAAoBrB,EAAMC,SAASvL,EAAOW,aAChDiM,QAAO,SAACxD,GACT,OAAO6B,EAAiBpF,MAAMuG,EAAOC,GAAKQ,MAAK,SAAC3E,GAC9C,OAAOA,IAAMkB,EAAKrI,cAItBZ,oBAAQ,WACN,GAAIiL,IAAiB0B,KAAOC,QAA5B,CACA,IAAIC,EAAsB,GAC1B/B,EAAiBpF,MAAMuG,EAAOC,GAAKY,SAAQ,SAAC7D,IACtC,OAACoD,QAAD,IAACA,OAAD,EAACA,EAAaU,SAAS9D,KACzB4D,EAAUb,KAAK/C,MAGf4D,EAAU7L,OAAS,GACrB+J,EACEiC,aAAkB,CAAEpM,QAASiM,EAAWrM,QAASX,EAAOW,cAI3D,CAAC6L,EAAatB,EAAUmB,EAAKpB,EAAkBjL,EAAOW,QAASyL,IAElE,IAYMgB,EAAa,SAAChF,GAClB,IAAMiF,EAAaC,OAAOlF,EAAMC,cAAckF,aAC9C3B,EAAeyB,IAGXG,EAAgBrN,oBACpB,kBACEuM,EAAQnD,KAAI,SAACkE,GACX,IAAMC,EAAgBD,EAAOrN,YAAYC,MACvC,SAAC+I,GAAD,OAAUA,EAAK7I,eAAiBP,EAAOS,IAAID,iBAE7C,OACE,uCACE,eAACb,GAAA,EAAD,CAEEE,SAAsB,OAAb6N,QAAa,IAAbA,OAAA,EAAAA,EAAe7N,SAAU6N,EAAc7N,QAAU,EAC1DD,YAAa6N,EACb3N,KAAK,SACLC,UAAU,iBAJL0N,EAAO1M,SAMd,eAAC,KAAD,CACE4M,GAAG,gBACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,gBAKrD,CAACnB,EAAS1M,EAAOS,MAGnB,OACE,gBAACqK,GAAD,WACE,eAACC,GAAD,UACGyC,IAEF3B,EAAY,GACX,gBAAC1B,GAAD,WACE,eAACM,GAAD,CACErH,QA5CW,WACnBwI,GAAe,SAACD,GAAD,OACG,IAAhBA,EAAoBA,EAAcA,EAAc,MA2C1CmC,SAA0B,IAAhBnC,EAFZ,SAIE,eAAChB,GAAD,CAAgBvJ,IAAK2M,KAAUzM,IAAI,OAEpCqK,GAAe,GAAKE,EAAY,GAC/B,uCACE,eAACjB,GAAD,CAAqBxH,QAASgK,EAA9B,eACA,wCAGHd,IAAkB/C,KAAI,SAACjB,GAAD,OACrB,eAACsC,GAAD,CAEEC,OAAQc,IAAgBrD,EACxBlF,QAASgK,EAHX,SAKG9E,GAJIA,MAORqD,GAAeE,EAAY,GAAKA,EAAY,GAC3C,uCACE,qCACA,eAACjB,GAAD,CAAqBxH,QAASgK,EAA9B,SACGvB,OAIP,eAACrB,GAAD,CACEpH,QA/EO,WACfwI,GAAe,SAACD,GAAD,OACbA,IAAgBE,EAAYF,EAAcA,EAAc,MA8ElDmC,SAAUnC,IAAgBE,EAF5B,SAIE,eAACnB,GAAD,CAAgBtJ,IAAK4M,KAAU1M,IAAI,c,WEhKlC2M,GAAwCjQ,KAAOS,IAAV,iWAItC,qBAAGyP,UAA6B,OAAS,UAG1C,qBAAGhQ,MAAkBI,OAAO+L,MAY1B8D,GAAwBnQ,KAAOS,IAAV,gHAIvB,qBAAGP,MAAkBI,OAAO+L,MAClB,qBAAG6D,UACN,qCAAuC,UAI5CE,GAA0BpQ,KAAOS,IAAV,oEAKvB4P,GAAwBrQ,KAAOS,IAAV,yMAUrB6P,GAAetQ,KAAOS,IAAV,wFAGN,qBAAGyP,UACN,qCAAuC,UAG1CK,GAAoBvQ,KAAOoB,GAAV,gDAMjBoP,IAFwBxQ,KAAOS,IAAV,2BAEST,KAAO2E,OAAV,2DAI3B8L,GAA4BzQ,KAAOiB,IAAV,gDACvB,qBAAGiP,UACF,eAAiB,oBC9CpBQ,GAA6C,SAAC,GAIpD,IAHLC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,cACA3E,EACI,EADJA,aAEA,EAA4BvG,qBAAkB,GAA9C,oBAAOmL,EAAP,KAAeC,EAAf,KAEA,OACE,gBAACb,GAAD,CAAuCC,UAAWW,EAAlD,UACE,gBAACT,GAAD,CAAyBF,UAAWW,EAApC,UACE,eAACP,GAAD,CAAcJ,UAAWW,EAAzB,SACE,eAACN,GAAD,yBAEDI,KAEH,gBAACN,GAAD,CAAuBH,UAAWW,EAAlC,UACE,gBAACP,GAAD,CAAcJ,UAAWW,EAAzB,UACE,eAACN,GAAD,qBACCtE,GACC,eAACuE,GAAD,CAA6BpL,QAAS,kBAAM0L,GAAWD,IAAvD,SACE,eAACJ,GAAD,CACEP,UAAWW,EACXzN,IAAK2N,KACLzN,IAAI,UAKXsN,KAEH,eAACT,GAAD,CAAuBD,UAAWW,Q,mBCgxBzBG,UAntBgB,WAAO,IAAD,MACnC,EAAoEtL,oBAElE,CACAuL,KAAM,IACNC,cAAe,IACfC,OAAQ,IACRC,aAAc,IACdC,WAAY,IACZC,KAAM,IACNC,QAAS,IACTC,eAAgB,IAChBC,kBAAmB,IACnBC,YAAa,MAZf,oBAAOC,EAAP,KAAmCC,EAAnC,KAcM5P,EAASC,eAET4P,EAAWC,aAAiB9P,EAAOW,SAEnCoP,EAAYC,aAAc9R,KAAMI,OAAO+L,IAEvC4F,EAAmB5E,cAAY,SAACC,GAAD,OAAsBA,EAAMC,SAAS2E,MAEpEC,EAAgB9E,cACpB,SAACC,GAAD,OACE2E,GACAG,aAAe9E,EAAMC,SAASvL,EAAOW,SAAUsP,MAG7CzD,EAAcnB,cAAY,SAACC,GAAD,OAC9BmB,aAAcnB,EAAMC,SAASvL,EAAOW,aAGhCL,EAAQ+K,cAAY,SAACC,GAAD,OACxB+E,aAAe/E,EAAOtL,EAAOS,QAGzB4D,EAAQgH,cAAY,SAACC,GAAD,OACxB8E,aACE9E,EAAMC,SAASvL,EAAOW,UACjB,OAALL,QAAK,IAALA,OAAA,EAAAA,EAAO+D,OAAQ/D,EAAM+D,MAAQ,OAIjC,EAA4BV,eAAbkD,EAAf,qBAASpD,KAEH6M,EAAcjF,cAClB,SAACC,GAAD,OAAsBA,EAAMC,SAASvL,EAAOW,SAAS4P,UAGjDC,EAAQ,UAAGnF,cAAY,SAACC,GAAD,OAC3BqB,aAAoBrB,EAAMC,SAASvL,EAAOW,oBAD9B,aAAG,EAEdiM,QAAO,SAACxD,GACT,cAAO9I,QAAP,IAAOA,OAAP,EAAOA,EAAOkQ,SAAS3D,MAAK,SAAC3E,GAC3B,OAAOA,IAAMkB,EAAKrI,SAAWqI,EAAKzI,UAAYX,EAAOW,cAInD8P,EAAYpF,cAAY,SAACC,GAAD,OAAsBA,EAAMoF,MAAMC,SAE1DC,EAAavF,cAAY,SAACC,GAAD,OAAsBA,EAAMoF,MAAMH,UAE3DM,EAAgBxF,cACpB,SAACC,GAAD,OAAsBA,EAAMoF,MAAMG,iBAG9BC,EAAiBzF,cACrB,SAACC,GAAD,OAAsBA,EAAMoF,MAAMI,kBAG9BC,EAAiB1F,cACrB,SAACC,GAAD,OAAsBA,EAAMC,SAASvL,EAAOW,SAASqQ,iBAGvD,EAAwCtN,oBAAiB,GAAzD,oBAAOuN,EAAP,KAAqBC,EAArB,KACA,EAAwCxN,qBAAkB,GAA1D,oBAAOyN,EAAP,KAAqBC,EAArB,KACA,EAA0C1N,qBAAkB,GAA5D,oBAAO2N,EAAP,KAAsBC,EAAtB,KAEMC,EAAgBpR,oBACpB,wBACEgQ,IAAa,UACbA,EAAc/P,YAAYC,MACxB,SAAC+I,GAAD,OAAUA,EAAK7I,aAAaC,gBAAkBR,EAAOS,IAAID,wBAF9C,aACb,EAEGS,YACL,CAACkP,EAAenQ,EAAOS,MAGnByK,EAAWC,eAajBhL,oBAAQ,WACDG,IAAS+D,GAASiM,IAAgBxD,KAAO0E,MAE9CtG,EACEuG,aAAsB,CACpB1Q,QAAST,EAAM+D,MACf1D,QAASX,EAAOW,aAGnB,CAACL,EAAO4K,EAAU7G,EAAOiM,EAAatQ,EAAOW,UAEhDR,oBAAQ,WACFgQ,GAEJF,GACE/E,EACEwG,aAAoB,CAClB3Q,QAASkP,EACTtP,QAASX,EAAOW,aAGrB,CAACwP,EAAejF,EAAUlL,EAAOW,QAASsP,IAG7C9P,oBAAQ,WACDG,GAASuQ,IAAkB/D,KAAO0E,MAEvCtG,EACEyG,aAAgB,CAAEpR,aAAcP,EAAOS,IAAKE,QAASX,EAAOW,aAE7D,CAACL,EAAO4K,EAAU2F,EAAe7Q,EAAOS,IAAKT,EAAOW,UAEvDR,oBAAQ,WACDH,EAAO2N,IAAO4D,GACnBL,EAAgBK,EAAcK,QAAQtE,OAAOtN,EAAO2N,QACnD,CAAC4D,EAAevR,EAAO2N,KAE1BxN,oBAAQ,WAEJ8P,GACAsB,GACAA,EAAcpQ,OAAS,GACvBb,KACE,UAAGiR,EAAcN,GAAcnL,cAAgBxF,EAAMuR,cACvDf,IAAmBhE,KAAOC,SAE1B7B,EACE4G,aAAwB,CACtBvR,aAAcP,EAAOS,IACrBE,QAASX,EAAOW,QAChBmD,QAASyN,EAAcN,QAI5B,CACD3Q,EACA2Q,EACA/F,EACA4F,EACAS,EACAvR,EAAOS,IACPT,EAAOW,QACPsP,IAGF9P,oBAAQ,WACN,GAAKG,GAASyQ,IAAmBjE,KAAOC,QAAxC,CACA,IAAIC,EAAsB,GAC1B1M,EAAMkQ,SAASvD,SAAQ,SAAC7D,IAClB,OAACoD,QAAD,IAACA,OAAD,EAACA,EAAaU,SAAS9D,KACzB4D,EAAUb,KAAK/C,MAGf4D,EAAU7L,OAAS,GACrB+J,EACE6G,aAAkB,CAAEhR,QAASiM,EAAWrM,QAASX,EAAOW,cAI3D,CAACL,EAAOkM,EAAatB,EAAUlL,EAAOW,UAEzC2I,sBAAU,WACR4B,EAAS8G,kBACR,CAAC9G,EAAUlL,IAEdsJ,sBAAU,WACR2I,OAAOC,SAAS,EAAG,GACf5R,GAASsQ,IAAe9D,KAAO0E,MACnCtG,EACEiH,aAAU,CACRpR,QAASf,EAAOS,IAChBE,QAASX,EAAOW,QAChBmD,QAAS9D,EAAO2N,QAGnB,CAACrN,EAAOsQ,EAAY1F,EAAUlL,EAAOS,IAAKT,EAAO2N,GAAI3N,EAAOW,UAE/D2I,sBAAU,WACHtJ,EAAO2N,IAAO3N,EAAOS,KAC1ByK,EACEkH,aAA2B,CACzB7R,aAAcP,EAAOS,IACrBqD,QAAS9D,EAAO2N,GAChBhN,QAASX,EAAOW,aAGnB,CAACuK,EAAUlL,EAAOS,IAAKT,EAAO2N,GAAI3N,EAAOW,UAE5C2I,sBAAU,WACR,GAAK6G,GAAkBtJ,EAAvB,CACA,IAAMwL,EAA8B3Q,aAClCyO,EAAcxO,cACdkF,EAAQ9F,cAE0BwH,IAAhC8J,GACFzC,EAA8ByC,EAA4BvQ,gBAC3D,CAACuC,EAAOwC,EAASsJ,IAEpB,IAAMmC,EAA8CnS,oBAClD,iBAAO,CACLoS,KAAMC,KACNC,QAASC,KACT,mBAAoBC,KACpB,cAAeC,KACfC,OAAQC,KACRC,KAAMC,KACNC,OAAQC,KACRC,KAAMC,QAER,IAGIC,EAAiBlT,oBACrB,qCAAM,CACJ,CACEiC,MAAO,OACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACIqC,KACNC,KAAMf,MAER,CACEpQ,MAAO,UACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACIuC,QACND,KAAMb,MAER,CACEtQ,MAAO,WACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACIwC,gBACNF,KAAMZ,MAER,CACEvQ,MAAO,MACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACIyC,WACNH,KAAMX,MAER,CACExQ,MAAO,SACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACI0C,OACNJ,KAAMT,MAER,CACE1Q,MAAO,OACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACI2C,UACNL,KAAMP,MAER,CACE5Q,MAAO,SACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACI4C,YACNN,KAAML,MAER,CACE9Q,MAAO,OACPkG,MAAK,OACHhI,QADG,IACHA,GADG,UACHA,EAAOuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD9D,aACH,EACI6C,UACNP,KAAMH,SAGV,CAAC9S,EAAO2Q,EAAcM,IAGlBwC,EAAwB5T,oBAC5B,kBACEoR,IAAa,OACbjR,QADa,IACbA,OADa,EACbA,EAAO0T,QAAQpH,QAAO,SAACxD,GACrB,OAAOmI,EAAc1E,MAAK,SAAC3E,GACzB,OAAOA,IAAMoF,OAAOlE,EAAKtF,kBAG/B,QAACxD,QAAD,IAACA,OAAD,EAACA,EAAO0T,QAASzC,IAGb0C,EAAoB9T,oBAAQ,WAChC,IAAM+T,EACJH,GACAxC,GACAwC,EAAsB1T,MACpB,SAAC+I,GAAD,OAAUkE,OAAOlE,EAAKtF,WAAayN,EAAcN,MAE/CkD,EACJD,GACA5T,GACAA,EAAMoG,kBAAkBrG,MACtB,SAAC6H,GAAD,OAAOA,EAAEnD,eAAiBmP,EAAOE,iBAErC,OAAO,6BACFF,GADL,IAEElP,SAAUmP,GAASA,EAAMnP,SACzBwD,OAAQ2L,GAASA,EAAM3L,WAExB,CAAClI,EAAO2Q,EAAc8C,EAAuBxC,IAE1C8C,EAIA,CACJ,CACEjS,MAAO,mBACPkG,MAAOhI,EAAQA,EAAMS,QAAU,GAC/BuT,UAAW,WAEb,CACElS,MAAO,OACPkG,MAAOiJ,EAAgBA,EAAcN,GAAcnL,WAAa,IAElE,CACE1D,MAAO,yBACPkG,MAAOhI,EAAQA,EAAMiU,YAAYzO,WAAa,IAEhD,CAAE1D,MAAO,iBAAkBkG,MAAO,QAClC,CAAElG,MAAO,UAAWkG,MAAOhI,EAAQA,EAAMK,QAAU,IACnD,CAAEyB,MAAO,QAASkG,MAAO,IACzB,CACElG,MAAO,gBACPkG,MAAO2H,GAAsC,GAC7CqE,UAAW,YAgBTE,EAAcrU,oBAAQ,WAC1B,IAAMuN,EACJrJ,GACAA,EAAMjE,YAAYC,MAChB,SAAC+I,GAAD,OAAUA,EAAK7I,eAAiBP,EAAOS,IAAID,iBAE/C,OACE,gBAAC,KAAD,YACQ,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOS,WAAYf,EAAOS,MAAY,OAAL4D,QAAK,IAALA,OAAA,EAAAA,EAAOtD,WAAYT,EAAM+D,OACzD,uCACE,eAAC1E,GAAA,EAAD,CACEC,YAAayE,EACbxE,SAAsB,OAAb6N,QAAa,IAAbA,OAAA,EAAAA,EAAe7N,SAAU6N,EAAc7N,QAAU,EAC1DC,KAAK,QACLC,UAAU,iBAEZ,eAAC,KAAD,CACE4N,GAAG,eACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,YAI/CxJ,GAAS,eAAC,KAAD,mCAGd,QAAC/D,QAAD,IAACA,OAAD,EAACA,EAAOS,QAAR,OAAiBT,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO+D,MAAOrE,EAAOS,IAAK4D,IAExCoQ,EAAiBtU,oBACrB,kBACE,gBAAC,KAAD,kBACGqQ,QADH,IACGA,OADH,EACGA,EAAUjH,KAAI,SAACmL,GACd,IAAMhH,EAAgBgH,EAAQtU,YAAYC,MACxC,SAAC+I,GAAD,OAAUA,EAAK7I,eAAiBP,EAAOS,IAAID,iBAE7C,OACE,gBAAC,KAAMmU,SAAP,WACE,eAAChV,GAAA,EAAD,CACEC,YAAa8U,EACb7U,SAAsB,OAAb6N,QAAa,IAAbA,OAAA,EAAAA,EAAe7N,SAAU6N,EAAc7N,QAAU,EAC1DC,KAAK,UACLC,UAAU,oBAEZ,eAAC,KAAD,CACE4N,GAAG,kBACHC,WAAY,SAACC,GAAD,OAAa,gDAAkBA,UAT1B6G,EAAQ3T,YAcZ,IAApByP,EAASrP,QACR,eAAC,KAAD,sCAIN,CAACqP,EAAUxQ,EAAOS,MAGdmU,EAAyBzU,oBAAQ,WACrC,GAAKG,EACL,OAAO,eAAC,GAAD,CAAkB2K,iBAAkB3K,EAAMoM,YAChD,CAACpM,IAEEuU,EAAkB1U,oBAAQ,WAC9B,OACIwP,GACoC,MAApCA,EAA2BL,OAC7B2E,GA0BCA,GACD1C,GACoC,MAApC5B,EAA2BL,KAGzB,uCACE,eAAC,KAAD,UACE,eAAC,KAAD,kBAEF,eAAC,KAAD,UACE,eAAC,KAAD,CACElM,QAAS,kBAAMkO,GAAkBD,IADnC,4BAUN4C,GACA1C,GACoC,MAApC5B,EAA2BL,KAGzB,uCACE,eAAC,KAAD,UACE,gBAAC,KAAD,WACG2E,EAAkBa,eACjBb,EAAkBjP,UAClBmD,aACE8L,EAAkBa,cAClBb,EAAkBjP,UAClBc,WAAY,IACfmO,EAAkBzL,YAGvB,gBAAC,KAAD,WACE,eAAC,KAAD,CACEpF,QAAS,kBAAMkO,GAAkBD,IADnC,0BAKA,eAAC,KAAD,4CAxBR,EA1CI,uCACE,eAAC,KAAD,UACE,gBAAC,KAAD,WACG4C,EAAkBa,eACjBb,EAAkBjP,UAClBmD,aACE8L,EAAkBa,cAClBb,EAAkBjP,UAClBc,WAAY,IACfmO,EAAkBzL,YAGvB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAiBpF,QAAS,kBAAMgO,GAAiBD,IAAjD,qBAGA,eAAC,KAAD,iCAuDP,CACD8C,EACAtE,EACAwB,EACAE,EACAE,IAGIwD,EAAuB5U,oBAAQ,WAAO,IAAD,EACzC,OACEG,IAAK,UACLA,EAAMuR,YAAYN,EAAgBA,EAAcN,GAAgB,UAD3D,aACL,EACI+D,aACJ1U,EAAMuR,YAAYN,EAAgBA,EAAcN,GAAgB,GAC7D+D,WAAW7T,OAAS,EAEvB,OAAOb,QAAP,IAAOA,OAAP,EAAOA,EAAOuR,YACZN,EAAgBA,EAAcN,GAAgB,GAC9C+D,WAAWzL,KAAI,SAACH,GAChB,MAAI,eAAgBA,EAEhB,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,CACEhI,IAAKkR,EAAiBlJ,EAAK6L,YAC3B3T,IAAI,OAGR,gBAAC,KAAD,WACE,eAAC,KAAD,UACG8H,EAAK6L,aAER,eAAC,KAAD,UAA0B7L,EAAKd,aAXDc,EAAK6L,YAgBpC,QAGF5B,EAAe9J,KAAI,SAACH,GAAD,OACxB,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAwBhI,IAAKgI,EAAKmK,KAAMjS,IAAI,OAE9C,gBAAC,KAAD,WACE,eAAC,KAAD,UAA0B8H,EAAKhH,QAC/B,eAAC,KAAD,UAA0BgH,EAAKd,aANDc,EAAKhH,YAW1C,CAAC9B,EAAO+S,EAAgBpC,EAAcM,EAAee,IAExD,OACE,eAAC,KAAD,UACkB,YAAf1B,EACC,eAAC,KAAD,UACE,eAAC,KAAD,CAAcsE,MAAM,cAGtB,qCACGzE,GAA4B,WAAfG,EACZ,qCACE,eAAC,KAAD,gCAGF,gBAAC,KAAD,WACGO,GACC7Q,GACA2T,EAAkBa,eAClBb,EAAkBG,eAClBH,EAAkBnQ,SAChB,eAAC,GAAD,CACE/C,QAASf,EAAOS,IAChBqE,KAAMwI,OAAO2G,EAAkBnQ,SAC/B8B,MAAOqO,EAAkBa,cACzB/P,aAAckP,EAAkBG,cAChC1N,kBAAmBpG,EAAMoG,kBACzBf,QAAO,UACLrF,EAAMuR,YAAY7R,EAAO2N,GAAK3N,EAAO2N,GAAK,UADrC,aACL,EAA8CwH,MAEhDpS,QAAS,kBAAMqO,GAAiBD,MAGrCE,GAAiB/Q,GAASiR,GAAiBpB,GAC1C,eAAC,GAAD,CACEtL,aAAcsL,EACdpP,QAASf,EAAOS,IAChBqE,KAAMyM,EAAcN,GACpBrL,MAAOqO,EAAkBa,cACzB/L,mBAAoBkL,EAAkBG,cACtCzO,QAASrF,EAAMuR,YAAY7R,EAAO2N,GAAK3N,EAAO2N,GAAK,GAAGwH,MACtDpS,QAAS,kBAAMuO,GAAkBD,IACjC3K,kBAAmBpG,EAAMoG,oBAG7B,gBAAC,KAAD,WACE,gBAAC,KAAD,WACGpG,GACC,eAAC,KAAD,CACEc,IAAG,UACDd,EAAMuR,YACJN,EAAgBA,EAAcN,GAAgB,UAF/C,aACD,EAEGkE,MAEL7T,IAAI,KAGR,oBACE8T,KAAMvF,GAAYA,EAASwF,YAAT,OAAsB/U,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOS,SAC/CuU,OAAO,SACPC,IAAI,aAHN,SAKE,eAAC,KAAD,CAAoBnU,IAAG,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAU0D,KAAMjS,IAAI,OAE9C2O,GAAoBsB,GACnB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAsBnO,QAxQrB,WACnB,IAAMoS,EAAgBvE,EAAe,GAChCM,GAAiBiE,EAAgB,GACtCtE,EAAgBsE,IAqQE,SACE,eAAC,KAAD,CAAyBpU,IAAKqU,KAAenU,IAAI,OAEnD,gBAAC,KAAD,WACG2P,EAAe,EADlB,WACsBM,QADtB,IACsBA,OADtB,EACsBA,EAAepQ,UAErC,eAAC,KAAD,CAAsBiC,QApRzB,WACf,IAAMsS,EAAYzE,EAAe,GAC5BM,GAAiBmE,GAAanE,EAAcpQ,QACjD+P,EAAgBwE,IAiRE,SACE,eAAC,KAAD,CAAyBtU,IAAKuU,KAAcrU,IAAI,aAKxD,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,gBAAC,KAAD,WACE,eAAC,KAAD,4BACA,gBAAC,KAAD,WACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBF,IAAKwU,SAEzB,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBxU,IAAKyU,SAEzB,eAAC,KAAD,UACE,eAAC,KAAD,CAAkBzU,IAAK0U,eAI5BjB,KAEH,eAAC,KAAD,CACE9K,OACE,eAAC,KAAD,wBAEFE,cAAY,EAJd,SAME,eAAC,KAAD,UACGoK,EAAS9K,KAAI,SAACH,GAAD,OACZ,gBAAC,KAAD,WACE,eAAC,KAAD,UACGA,EAAKhH,QAER,eAAC,KAAD,UACsB,YAAnBgH,EAAKkL,UAAL,UACMlL,EAAKd,MAAMzC,MAAM,EAAG,GAD1B,cACkCuD,EAAKd,MAAMzC,MACxCuD,EAAKd,MAAMnH,OAAS,EACpBiI,EAAKd,MAAMnH,SAEbiI,EAAKd,UAViBc,EAAKhH,oBAkB3C2N,EAQA,eAAC,GAAD,CACEpB,gBAAiB8F,EACjB7F,cAAe4F,EACfvK,cAAY,IAVd,eAAC,GAAD,CACEN,KAAM,CACJ,CAAElI,KAAM,WAAYyI,QAASuK,GAC7B,CAAEhT,KAAM,SAAUyI,QAASsK,MAUjC,eAAC,KAAD,CACEzK,OAAQ,eAAC,KAAD,sBACRE,cAAY,EAFd,SAIE,eAAC,KAAD,UACG8K,MAGL,eAAC,KAAD,CACEhL,OAAQ,eAAC,KAAD,qBACRE,cAAY,EAFd,SAIE,yDAEF,eAAC,KAAD,CACEF,OACE,eAAC,KAAD,4BAEFE,cAAY,EAJd,SAMG2K","file":"static/js/5.9683e37a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const InputField = ({ name, label, type, changeHandler }: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n      />\n    </StyledInputContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 9999;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const StyledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(49, 49, 49, 1);\n  border: 1px solid rgba(170, 170, 170, 1);\n  margin: auto;\n  padding: 1.5em 1em;\n  width: 100%;\n  max-width: 25em;\n`;\n\nexport const StyledCloseModalButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 1em 1em 0 0;\n`;\n\nexport const StyledCloseButtonIcon = styled.img``;\n","import React, { ReactNode, useRef } from 'react';\nimport { CloseIcon } from '../../assets';\nimport { useOutsideClick } from '../../hooks/useOutsideClick';\nimport {\n  StyledCloseButtonIcon,\n  StyledCloseModalButton,\n  StyledModal,\n  StyledModalOverlay,\n} from './styles';\n\ninterface IProps {\n  children: ReactNode;\n  onClose: () => void;\n}\n\nexport const ModalOverlay: React.FC<IProps> = ({ children, onClose }) => {\n  const modalRef = useRef(null);\n  useOutsideClick(modalRef, onClose);\n  return (\n    <StyledModalOverlay>\n      <StyledModal ref={modalRef}>\n        <StyledCloseModalButton onClick={onClose}>\n          <StyledCloseButtonIcon src={CloseIcon} alt=\"\" />\n        </StyledCloseModalButton>\n        {children}\n      </StyledModal>\n    </StyledModalOverlay>\n  );\n};\n","import { BigNumber, BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice } from '../../utility';\n\nexport const useSellBuyLsp8Token = (\n  assetAddress: string,\n  network: NetworkName,\n) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [{ data: account }] = useAccount();\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        ));\n    }\n  };\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n  ) => {\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      );\n    }\n  };\n\n  return { buyFromMarket, setForSale };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledToggleButtonGroup = styled.div`\n  border-radius: 0.5em;\n  width: max-content;\n  border: 1px solid rgba(153, 153, 153, 1);\n  margin: 0 auto;\n\n  button {\n    border-right: 1px solid rgba(153, 153, 153, 1);\n\n    :first-child {\n      border-radius: 0.4em 0 0 0.4em;\n    }\n\n    :last-child {\n      border-right: none;\n      border-radius: 0 0.4em 0.4em 0;\n    }\n  }\n`;\n\nexport const StyledToggleButton = styled.button<{ $active: boolean }>`\n  padding: 0.5em;\n  color: ${({ $active }) => ($active ? 'rgba(255, 129, 1, 1)' : 'white')};\n  background-color: ${({ $active }) =>\n    $active ? 'rgba(255, 255, 255, 0.2)' : ''};\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n\nexport const StyledApproveButton = styled(StyledCancelButton)``;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { InputField } from '../../../components/InputField';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\nimport { useUrlParams } from '../../../hooks/useUrlParams';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { convertPrice, displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledApproveButton,\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledCancelButton,\n  StyledInfoText,\n  StyledModalHeader,\n  StyledToggleButton,\n  StyledToggleButtonGroup,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n}: IProps) => {\n  const { network } = useUrlParams();\n  const { approve } = useErc20({ tokenAddress, network });\n  const { buyFromMarket } = useSellBuyLsp8Token(address, network);\n  const [upAddress, setUpAddress] = useState<string>('');\n  const [toggleEOABuy, setToggleEOABuy] = useState<boolean>(false);\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUpAddress(event.currentTarget.value);\n  };\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledBuyCardModalContent>\n        <StyledModalHeader>BUY CARD</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n          cardImg={cardImg}\n        />\n        <StyledToggleButtonGroup>\n          <StyledToggleButton\n            $active={!toggleEOABuy}\n            onClick={() => setToggleEOABuy(false)}\n          >\n            With UP\n          </StyledToggleButton>\n          <StyledToggleButton\n            $active={toggleEOABuy}\n            onClick={() => setToggleEOABuy(true)}\n          >\n            With EOA\n          </StyledToggleButton>\n        </StyledToggleButtonGroup>\n        {!toggleEOABuy && (\n          <InputField\n            name=\"universalProfileAddress\"\n            label=\"UP Address\"\n            type=\"text\"\n            changeHandler={changeHandler}\n          />\n        )}\n        <StyledApproveButton\n          onClick={async () =>\n            await approve(\n              address,\n              price,\n              network,\n              !toggleEOABuy ? upAddress : undefined,\n            )\n          }\n        >\n          Check balance & Approve\n        </StyledApproveButton>\n        <StyledInfoText>\n          Do you confirm the purchase of this card mint for{' '}\n          {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n          {marketToken ? marketToken.symbol : ''}?\n        </StyledInfoText>\n        <StyledButtonGroup>\n          <StyledBuyButton\n            onClick={async () =>\n              await buyFromMarket(\n                address,\n                price,\n                mint,\n                !toggleEOABuy ? upAddress : undefined,\n              )\n            }\n          >\n            Buy\n          </StyledBuyButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledBuyCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [error, setError] = useState();\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n\n    const balance = await checkBalanceOf(buyer);\n\n    const allowance =\n      balance >= amount && (await checkAllowance(buyer, spenderAddress));\n    if (allowance && allowance >= amount) {\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    } else {\n      await erc20Contract.approve(spenderAddress, amount);\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../../boot/types';\nimport { ModalOverlay } from '../../../components/ModalOverlay';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledCancelButton,\n  StyledInputGroup,\n  StyledModalHeader,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellBuyLsp8Token } from '../../../hooks/useSellBuyLsp8Token';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\ninterface IParams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n}: IProps) => {\n  const params = useParams<IParams>();\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress: whiteListedTokens ? whiteListedTokens[0].tokenAddress : '',\n  });\n  const { setForSale } = useSellBuyLsp8Token(address, params.network);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  useEffect(() => {}, []);\n\n  return (\n    <ModalOverlay onClose={onClose}>\n      <StyledSellCardModalContent>\n        <StyledModalHeader>SET CARD FOR SALE</StyledModalHeader>\n        <CardPriceInfoForModal\n          address={address}\n          mint={mint}\n          price={\n            price &&\n            displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n          }\n          cardImg={cardImg}\n        />\n        {whiteListedTokens && (\n          <StyledInputGroup>\n            <InputField\n              name=\"amount\"\n              label=\"Your Price\"\n              type=\"number\"\n              changeHandler={changeHandler}\n            />\n            <StyledTokenSelectorDropDown\n              name=\"tokenAddress\"\n              onChange={changeHandler}\n            >\n              <option>Token</option>\n              {whiteListedTokens?.map((item, i) => (\n                <option key={i} value={item.tokenAddress}>\n                  {item.symbol}\n                </option>\n              ))}\n            </StyledTokenSelectorDropDown>\n          </StyledInputGroup>\n        )}\n        <StyledButtonGroup>\n          <StyledSetPriceButton\n            onClick={() =>\n              setForSale(\n                address,\n                ownerProfile,\n                mint,\n                sellForm.tokenAddress,\n                sellForm.amount,\n                selectedTokenDecimals,\n              )\n            }\n          >\n            Set for sale\n          </StyledSetPriceButton>\n          <StyledCancelButton onClick={onClose}>Cancel</StyledCancelButton>\n        </StyledButtonGroup>\n      </StyledSellCardModalContent>\n    </ModalOverlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledPaginationWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledAssetsHeader = styled.div`\n  padding-top: 20px;\n  display: flex;\n  text-transform: capitalize;\n`;\n\nexport const StyledAssetsHeading = styled.h1`\n  font-size: 24px;\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  margin-right: auto;\n`;\n\nexport const StyledAssetsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  padding: 20px 0 20px 0;\n  column-gap: 20px;\n  row-gap: 20px;\n  grid-auto-flow: unset;\n  justify-items: stretch;\n\n  @media ${({ theme }) => theme.screen.md} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media ${({ theme }) => theme.screen.xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const StyledPaginationControls = styled.div`\n  display: flex;\n  column-gap: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n`;\n\nexport const StyledNextButton = styled.button`\n  padding: 0 8px 0 8px;\n`;\n\nexport const StyledPreviousButton = styled(StyledNextButton)``;\n\nexport const StyledNextIcon = styled.img``;\n\nexport const StyledPrevIcon = styled.img``;\n\nexport const StyledPageNumButton = styled.button<{ active?: boolean }>`\n  padding: 2px 8px 2px 8px;\n  background: ${({ active }) => (active ? '#BCBCBC' : '')};\n  border-radius: 3px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledHolderPagination = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 20px;\n`;\n\nexport const StyledHolderPaginationGridContainer = styled.div`\n  display: grid;\n  padding: 15px 0;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  row-gap: 20px;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.lg} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media ${({ theme }) => theme.screen.xl} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { NextIcon, PrevIcon } from '../../../assets';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport {\n  StyledNextButton,\n  StyledNextIcon,\n  StyledPageNumButton,\n  StyledPaginationControls,\n  StyledPrevIcon,\n  StyledPreviousButton,\n} from '../../../features/pagination/styles';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n  selectUserIds,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePaginate } from '../../../hooks/usePaginate';\nimport { STATUS } from '../../../utility';\nimport {\n  StyledHolderPagination,\n  StyledHolderPaginationGridContainer,\n} from './styles';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const {\n    currentPage,\n    setCurrentPage,\n    pageCount,\n    paginationGroup,\n    start,\n    end,\n  } = usePaginate({ totalItems: holdersAddresses.length });\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses.slice(start, end).some((i) => {\n      return i === item.address;\n    });\n  });\n\n  useMemo(() => {\n    if (holderStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    holdersAddresses.slice(start, end).forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetHolders({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allProfiles, dispatch, end, holdersAddresses, params.network, start]);\n\n  const nextPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === pageCount ? currentPage : currentPage + 1,\n    );\n  };\n\n  const previousPage = () => {\n    setCurrentPage((currentPage) =>\n      currentPage === 1 ? currentPage : currentPage - 1,\n    );\n  };\n\n  const changePage = (event: React.MouseEvent) => {\n    const pageNumber = Number(event.currentTarget.textContent);\n    setCurrentPage(pageNumber);\n  };\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <StyledHolderPagination>\n      <StyledHolderPaginationGridContainer>\n        {renderHolders}\n      </StyledHolderPaginationGridContainer>\n      {pageCount > 1 && (\n        <StyledPaginationControls>\n          <StyledPreviousButton\n            onClick={previousPage}\n            disabled={currentPage === 1 ? true : false}\n          >\n            <StyledPrevIcon src={PrevIcon} alt=\"\" />\n          </StyledPreviousButton>\n          {currentPage >= 3 && pageCount > 3 && (\n            <>\n              <StyledPageNumButton onClick={changePage}>1</StyledPageNumButton>\n              <p>...</p>\n            </>\n          )}\n          {paginationGroup().map((value) => (\n            <StyledPageNumButton\n              key={value}\n              active={currentPage === value ? true : false}\n              onClick={changePage}\n            >\n              {value}\n            </StyledPageNumButton>\n          ))}\n          {currentPage <= pageCount - 2 && pageCount > 3 && (\n            <>\n              <p>...</p>\n              <StyledPageNumButton onClick={changePage}>\n                {pageCount}\n              </StyledPageNumButton>\n            </>\n          )}\n          <StyledNextButton\n            onClick={nextPage}\n            disabled={currentPage === pageCount ? true : false}\n          >\n            <StyledNextIcon src={NextIcon} alt=\"\" />\n          </StyledNextButton>\n        </StyledPaginationControls>\n      )}\n    </StyledHolderPagination>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { useViewPort } from '../useViewPort';\n\ninterface IProps {\n  totalItems: number;\n}\n\nexport const usePaginate = ({ totalItems }: IProps) => {\n  const { screenWidth } = useViewPort();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const { pageCount, limit } = useMemo(() => {\n    if (screenWidth > 1280) {\n      return {\n        pageCount: Math.ceil(totalItems / 12),\n        limit: 12,\n      };\n    }\n    if (screenWidth > 1024) {\n      return {\n        pageCount: Math.ceil(totalItems / 10),\n        limit: 10,\n      };\n    }\n    if (screenWidth > 768) {\n      return {\n        pageCount: Math.ceil(totalItems / 8),\n        limit: 8,\n      };\n    }\n\n    if (screenWidth > 640) {\n      return {\n        pageCount: Math.ceil(totalItems / 6),\n        limit: 6,\n      };\n    }\n\n    return {\n      pageCount: Math.ceil(totalItems / 4),\n      limit: 4,\n    };\n  }, [screenWidth, totalItems]);\n\n  const range = (from: number, to: number) => {\n    const range: number[] = [];\n    let i = from;\n    while (i <= to) {\n      range.push(i);\n      i++;\n    }\n    return range;\n  };\n\n  const paginationGroup = () => {\n    if (pageCount === 2) {\n      return range(1, 2);\n    }\n    switch (currentPage) {\n      case 1:\n        return range(currentPage, currentPage + 2);\n      case pageCount:\n        return range(currentPage - 2, currentPage);\n      default:\n        return range(currentPage - 1, currentPage + 1);\n    }\n  };\n\n  const start = useMemo(\n    () => currentPage * limit - limit,\n    [currentPage, limit],\n  );\n  const end = useMemo(() => start + limit, [limit, start]);\n\n  return {\n    currentPage,\n    setCurrentPage,\n    pageCount,\n    limit,\n    paginationGroup,\n    start,\n    end,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  WethIcon,\n  ZonePropertyIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledTokenIcon,\n  StyledActionsButtonWrapper,\n  StyledBuyButton,\n  StyledMakeOfferButton,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { BuyCardModal } from './BuyCardModal';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\n// import { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n// import { useSigner } from 'wagmi';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [openBuyModal, setOpenBuyModal] = useState<boolean>(false);\n  const [openSellModal, setOpenSellModal] = useState<boolean>(false);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const dispatch = useAppDispatch();\n\n  // const tokenIdForSale = useMemo(\n  //   async () =>\n  //     params.id &&\n  //     (await LSP4DigitalAssetApi.getTokenSale(\n  //       params.add,\n  //       Number(params.id),\n  //       params.network,\n  //     )),\n  //   [params.add, params.network, params.id],\n  // );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return {\n      ...market,\n      decimals: token && token.decimals,\n      symbol: token && token.symbol,\n    };\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderOwner = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledBuyButton onClick={() => setOpenBuyModal(!openBuyModal)}>\n              Buy now\n            </StyledBuyButton>\n            <StyledMakeOfferButton>Make offer</StyledMakeOfferButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Set price\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton\n              onClick={() => setOpenSellModal(!openSellModal)}\n            >\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton>Withdraw from sale</StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentMintMarket,\n    currentUsersPermissionsSet,\n    openBuyModal,\n    openSellModal,\n    ownedTokenIds,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              {openBuyModal &&\n                asset &&\n                currentMintMarket.minimumAmount &&\n                currentMintMarket.acceptedToken &&\n                currentMintMarket.tokenId && (\n                  <BuyCardModal\n                    address={params.add}\n                    mint={Number(currentMintMarket.tokenId)}\n                    price={currentMintMarket.minimumAmount}\n                    tokenAddress={currentMintMarket.acceptedToken}\n                    whiteListedTokens={asset.whiteListedTokens}\n                    cardImg={\n                      asset.ls8MetaData[params.id ? params.id : 0]?.image\n                    }\n                    onClose={() => setOpenBuyModal(!openBuyModal)}\n                  />\n                )}\n              {openSellModal && asset && ownedTokenIds && activeProfile && (\n                <SellCardModal\n                  ownerProfile={activeProfile}\n                  address={params.add}\n                  mint={ownedTokenIds[currentIndex]}\n                  price={currentMintMarket.minimumAmount}\n                  marketTokenAddress={currentMintMarket.acceptedToken}\n                  cardImg={asset.ls8MetaData[params.id ? params.id : 0].image}\n                  onClose={() => setOpenSellModal(!openSellModal)}\n                  whiteListedTokens={asset.whiteListedTokens}\n                />\n              )}\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <StyledMintControls>\n                      <StyledMintSkipButton onClick={previousMint}>\n                        <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                      <StyledMintSliderIndex>\n                        {currentIndex + 1}/{ownedTokenIds?.length}\n                      </StyledMintSliderIndex>\n                      <StyledMintSkipButton onClick={nextMint}>\n                        <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                      </StyledMintSkipButton>\n                    </StyledMintControls>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ReloadIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={ShareIcon} />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon src={OptionIcon} />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Issuer', content: renderOwner },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  issuerContent={renderOwner}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                <p>Market in progress...</p>\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n"],"sourceRoot":""}