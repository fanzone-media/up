{"version":3,"sources":["services/controllers/KeyManager.ts","components/InputField/InputField.tsx","utility/content/addresses.ts","components/TransactionStateWindow/styles.ts","components/TransactionStateWindow/TransactionStateWindow.tsx","hooks/useModal/useModal.ts","hooks/useTransferLsp8Token/useTransferLsp8Token.ts","assets/polygon.svg","features/profiles/ProfileCard/styles.ts","components/InputField/styles.ts","utility/permissions.ts","pages/AssetDetails/BuyCardModal/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/usePagination/usePagination.ts","components/ShareReferModal/styles.ts","components/ShareReferModal/ShareReferModal.tsx","hooks/useCopyText/useCopyText.ts","hooks/useQueryParams/useQueryParams.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/SellCardModal/styles.ts","pages/AssetDetails/SellCardModal/SellCardModal.tsx","hooks/useSellLsp8Token/useSellLsp8Token.ts","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useErc20/useErc20.ts","hooks/useBuyLsp8Token/useBuyLsp8Token.ts","pages/AssetDetails/components/BuyCardButton/styles.ts","pages/AssetDetails/components/BuyCardButton/BuyCardButton.tsx","hooks/useUrlParams/useUrlParams.ts","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/TransferCardTokenIdModal/TransferCardTokenIdModal.tsx","pages/AssetDetails/SelectMintModalContent/styles.ts","pages/AssetDetails/SelectMintModalContent/SelectMintModalContent.tsx","pages/AssetDetails/components/CardInfoAccordion/styles.ts","pages/AssetDetails/components/CardInfoAccordion/CardInfoAccordion.tsx","pages/AssetDetails/AssetDetails.tsx","hooks/useRemoveMarketForLsp8Token/useRemoveMarketForLsp8Token.ts"],"names":["LSP6KeyManagerSchemaList","addPermissions","universalProfileAddress","address","permissions","signer","a","encodedData","keys","values","universalProfileContract","UniversalProfileProxy__factory","connect","owner","KeyManagerContract","LSP6KeyManagerProxy__factory","getData","KeyChain","LSP6AddressPermissions","currentIndex","nextIndex","ethers","BigNumber","from","toNumber","totalIndexvalue","encodeKeyValue","String","push","indexArrayKey","encodeArrayKey","encodedPermissionsKey","ERC725","encodeKeyName","replace","encodedPermissionsValue","encodePermissions","encodedSetDataFunction","interface","encodeFunctionData","execute","transferCardViaKeyManager","assetAddress","keyManagerAddress","tokenId","toAddress","assetContract","CardTokenProxy__factory","keyManagerContract","encodedTransferFunction","encodedExecuteFunction","transaction","wait","then","result","status","Error","setCardMarketViaKeyManager","acceptedToken","minimumAmount","tokenIdAsBytes","tokenIdAsBytes32","encodedSetMarketFor","toString","approveTokenViaKeyManager","spenderAddress","tokenAddress","amount","erc20Contract","ERC20__factory","encodedApprove","buyFromCardMarketViaKeyManager","referrerAddress","tokenIdBytes","encodedBuyFromMarket","transferBalanceViaKeyManager","amountToTransfer","tokenContract","encodedTransfer","removeMarketViaKeymanager","CardMarket__factory","encodedRemoveMarketForFunction","KeyManagerApi","InputField","name","label","type","changeHandler","align","placeholder","value","disabled","onBlurHandler","step","onChange","onBlur","getDefaultAddresses","network","fetch","res","json","trimedAddress","slice","length","getWhiteListedTokenAddresses","polygon","mumbai","ethereum","l14","l16","defaultReferrerAddress","constants","AddressZero","StyledProcessingWindow","styled","div","height","StyledStateContent","StyledStateIcon","img","StyledStateHeading","h2","StyledStateDescription","p","StyledTryButton","button","TransactionStateWindow","state","transactionMessages","callback","transactionStatesIcons","loading","icon","PendingIcon","successful","SuccessIcon","failed","ErrorIcon","STATUS","IDLE","src","alt","mainHeading","description","FAILED","onClick","useModal","content","key","persist","useContext","ModalContext","isOpen","onDismiss","onPresent","handlePresent","useCallback","useTransferLsp8Token","cardAddress","profile","useState","transferState","setTransferState","error","setError","useSigner","data","useNetwork","networkData","transferCard","chain","toast","position","LOADING","isOwnerKeyManager","SUCCESSFUL","catch","LSP3ProfileApi","transferCardViaUniversalProfile","resetState","StyledProfileCard","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","StyledBalanceWrapper","StyledBalance","font","weight","regular","StyledPolygon","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","find","x","toLowerCase","StyledBuyCardModalContent","StyledInfoText","StyledPaymentText","StyledRadioGroup","StyledRadioInput","StyledRadioLabel","$checked","StyledSelectInputContainer","StyledUpAddressSelectInput","select","StyledUpAddressSelectLabel","StyledBuyStepsContainer","StyledBuyStep","StyledErrorMessage","ProfileCard","userProfile","balance","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","asset","add","to","Web3","utils","toChecksumAddress","data-tip","tokenIds","data-for","makeBlockie","profileImage","usePagination","range","setRange","StyledShareReferModalContent","StyledShareMessage","StyledSeparatorContainer","StyledDivider","StyledDivText","StyledShareViaLabel","StyledShareOptionsContainer","StyledShareLink","target","StyledInputError","ShareReferModal","pathName","getItems","useLocalStorage","selectInputRef","useRef","copied","setCopied","canCopy","window","navigator","clipboard","copyText","text","writeText","setTimeout","useCopyText","savedProfiles","LOCAL_STORAGE_KEYS","UP","savedProfilesAddresses","Object","setReferrerAddress","customReferrerAddress","setCustomReferrerAddress","inputError","setInputError","event","currentTarget","getReferrer","isAddress","ref","defaultValue","map","item","variant","console","log","current","href","location","origin","Twitter","title","Facebook","as","useQueryParams","search","useLocation","URLSearchParams","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","mint","price","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","SellCardModal","ownerProfile","whiteListedTokens","marketTokenAddress","sellForm","setSellForm","sellState","setSellState","setForSale","decimals","convertPrice","LSP4DigitalAssetApi","setMarketViaUniversalProfile","useSellLsp8Token","selectedTokenDecimals","selectedToken","marketTokenDecimals","i","whiteListedtokensAddresses","displayPrice","selected","symbol","StyledTabsHeader","StyledTabsLabel","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","useEffect","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","md","StyledAccordionHeader","$expanded","StyledIssuerOwnerWrapper","StyledCreatorsContainer","StyledIssuerContainer","StyledOwnerContainer","StyledHeader","StyledHeaderTitle","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","BuyCardModal","useAccount","account","approveError","setApproveError","isApproved","setIsApproved","provider","useRpcProvider","approve","buyer","checkBalanceOf","checkAllowance","allowance","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","err","approveTokenViaUniversalProfile","ownerAddress","balanceOf","resetApproveState","undefined","useErc20","localReferrerAddress","REFERRER","buyState","setBuyState","buyFromMarket","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","useBuyLsp8Token","upAddress","setUpAddress","paymentOption","setPaymentOption","marketToken","paymentChangeHandler","htmlFor","StyledCardBuyButton","BuyCardButton","useUrlParams","selectedMintMarket","market","markets","Number","token","lsp8MetaData","image","onDismissBuyCardModal","onPresentBuyCardModal","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","CardMarket","cardMarkets","findDecimals","findSymbol","TransferCardTokenIdModal","setToAddress","e","StyledSelectMintModalContent","StyledSelectMintListHeader","StyledSelectMintListHeaderContent","StyledSelectMintList","StyledSelectMintListContent","StyledListMint","StyledListPrice","SelectMintModalContent","ownedTokenIds","onSelect","onSelectCallback","renderMintList","indexOf","StyledCardInfo","StyledCardInfoAccordion","StyledCardInfoContainer","StyledCardInfoLabel","StyledCardInfoValue","StyledCardStandardLabel","CardInfoAccordion","assetId","isDesktop","useMediaQuery","cardInfo","supportedInterface","tokenSupplyCap","totalSupply","valueType","toUpperCase","AssetDetails","sign","transfervalue","deploy","delegatecall","staticcall","call","setdata","addpermissions","changepermissions","changeowner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","pathname","query","setReferrer","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","cards","ownerStatus","creators","cardError","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","mintIdInputRef","setCurrentIndex","currentTokenId","index","marketsForOwnedTokens","currentMintMarket","mintChangeHelper","removingMarket","setRemovingMarket","removeMarket","finally","useRemoveMarketForLsp8Token","parseInt","onDismissSellCardModal","onPresentSellCardModal","onDismissSelectMintModal","onPresentSelectMintModal","onDismissTransferCardModal","onPresentTransferCardModal","onDismissShareModal","onPresentShareModal","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","get","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","renderContractDetailHeader","TransferIcon","ReloadIcon","ShareIcon","OptionIcon","getHeroImgSrc","LSP4Metadata","images","startsWith","Utils","convertImageURL","url","getOtherImgs","color","previousIndex","BackwardsIcon","min","max","onKeyPress","blur","val","ForwardsIcon","assets","fileType","controls","animation_url"],"mappings":"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","file":"static/js/5.942b6152.chunk.js","sourcesContent":["import { ERC725, ERC725JSONSchema } from '@erc725/erc725.js';\nimport {\n  encodeArrayKey,\n  encodeKeyValue,\n} from '@erc725/erc725.js/build/main/lib/utils';\nimport { BigNumber, BigNumberish, BytesLike, ethers, Signer } from 'ethers';\nimport {\n  CardMarket__factory,\n  CardTokenProxy__factory,\n  ERC20__factory,\n  LSP6KeyManagerProxy__factory,\n  UniversalProfileProxy__factory,\n} from '../../submodules/fanzone-smart-contracts/typechain';\nimport { executeCallToUniversalProfileViaKeyManager } from '../../submodules/fanzone-smart-contracts/utils/universalProfile';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { Address } from '../../utils/types';\nimport KeyChain from '../utilities/KeyChain';\n\nconst LSP6KeyManagerSchemaList: ERC725JSONSchema = {\n  name: 'AddressPermissions[]',\n  key: '0xdf30dba06db6a30e65354d9a64c609861f089545ca58c6b4dbe31a5f338cb0e3',\n  keyType: 'Array',\n  valueContent: 'Number',\n  valueType: 'uint256',\n};\n\ntype permissionObject = {\n  [k: string]: boolean;\n};\n\nconst addPermissions = async (\n  universalProfileAddress: string,\n  address: string,\n  permissions: permissionObject,\n  signer: Signer,\n) => {\n  const encodedData = {\n    keys: [],\n    values: [],\n  } as { keys: string[]; values: string[] };\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const owner = await universalProfileContract.owner();\n  const KeyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    owner,\n    signer,\n  );\n\n  const [currentIndex] = await universalProfileContract.getData([\n    KeyChain.LSP6AddressPermissions,\n  ]);\n  const nextIndex =\n    currentIndex === '0x' ? 0 : ethers.BigNumber.from(currentIndex).toNumber();\n\n  const totalIndexvalue = encodeKeyValue(\n    LSP6KeyManagerSchemaList.valueContent,\n    LSP6KeyManagerSchemaList.valueType,\n    String(nextIndex + 1),\n    LSP6KeyManagerSchemaList.name,\n  );\n  encodedData.keys.push(LSP6KeyManagerSchemaList.key);\n  encodedData.values.push(totalIndexvalue);\n\n  const indexArrayKey = encodeArrayKey(LSP6KeyManagerSchemaList.key, nextIndex);\n  encodedData.keys.push(indexArrayKey);\n  encodedData.values.push(address);\n\n  const encodedPermissionsKey = ERC725.encodeKeyName(\n    `AddressPermissions:Permissions:${address.replace('0x', '')}`,\n  );\n  const encodedPermissionsValue = ERC725.encodePermissions(permissions);\n  encodedData.keys.push(encodedPermissionsKey);\n  encodedData.values.push(encodedPermissionsValue);\n\n  const encodedSetDataFunction =\n    universalProfileContract.interface.encodeFunctionData('setData', [\n      encodedData.keys,\n      encodedData.values,\n    ]);\n\n  await KeyManagerContract.execute(encodedSetDataFunction);\n};\n\nconst transferCardViaKeyManager = async (\n  assetAddress: string,\n  universalProfileAddress: string,\n  keyManagerAddress: string,\n  tokenId: number,\n  toAddress: string,\n  signer: Signer,\n) => {\n  const assetContract = CardTokenProxy__factory.connect(assetAddress, signer);\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n\n  const encodedTransferFunction = assetContract.interface.encodeFunctionData(\n    'transferFrom',\n    [universalProfileAddress, toAddress, tokenId],\n  );\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedTransferFunction,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst setCardMarketViaKeyManager = async (\n  assetAddress: string,\n  universalProfileAddress: string,\n  keyManagerAddress: string,\n  tokenId: number,\n  acceptedToken: string,\n  minimumAmount: BigNumberish,\n  signer: Signer,\n) => {\n  const assetContract = CardTokenProxy__factory.connect(assetAddress, signer);\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const tokenIdAsBytes = tokenIdAsBytes32(tokenId);\n  const encodedSetMarketFor = assetContract.interface.encodeFunctionData(\n    'setMarketFor',\n    [tokenIdAsBytes, acceptedToken, minimumAmount.toString()],\n  );\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedSetMarketFor,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst approveTokenViaKeyManager = async (\n  keyManagerAddress: string,\n  universalProfileAddress: string,\n  spenderAddress: string,\n  tokenAddress: string,\n  amount: BigNumber,\n  signer: Signer,\n) => {\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const erc20Contract = ERC20__factory.connect(tokenAddress, signer);\n  const encodedApprove = erc20Contract.interface.encodeFunctionData('approve', [\n    spenderAddress,\n    amount.toString(),\n  ]);\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      tokenAddress,\n      0,\n      encodedApprove,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst buyFromCardMarketViaKeyManager = async (\n  assetAddress: string,\n  keyManagerAddress: string,\n  universalProfileAddress: string,\n  tokenId: number,\n  minimumAmount: BigNumber,\n  signer: Signer,\n  referrerAddress: Address,\n) => {\n  const assetContract = CardTokenProxy__factory.connect(assetAddress, signer);\n  const tokenIdBytes = tokenIdAsBytes32(tokenId);\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n\n  const encodedBuyFromMarket = assetContract.interface.encodeFunctionData(\n    'buyFromMarket',\n    [tokenIdBytes, minimumAmount.toString(), referrerAddress],\n  );\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedBuyFromMarket,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst transferBalanceViaKeyManager = async (\n  tokenAddress: string,\n  keyManagerAddress: string,\n  universalProfileAddress: string,\n  amountToTransfer: BigNumberish,\n  toAddress: string,\n  signer: Signer,\n) => {\n  const tokenContract = ERC20__factory.connect(tokenAddress, signer);\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n  const encodedTransfer = tokenContract.interface.encodeFunctionData(\n    'transfer',\n    [toAddress, amountToTransfer],\n  );\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      tokenAddress,\n      0,\n      encodedTransfer,\n    ]);\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\nconst removeMarketViaKeymanager = async (\n  assetAddress: string,\n  universalProfileAddress: string,\n  keyManagerAddress: string,\n  tokenId: BytesLike,\n  signer: Signer,\n) => {\n  const assetContract = CardMarket__factory.connect(assetAddress, signer);\n  const universalProfileContract = UniversalProfileProxy__factory.connect(\n    universalProfileAddress,\n    signer,\n  );\n\n  const keyManagerContract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n\n  const encodedRemoveMarketForFunction =\n    assetContract.interface.encodeFunctionData('removeMarketFor', [tokenId]);\n\n  const encodedExecuteFunction =\n    universalProfileContract.interface.encodeFunctionData('execute', [\n      '0x0',\n      assetAddress,\n      0,\n      encodedRemoveMarketForFunction,\n    ]);\n\n  const transaction = await keyManagerContract.execute(encodedExecuteFunction);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nconst executeTransactionViaKeyManager = async (\n  keyManagerAddress: Address,\n  encodedData: string,\n  signer: Signer,\n) => {\n  const contract = LSP6KeyManagerProxy__factory.connect(\n    keyManagerAddress,\n    signer,\n  );\n  const transaction = await contract.execute(encodedData);\n  await transaction.wait(1).then((result) => {\n    if (result.status === 0) {\n      throw new Error('Transaction reverted');\n    }\n  });\n};\n\nexport const KeyManagerApi = {\n  addPermissions,\n  setCardMarketViaKeyManager,\n  transferCardViaKeyManager,\n  approveTokenViaKeyManager,\n  buyFromCardMarketViaKeyManager,\n  transferBalanceViaKeyManager,\n  removeMarketViaKeymanager,\n};\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  align?: string;\n  placeholder?: string;\n  value?: string;\n  disabled?: boolean;\n  onBlurHandler?: (event: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nexport const InputField = ({\n  name,\n  label,\n  type,\n  changeHandler,\n  align,\n  placeholder,\n  value,\n  disabled,\n  onBlurHandler,\n}: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n        align={align}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n        onBlur={onBlurHandler}\n      />\n    </StyledInputContainer>\n  );\n};\n","import { ethers } from 'ethers';\nimport { NetworkName } from '../../boot/types';\nimport { Address } from '../../utils/types';\n\nexport const getDefaultAddresses = async (\n  network: NetworkName,\n  type: 'assetsAddresses' | 'profileAddresses',\n): Promise<Array<Address>> => {\n  const res = await fetch(`./api/${network}/${type}.json`);\n  return res.json();\n};\n\nexport const trimedAddress = (address: Address) =>\n  `${address.slice(0, 8)}...${address.slice(\n    address.length - 4,\n    address.length,\n  )}`;\n\nexport const getWhiteListedTokenAddresses = (network: NetworkName) => {\n  const whiteListedTokens: { [key in NetworkName]: Array<string> } = {\n    polygon: [\n      '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    ],\n    mumbai: ['0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa'],\n    ethereum: ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'],\n    l14: [''],\n    l16: [''],\n  };\n\n  return whiteListedTokens[network];\n};\n\nexport const defaultReferrerAddress = {\n  polygon: ethers.constants.AddressZero,\n  mumbai: ethers.constants.AddressZero,\n  ethereum: ethers.constants.AddressZero,\n  l14: ethers.constants.AddressZero,\n  l16: ethers.constants.AddressZero,\n};\n","import styled from 'styled-components';\n\nexport const StyledProcessingWindow = styled.div<{ height?: 'full' }>`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: ${({ height }) => (height ? '100%' : 'calc(100% - 11em)')};\n  bottom: 0;\n  left: -0.03em;\n  border-radius: 0.625em;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const StyledStateContent = styled.div`\n  text-align: center;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledStateIcon = styled.img`\n  height: 8.5em;\n`;\n\nexport const StyledStateHeading = styled.h2`\n  margin-top: -2em;\n`;\n\nexport const StyledStateDescription = styled.p``;\n\nexport const StyledTryButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  padding: 0.3em 0;\n`;\n","import { ErrorIcon, PendingIcon, SuccessIcon } from '../../assets';\nimport { STATUS } from '../../utility';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledProcessingWindow,\n  StyledStateContent,\n  StyledStateDescription,\n  StyledStateHeading,\n  StyledStateIcon,\n  StyledTryButton,\n} from './styles';\n\ninterface IProps {\n  state: STATUS;\n  height?: 'full';\n  callback?: () => any;\n  transactionMessages: {\n    loading: {\n      mainHeading: string;\n      description?: string;\n    };\n    successful: {\n      mainHeading: string;\n      description?: string;\n    };\n    failed: {\n      mainHeading: string;\n      description?: string;\n    };\n  };\n}\n\nexport const TransactionStateWindow = ({\n  state,\n  height,\n  transactionMessages,\n  callback,\n}: IProps) => {\n  const transactionStatesIcons = {\n    loading: {\n      icon: PendingIcon,\n    },\n    successful: {\n      icon: SuccessIcon,\n    },\n    failed: {\n      icon: ErrorIcon,\n    },\n  };\n  return (\n    <>\n      {state !== STATUS.IDLE && (\n        <StyledProcessingWindow height={height}>\n          <StyledStateContent>\n            <StyledStateIcon src={transactionStatesIcons[state].icon} alt=\"\" />\n            <StyledStateHeading>\n              {transactionMessages[state].mainHeading}\n            </StyledStateHeading>\n            <StyledStateDescription>\n              {transactionMessages[state]?.description}\n            </StyledStateDescription>\n            {callback && state === STATUS.FAILED && (\n              <StyledTryButton onClick={callback}>Try again</StyledTryButton>\n            )}\n          </StyledStateContent>\n        </StyledProcessingWindow>\n      )}\n    </>\n  );\n};\n","import { useCallback, useContext } from 'react';\nimport { ModalContext, IOnPresent } from '../../context/ModalProvider';\n\nexport const useModal = (\n  ...[content, key, persist]: Parameters<IOnPresent>\n) => {\n  const { isOpen, onDismiss, onPresent } = useContext(ModalContext);\n\n  const handlePresent = useCallback(() => {\n    onPresent(content, key, persist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content, key, onPresent]);\n\n  return { handlePresent, onDismiss, isOpen };\n};\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  network: NetworkName,\n) => {\n  const [transferState, setTransferState] = useState<STATUS>(STATUS.IDLE);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n\n  const transferCard = async () => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setTransferState(STATUS.LOADING);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    transferCard,\n    transferState,\n    error,\n    resetState: () => setTransferState(STATUS.IDLE),\n  };\n};\n","export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 1rem;\n`;\n\nexport const StyledPaymentText = styled.p`\n  font-size: 0.9em;\n  font-weight: 700;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  column-gap: 0.2em;\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  text-align: center;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledBuyStepsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2em;\n  margin-top: 1.5em;\n  position: relative;\n`;\n\nexport const StyledBuyStep = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 0.5em;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  color: red;\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledShareReferModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 1em;\n`;\n\nexport const StyledShareMessage = styled.p``;\n\nexport const StyledSeparatorContainer = styled.div`\n  display: flex;\n  width: 100%;\n  column-gap: 0.5em;\n`;\n\nexport const StyledDivider = styled.span`\n  border: 0.01em solid rgba(153, 153, 153, 1);\n  margin: auto 0;\n  width: 100%;\n`;\n\nexport const StyledDivText = styled.p``;\n\nexport const StyledShareViaLabel = styled.p``;\n\nexport const StyledShareOptionsContainer = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledShareLink = styled.a.attrs({\n  target: '_blank',\n})`\n  display: flex;\n  align-items: center;\n  column-gap: 0.25em;\n`;\n\nexport const StyledInputError = styled.p`\n  color: red;\n`;\n","import { useRef, useState } from 'react';\nimport { isAddress } from 'web3-utils';\nimport { Facebook, Link, Twitter } from '../../assets';\nimport { NetworkName } from '../../boot/types';\nimport { useCopyText } from '../../hooks/useCopyText';\nimport {\n  LOCAL_STORAGE_KEYS,\n  ProfilePermissionsLocal,\n  useLocalStorage,\n} from '../../hooks/useLocalStorage';\nimport {\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from '../../pages/AssetDetails/BuyCardModal/styles';\nimport { InputField } from '../InputField';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledDivider,\n  StyledDivText,\n  StyledInputError,\n  StyledSeparatorContainer,\n  StyledShareLink,\n  StyledShareMessage,\n  StyledShareOptionsContainer,\n  StyledShareReferModalContent,\n  StyledShareViaLabel,\n} from './styles';\n\ninterface IProps {\n  network: NetworkName;\n  pathName: string;\n  onDismiss: () => void;\n}\n\nexport const ShareReferModal = ({ network, pathName, onDismiss }: IProps) => {\n  const { getItems } = useLocalStorage();\n  const selectInputRef = useRef<HTMLSelectElement>(null);\n  const { copied, copyText } = useCopyText();\n  const savedProfiles = getItems(\n    LOCAL_STORAGE_KEYS.UP,\n  ) as ProfilePermissionsLocal;\n  const savedProfilesAddresses =\n    savedProfiles && savedProfiles[network]\n      ? Object.keys(savedProfiles[network])\n      : null;\n  const [referrerAddress, setReferrerAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [customReferrerAddress, setCustomReferrerAddress] = useState<boolean>(\n    savedProfilesAddresses ? false : true,\n  );\n  const [inputError, setInputError] = useState<string>('');\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setReferrerAddress(event.currentTarget.value);\n  };\n\n  const getReferrer = () => {\n    return isAddress(referrerAddress) ? `?referrer=${referrerAddress}` : '';\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    !isAddress(referrerAddress)\n      ? setInputError('wrong address')\n      : setInputError('');\n  };\n\n  return (\n    <StyledShareReferModalContent>\n      <StyledShareMessage>\n        Share this link and participate in 1% WETH market sales that came\n        through you\n      </StyledShareMessage>\n      {savedProfilesAddresses && (\n        <StyledSelectInputContainer>\n          <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n          <StyledUpAddressSelectInput\n            ref={selectInputRef}\n            defaultValue={savedProfilesAddresses[0]}\n            onChange={changeHandler}\n          >\n            {savedProfilesAddresses.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </StyledUpAddressSelectInput>\n        </StyledSelectInputContainer>\n      )}\n      {savedProfilesAddresses && (\n        <StyledSeparatorContainer>\n          <StyledDivider />\n          <StyledDivText>Or</StyledDivText>\n          <StyledDivider />\n        </StyledSeparatorContainer>\n      )}\n      {customReferrerAddress && (\n        <InputField\n          name=\"otherAddress\"\n          label=\"Address\"\n          type=\"text\"\n          changeHandler={changeHandler}\n          onBlurHandler={onBlurHandler}\n        />\n      )}\n      {inputError && customReferrerAddress && (\n        <StyledInputError>{inputError}</StyledInputError>\n      )}\n      {savedProfilesAddresses && (\n        <StyledModalButton\n          variant=\"gray\"\n          onClick={() => {\n            if (customReferrerAddress) {\n              console.log('here');\n              selectInputRef.current &&\n                setReferrerAddress(selectInputRef.current.value);\n            } else {\n              setReferrerAddress('');\n            }\n            setCustomReferrerAddress(!customReferrerAddress);\n          }}\n        >\n          {customReferrerAddress ? 'cancel input' : 'use other address'}\n        </StyledModalButton>\n      )}\n      <StyledShareViaLabel>Share Via: </StyledShareViaLabel>\n      <StyledShareOptionsContainer>\n        <StyledShareLink\n          href={`https://twitter.com/intent/tweet?url=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Twitter} alt=\"Twitter\" title=\"twitter\" />\n        </StyledShareLink>\n        <StyledShareLink\n          href={`https://www.facebook.com/sharer.php?u=${\n            window.location.origin\n          }/#${pathName}${getReferrer()}`}\n        >\n          <img src={Facebook} alt=\"Facebook\" title=\"facebook\" />\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'link',\n              `${window.location.origin}/#${pathName}${getReferrer()}`,\n            )\n          }\n        >\n          <img src={Link} alt=\"Copy Link\" title=\"copy link\" />\n          {copied && copied['link'] ? 'Copied!' : 'Copy Link'}\n        </StyledShareLink>\n        <StyledShareLink\n          as=\"button\"\n          onClick={() =>\n            copyText(\n              'embed',\n              `<iframe src=\"${window.location.origin}/#${pathName}\" title=\"Fanzone\"></iframe>`,\n            )\n          }\n        >\n          {`</>`} {copied && copied['embed'] ? 'Copied!' : 'Copy Embed'}\n        </StyledShareLink>\n      </StyledShareOptionsContainer>\n      <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n        Cancel\n      </StyledModalButton>\n    </StyledShareReferModalContent>\n  );\n};\n","import { useState } from 'react';\n\nexport const useCopyText = () => {\n  const [copied, setCopied] = useState<{ [key: string]: boolean }>();\n\n  const copyText = (key: string, text: string) => {\n    window.navigator.clipboard.writeText(text);\n    setCopied({ ...copied, [key]: true });\n    setTimeout(() => {\n      setCopied({ ...copied, [key]: false });\n    }, 2000);\n  };\n\n  const canCopy = !!window.navigator.clipboard;\n\n  return { copied, copyText, canCopy };\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const useQueryParams = () => {\n  const { search } = useLocation();\n\n  return useMemo(() => new URLSearchParams(search), [search]);\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledInputGroup,\n  StyledSellCardModalContent,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellLsp8Token } from '../../../hooks/useSellLsp8Token';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const SellCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n  network,\n}: IProps) => {\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale, sellState } = useSellLsp8Token();\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'SETTING FOR SALE...',\n    },\n    successful: {\n      mainHeading: 'SUCCESSFULLY SET FOR SALE',\n    },\n    failed: {\n      mainHeading: 'SOMETHING WENT WRONG',\n    },\n  };\n\n  return (\n    <StyledSellCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={\n          price &&\n          displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n        }\n        cardImg={cardImg}\n      />\n      {whiteListedTokens && (\n        <StyledInputGroup>\n          <InputField\n            name=\"amount\"\n            label=\"Your Price\"\n            type=\"number\"\n            changeHandler={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            {whiteListedTokens?.map((item, i) => (\n              <option\n                key={i}\n                value={item.tokenAddress}\n                selected={\n                  item.tokenAddress.toLowerCase() ===\n                  whiteListedtokensAddresses[0].toLowerCase()\n                }\n              >\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n      )}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={() =>\n            setForSale(\n              address,\n              ownerProfile,\n              mint,\n              sellForm.tokenAddress,\n              sellForm.amount,\n              selectedTokenDecimals,\n              network,\n            )\n          }\n          disabled={\n            !whiteListedTokens ||\n            whiteListedTokens?.length === 0 ||\n            sellForm.amount <= 0\n          }\n        >\n          Set for sale\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={sellState}\n        transactionMessages={transactionStatesMessages}\n      />\n    </StyledSellCardModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice, STATUS } from '../../utility';\n\nexport const useSellLsp8Token = () => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [sellState, setSellState] = useState<STATUS>(STATUS.IDLE);\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n    network: NetworkName,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setSellState(STATUS.LOADING);\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    sellState,\n    setForSale,\n    error,\n    resetState: () => setSellState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledIssuerOwnerWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  padding: 0.5em 1em;\n`;\n\nexport const StyledOwnerContainer = styled.div`\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n","import { ReactNode, useState } from 'react';\nimport {\n  StyledAccordionHeader,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n  StyledIssuerOwnerWrapper,\n  StyledOwnerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper>\n      <StyledIssuerOwnerWrapper>\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          </StyledHeader>\n          {issuerContent}\n        </StyledIssuerContainer>\n        {ownerContent && (\n          <StyledOwnerContainer>\n            <StyledHeader $expanded={expand}>\n              <StyledHeaderTitle>Owner</StyledHeaderTitle>\n            </StyledHeader>\n            {ownerContent}\n          </StyledOwnerContainer>\n        )}\n      </StyledIssuerOwnerWrapper>\n\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport {\n  LOCAL_STORAGE_KEYS,\n  useLocalStorage,\n} from '../../../hooks/useLocalStorage';\nimport { useBuyLsp8Token } from '../../../hooks/useBuyLsp8Token';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledBuyCardModalContent,\n  StyledBuyStep,\n  StyledBuyStepsContainer,\n  StyledErrorMessage,\n  StyledInfoText,\n  StyledPaymentText,\n  StyledRadioGroup,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from './styles';\nimport { isAddress } from 'ethers/lib/utils';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n  network,\n}: IProps) => {\n  const { approve, isApproved, resetApproveState, approveError } = useErc20({\n    tokenAddress,\n    network,\n  });\n  const { buyFromMarket, buyState, resetState } = useBuyLsp8Token(\n    address,\n    network,\n  );\n  const { getItems } = useLocalStorage();\n  const savedProfiles = getItems(LOCAL_STORAGE_KEYS.UP);\n  const savedProfilesAddresses = savedProfiles\n    ? Object.keys(savedProfiles[network])\n    : null;\n  const [upAddress, setUpAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [paymentOption, setPaymentOption] = useState<string>('');\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUpAddress(event.currentTarget.value);\n    resetApproveState();\n  };\n\n  const paymentChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPaymentOption(event.target.value);\n    resetApproveState();\n  };\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'Purchase is being verified',\n      description:\n        'In a few moments you will know if the purchase was successful.',\n    },\n    successful: {\n      mainHeading: 'Purchase successful!',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'Purchase failed',\n      description: 'Please try again.',\n    },\n  };\n\n  return (\n    <StyledBuyCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n        cardImg={cardImg}\n      />\n      <StyledBuyStepsContainer>\n        <StyledBuyStep>\n          <StyledPaymentText>1. CHOOSE PAYMENT METHOD</StyledPaymentText>\n          <StyledRadioGroup>\n            <StyledRadioLabel htmlFor=\"up\" $checked={paymentOption === 'up'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"up\"\n                value=\"up\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Universal Profile\n            </StyledRadioLabel>\n            <StyledRadioLabel htmlFor=\"mm\" $checked={paymentOption === 'mm'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"mm\"\n                value=\"mm\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Metamask\n            </StyledRadioLabel>\n          </StyledRadioGroup>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>\n            2. CONFIRM ADDRESS & CHECK BALANCE\n          </StyledPaymentText>\n          {paymentOption === 'up' &&\n            (savedProfilesAddresses ? (\n              <StyledSelectInputContainer>\n                <StyledUpAddressSelectLabel>\n                  UP Address\n                </StyledUpAddressSelectLabel>\n                <StyledUpAddressSelectInput>\n                  {savedProfilesAddresses.map((item) => (\n                    <option key={item} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </StyledUpAddressSelectInput>\n              </StyledSelectInputContainer>\n            ) : (\n              <InputField\n                name=\"universalProfileAddress\"\n                label=\"UP Address\"\n                type=\"text\"\n                changeHandler={changeHandler}\n                disabled={paymentOption === 'up' && isApproved}\n              />\n            ))}\n          <StyledModalButton\n            disabled={\n              ((paymentOption === 'up' || paymentOption === '') &&\n                !isAddress(upAddress)) ||\n              isApproved\n            }\n            onClick={async () =>\n              await approve(\n                address,\n                price,\n                network,\n                paymentOption === 'up' ? upAddress : undefined,\n              )\n            }\n          >\n            Check balance & Approve\n          </StyledModalButton>\n          <StyledErrorMessage>{approveError}</StyledErrorMessage>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>3. CONFIRM PURCHASE</StyledPaymentText>\n          <StyledInfoText>\n            Do you confirm the purchase of this card mint for{' '}\n            {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n            {marketToken ? marketToken.symbol : ''}?\n          </StyledInfoText>\n        </StyledBuyStep>\n      </StyledBuyStepsContainer>\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!isApproved}\n          onClick={async () =>\n            await buyFromMarket(\n              address,\n              price,\n              mint,\n              paymentOption === 'up' ? upAddress : undefined,\n            )\n          }\n        >\n          Buy\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={buyState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledBuyCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useAccount, useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [{ data: networkData }] = useNetwork();\n  const [error, setError] = useState();\n  const [approveError, setApproveError] = useState<string>();\n  const [isApproved, setIsApproved] = useState<boolean>(false);\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n\n    const balance = await checkBalanceOf(buyer);\n\n    if (balance < amount) {\n      setApproveError('Not enough balance');\n      return;\n    }\n\n    const allowance = await checkAllowance(buyer, spenderAddress);\n\n    if (allowance && allowance >= amount) {\n      setIsApproved(true);\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    } else {\n      await erc20Contract\n        .approve(spenderAddress, amount)\n        .then(() => {\n          setIsApproved(true);\n        })\n        .catch((err) => {\n          setError(err);\n        });\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  const resetApproveState = () => {\n    setIsApproved(false);\n    setApproveError(undefined);\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n    isApproved,\n    resetApproveState,\n    approveError,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { isAddress } from 'ethers/lib/utils';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { STATUS } from '../../utility';\nimport { defaultReferrerAddress } from '../../utility/content/addresses';\nimport {\n  LOCAL_STORAGE_KEYS,\n  ReferrerAddressLocal,\n  useLocalStorage,\n} from '../useLocalStorage';\n\nexport const useBuyLsp8Token = (assetAddress: string, network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: networkData }] = useNetwork();\n  const { getItems } = useLocalStorage();\n  const localReferrerAddress = getItems(\n    LOCAL_STORAGE_KEYS.REFERRER,\n  ) as ReferrerAddressLocal;\n  const referrerAddress =\n    localReferrerAddress[network] && isAddress(localReferrerAddress[network])\n      ? localReferrerAddress[network]\n      : defaultReferrerAddress[network];\n  const [error, setError] = useState();\n  const [buyState, setBuyState] = useState<STATUS>(STATUS.IDLE);\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    if (networkData.chain?.name !== network) {\n      toast('Wrong Network', { type: 'error', position: 'top-right' });\n      return;\n    }\n    setBuyState(STATUS.LOADING);\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n          referrerAddress,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n          referrerAddress,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n          referrerAddress,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n  };\n\n  return {\n    buyFromMarket,\n    error,\n    buyState,\n    resetState: () => setBuyState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n  width: 100%;\n`;\n","import { useMemo } from 'react';\nimport { useModal } from '../../../../hooks/useModal';\nimport { useUrlParams } from '../../../../hooks/useUrlParams';\nimport { ICard } from '../../../../services/models';\nimport { BuyCardModal } from '../../BuyCardModal';\nimport { StyledCardBuyButton } from './styles';\n\ninterface IProps {\n  asset: ICard;\n  mint: number;\n}\n\nexport const BuyCardButton = ({ asset, mint }: IProps) => {\n  const { network, tokenId } = useUrlParams();\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset.markets.find((item) => Number(item.tokenId) === mint);\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, mint]);\n\n  const {\n    handlePresent: onPresentBuyCardModal,\n    onDismiss: onDismissBuyCardModal,\n  } = useModal(\n    asset && selectedMintMarket && (\n      <BuyCardModal\n        address={asset.address}\n        mint={Number(selectedMintMarket.tokenId)}\n        price={selectedMintMarket.minimumAmount}\n        tokenAddress={selectedMintMarket.acceptedToken}\n        whiteListedTokens={asset.whiteListedTokens}\n        cardImg={asset.lsp8MetaData[tokenId ? tokenId : 0]?.image}\n        onDismiss={() => {\n          onDismissBuyCardModal();\n        }}\n        network={network}\n      />\n    ),\n    'Buy Card Modal',\n    'Buy Card',\n  );\n\n  return (\n    <StyledCardBuyButton onClick={onPresentBuyCardModal}>\n      {' '}\n      Buy{' '}\n    </StyledCardBuyButton>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { BuyCardButton } from '../components/BuyCardButton';\nimport {\n  StyledCardMarket,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            {/* <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy> */}\n            <BuyCardButton asset={asset} mint={Number(market.tokenId)} />\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { Modal } from '../../../components';\nimport { InputField } from '../../../components/InputField';\nimport {\n  StyledModalButtonsWrapper,\n  StyledModalButton,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IProfile } from '../../../services/models';\n\ninterface TransferCardTokenIdModalProps {\n  cardAddress: string;\n  tokenId: number;\n  profile: IProfile;\n  onDismiss: () => any;\n  network: NetworkName;\n}\n\nexport const TransferCardTokenIdModal = ({\n  cardAddress,\n  tokenId,\n  profile,\n  onDismiss,\n  network,\n}: TransferCardTokenIdModalProps) => {\n  const [toAddress, setToAddress] = useState<string>('');\n\n  const { transferCard, transferState, resetState } = useTransferLsp8Token(\n    cardAddress,\n    toAddress,\n    tokenId,\n    profile,\n    network,\n  );\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'TRANSFERING CARD...',\n    },\n    successful: {\n      mainHeading: 'TRANSFER SUCCESSFULL',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'TRANSFER FAILED',\n    },\n  };\n\n  return (\n    <>\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={(e) => setToAddress(e.target.value)}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n        value={toAddress}\n      />\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={transferCard}\n          disabled={!ethers.utils.isAddress(toAddress)}\n        >\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={transferState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectMintModalContent = styled.div`\n  max-height: 40em;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectMintListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledSelectMintListHeaderContent = styled.h4``;\n\nexport const StyledSelectMintList = styled.div`\n  overflow-y: scroll;\n`;\n\nexport const StyledSelectMintListContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 1em;\n  cursor: pointer;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledListMint = styled.p``;\n\nexport const StyledListPrice = styled.p``;\n","import { useMemo } from 'react';\nimport { IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledListMint,\n  StyledListPrice,\n  StyledSelectMintList,\n  StyledSelectMintListContent,\n  StyledSelectMintListHeader,\n  StyledSelectMintListHeaderContent,\n  StyledSelectMintModalContent,\n} from './styles';\n\ninterface IProps {\n  ownedTokenIds: number[];\n  markets: IMarket[];\n  whiteListedTokens: IWhiteListedTokens[];\n  onSelect: (index: number) => void;\n  onSelectCallback: () => void;\n}\n\nexport const SelectMintModalContent = ({\n  ownedTokenIds,\n  markets,\n  whiteListedTokens,\n  onSelect,\n  onSelectCallback,\n}: IProps) => {\n  const renderMintList = useMemo(\n    () =>\n      ownedTokenIds.map((id) => {\n        const market = markets.find((item) => Number(item.tokenId) === id);\n        const token =\n          market &&\n          whiteListedTokens.find(\n            (i) => i.tokenAddress === market.acceptedToken,\n          );\n        return (\n          <StyledSelectMintListContent\n            onClick={() => {\n              onSelect(ownedTokenIds.indexOf(id) + 1);\n              onSelectCallback();\n            }}\n          >\n            <StyledListMint>{id}</StyledListMint>\n            <StyledListPrice>\n              {market && token\n                ? `${displayPrice(\n                    market?.minimumAmount.toString(),\n                    token?.decimals,\n                  )} ${token.symbol}`\n                : '-'}\n            </StyledListPrice>\n          </StyledSelectMintListContent>\n        );\n      }),\n    [markets, onSelect, onSelectCallback, ownedTokenIds, whiteListedTokens],\n  );\n\n  return (\n    <StyledSelectMintModalContent>\n      <StyledSelectMintListHeader>\n        <StyledSelectMintListHeaderContent>\n          Mint\n        </StyledSelectMintListHeaderContent>\n        <StyledSelectMintListHeaderContent>\n          Price\n        </StyledSelectMintListHeaderContent>\n      </StyledSelectMintListHeader>\n      <StyledSelectMintList>{renderMintList}</StyledSelectMintList>\n    </StyledSelectMintModalContent>\n  );\n};\n","import styled from 'styled-components';\nimport { Accordion } from '../../../../components';\n\nexport const StyledCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  row-gap: 1em;\n`;\nexport const StyledCardInfoAccordion = styled(Accordion)``;\n\nexport const StyledCardInfoContainer = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledCardInfoLabel = styled.p`\n  color: white;\n  opacity: 0.5;\n  width: 50%;\n`;\n\nexport const StyledCardInfoValue = styled.p`\n  width: 50%;\n`;\n\nexport const StyledCardStandardLabel = styled.p`\n  margin-left: auto;\n`;\n","import { useMemo } from 'react';\nimport { theme } from '../../../../boot/styles';\nimport { StyledAccordionTitle } from '../../../../components/Accordion/styles';\nimport { useMediaQuery } from '../../../../hooks/useMediaQuery';\nimport { ICard } from '../../../../services/models';\nimport { StyledDividerSpan } from '../../styles';\nimport {\n  StyledCardInfo,\n  StyledCardInfoAccordion,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardStandardLabel,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n  assetId?: string;\n}\n\nexport const CardInfoAccordion = ({ asset, assetId }: IProps) => {\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'NFT name',\n      value: asset.name,\n    },\n    {\n      label: asset.supportedInterface === 'lsp8' ? 'Mint' : 'Total Supply',\n      //   value:\n      //     ownedTokenIds && ownedTokenIds.length > 0\n      //       ? ownedTokenIds[currentIndex].toString()\n      //       : '',\n      value:\n        asset.supportedInterface === 'lsp8'\n          ? ` ${assetId} of ${asset.tokenSupplyCap.toString()}`\n          : asset.totalSupply.toString(),\n      valueType: 'supply',\n    },\n    {\n      label: 'Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n  ];\n\n  return (\n    <StyledCardInfoAccordion\n      header={\n        !isDesktop ? (\n          <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n        ) : null\n      }\n      enableToggle\n    >\n      <StyledCardInfo>\n        {cardInfo.map((item) => {\n          if (item.valueType === 'supply' && !assetId) {\n            return '';\n          }\n          return (\n            <StyledCardInfoContainer key={item.label}>\n              <StyledCardInfoLabel>{item.label}</StyledCardInfoLabel>\n              <StyledCardInfoValue>\n                {item.valueType === 'address'\n                  ? `${item.value.slice(0, 8)}...${item.value.slice(\n                      item.value.length - 4,\n                      item.value.length,\n                    )}`\n                  : item.value}\n              </StyledCardInfoValue>\n            </StyledCardInfoContainer>\n          );\n        })}\n        <StyledDividerSpan />\n        <StyledCardStandardLabel>\n          {asset?.supportedInterface.toUpperCase()} on {asset?.network}\n        </StyledCardStandardLabel>\n      </StyledCardInfo>\n    </StyledCardInfoAccordion>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n  TransferIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardPriceWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n  StyledMintSliderInput,\n  StyledSelectMintModalButton,\n  StyledMediaContainer,\n  StyledHeroImg,\n  StyledAssetDetailContainer,\n  StyledContractDetailHeader,\n  StyledContractName,\n  StyledContractDescription,\n  StyledOtherMediaContainer,\n  StyledOtherImg,\n  StyledHeroImgContainer,\n  StyledVideo,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, STATUS } from '../../utility';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\nimport { useRemoveMarketForLsp8Token } from '../../hooks/useRemoveMarketForLsp8Token';\nimport { useModal } from '../../hooks/useModal';\nimport { TransferCardTokenIdModal } from './TransferCardTokenIdModal';\nimport { SelectMintModalContent } from './SelectMintModalContent';\nimport { BuyCardButton } from './components/BuyCardButton';\nimport Utils from '../../services/utilities/util';\nimport { CardInfoAccordion } from './components/CardInfoAccordion';\nimport { ShareReferModal } from '../../components/ShareReferModal';\nimport { useQueryParams } from '../../hooks/useQueryParams';\nimport { isAddress } from 'ethers/lib/utils';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transfervalue: '0',\n    deploy: '0',\n    delegatecall: '0',\n    staticcall: '0',\n    call: '0',\n    setdata: '0',\n    addpermissions: '0',\n    changepermissions: '0',\n    changeowner: '0',\n  });\n  const params = useParams<IPrams>();\n  const history = useHistory();\n  const { pathname } = useLocation();\n  let query = useQueryParams();\n  const { setReferrer } = useLocalStorage();\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state.cards[params.network], params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector(\n    (state: RootState) => state.cards[params.network].error,\n  );\n\n  const cardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status,\n  );\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards[params.network].marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards[params.network].metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const mintIdInputRef = useRef<HTMLInputElement>(null);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const currentTokenId = useMemo(() => {\n    let index: string = '0';\n    if (\n      asset?.supportedInterface === 'erc721' &&\n      metaDataStatus !== STATUS.FAILED\n    ) {\n      index = params.id ? params.id : '0';\n    } else if (asset?.supportedInterface === 'lsp8') {\n      index = ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '0';\n    }\n    return index;\n  }, [\n    asset?.supportedInterface,\n    currentIndex,\n    metaDataStatus,\n    ownedTokenIds,\n    params.id,\n  ]);\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find((item) => item.tokenId === currentTokenId);\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentTokenId, marketsForOwnedTokens, ownedTokenIds]);\n\n  const dispatch = useAppDispatch();\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (nextIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (previousIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const mintChangeHelper = (mint: number) => {\n    if (ownedTokenIds && mint > 0 && mint <= ownedTokenIds.length) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[mint - 1]}`,\n      );\n      setCurrentIndex(mint - 1);\n    }\n  };\n\n  const onEnterHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    const val = Number(event.target.value);\n    mintChangeHelper(val);\n  };\n\n  const { transferCard, transferState } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    Number(currentTokenId),\n    activeProfile ? activeProfile : ({} as IProfile),\n    params.network,\n  );\n\n  const { removeMarket, removingMarket } = useRemoveMarketForLsp8Token(\n    params.add,\n    parseInt(params.id),\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const {\n    handlePresent: onPresentSellCardModal,\n    onDismiss: onDismissSellCardModal,\n  } = useModal(\n    asset && ownedTokenIds && activeProfile && (\n      <SellCardModal\n        ownerProfile={activeProfile}\n        address={params.add}\n        mint={Number(currentTokenId)}\n        price={currentMintMarket ? currentMintMarket.minimumAmount : undefined}\n        marketTokenAddress={\n          currentMintMarket ? currentMintMarket.acceptedToken : undefined\n        }\n        cardImg={asset.lsp8MetaData[params.id ? params.id : 0]?.image}\n        onDismiss={() => onDismissSellCardModal()}\n        whiteListedTokens={asset.whiteListedTokens}\n        network={params.network}\n      />\n    ),\n    'Sell Card Modal',\n    'Sell Card',\n  );\n\n  const {\n    handlePresent: onPresentSelectMintModal,\n    onDismiss: onDismissSelectMintModal,\n  } = useModal(\n    ownedTokenIds && asset && (\n      <SelectMintModalContent\n        ownedTokenIds={ownedTokenIds}\n        markets={asset.markets}\n        whiteListedTokens={asset.whiteListedTokens}\n        onSelect={mintChangeHelper}\n        onSelectCallback={() => onDismissSelectMintModal()}\n      />\n    ),\n    'Select Mint Modal',\n    'Select Mint',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardModal,\n    onDismiss: onDismissTransferCardModal,\n  } = useModal(\n    <>\n      {activeProfile && (\n        <TransferCardTokenIdModal\n          cardAddress={params.add}\n          tokenId={parseInt(params.id)}\n          profile={activeProfile}\n          onDismiss={() => onDismissTransferCardModal()}\n          network={params.network}\n        />\n      )}\n    </>,\n    'Card Transfer Modal',\n    'Transfer Card',\n  );\n\n  const { handlePresent: onPresentShareModal, onDismiss: onDismissShareModal } =\n    useModal(\n      <ShareReferModal\n        network={params.network}\n        pathName={pathname}\n        onDismiss={() => onDismissShareModal()}\n      />,\n      'Card Share Modal',\n      'Share Card',\n    );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds && asset?.supportedInterface === 'lsp8') {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    asset?.supportedInterface,\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ((ownedTokenIds && ownedTokenIds.length > 0) ||\n        asset?.supportedInterface === 'erc721') &&\n      asset &&\n      !(params.id in asset.lsp8MetaData) &&\n      metaDataStatus === STATUS.IDLE\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: params.id,\n          supportedInterface: asset.supportedInterface,\n        }),\n      );\n    }\n  }, [\n    asset,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState(params.network));\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    const referrerAddress = query.get('referrer');\n    referrerAddress &&\n      isAddress(referrerAddress) &&\n      setReferrer(params.network, referrerAddress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            {asset && ownedTokenIds && (\n              <BuyCardButton asset={asset} mint={Number(currentTokenId)} />\n            )}\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={onPresentSellCardModal}>\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton onClick={onPresentSellCardModal}>\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton onClick={removeMarket}>\n              {removingMarket ? 'Withdrawing from sale…' : 'Withdraw from sale'}\n            </StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentUsersPermissionsSet,\n    currentMintMarket,\n    ownedTokenIds,\n    asset,\n    currentTokenId,\n    onPresentSellCardModal,\n    transferCard,\n    transferState,\n    removeMarket,\n    removingMarket,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.lsp8MetaData[currentTokenId]?.attributes &&\n      asset.lsp8MetaData[currentTokenId].attributes.length > 0\n    ) {\n      return asset?.lsp8MetaData[currentTokenId].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    }\n  }, [asset, currentTokenId, propertiesImages]);\n\n  const renderContractDetailHeader = useMemo(\n    () => (\n      <StyledContractDetailHeader>\n        <StyledContractName>{asset?.name}</StyledContractName>\n        <StyledQuickActions>\n          {ownedTokenIds && currentUsersPermissionsSet.call === '1' && (\n            <StyledReloadPriceAction>\n              <StyledActionIcon\n                src={TransferIcon}\n                alt=\"transfer\"\n                title=\"transfer\"\n                onClick={onPresentTransferCardModal}\n              />\n            </StyledReloadPriceAction>\n          )}\n          <StyledReloadPriceAction>\n            <StyledActionIcon src={ReloadIcon} alt=\"reload\" title=\"reload\" />\n          </StyledReloadPriceAction>\n          <StyledReloadPriceAction onClick={onPresentShareModal}>\n            <StyledActionIcon src={ShareIcon} alt=\"share\" title=\"share\" />\n          </StyledReloadPriceAction>\n          <StyledReloadPriceAction>\n            <StyledActionIcon src={OptionIcon} alt=\"options\" title=\"options\" />\n          </StyledReloadPriceAction>\n        </StyledQuickActions>\n      </StyledContractDetailHeader>\n    ),\n    [\n      asset?.name,\n      currentUsersPermissionsSet.call,\n      onPresentShareModal,\n      onPresentTransferCardModal,\n      ownedTokenIds,\n    ],\n  );\n\n  const getHeroImgSrc = useMemo(() => {\n    if (asset?.supportedInterface === 'erc721') {\n      const img =\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[currentTokenId]?.image;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    } else if (asset?.supportedInterface === 'lsp8') {\n      const img =\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images[0][0]?.url;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    } else {\n      const img =\n        asset?.lsp8MetaData[0]?.LSP4Metadata?.images &&\n        asset?.lsp8MetaData[0]?.LSP4Metadata?.images[0][0]?.url;\n      return img && img.startsWith('ipfs://')\n        ? Utils.convertImageURL(img)\n        : img;\n    }\n  }, [asset?.lsp8MetaData, asset?.supportedInterface, currentTokenId]);\n\n  const getOtherImgs = useMemo(() => {\n    if (\n      asset &&\n      asset.supportedInterface === 'lsp4' &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n      asset.lsp8MetaData[0]?.LSP4Metadata?.images.length > 1\n    ) {\n      return asset.lsp8MetaData[0]?.LSP4Metadata?.images.map((item, i) => {\n        if (i !== 0) {\n          return item[0]?.url.startsWith('ipfs://')\n            ? Utils.convertImageURL(item[0].url)\n            : item[0].url;\n        }\n      });\n    } else if (\n      asset &&\n      asset.supportedInterface === 'lsp8' &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n      asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images.length > 1\n    ) {\n      return asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images.map(\n        (item, i) => {\n          if (i !== 0) {\n            return item[0]?.url.startsWith('ipfs://')\n              ? Utils.convertImageURL(item[0].url)\n              : item[0].url;\n          }\n        },\n      );\n    }\n  }, [asset, currentTokenId]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            asset && (\n              <StyledAssetDetailContent>\n                {!isDesktop && renderContractDetailHeader}\n                <StyledMediaContainer>\n                  <StyledHeroImgContainer>\n                    <StyledHeroImg src={getHeroImgSrc} />\n                    {asset.supportedInterface === 'lsp8' &&\n                      wasActiveProfile &&\n                      ownedTokenIds && (\n                        <>\n                          <StyledMintControls>\n                            <StyledMintSkipButton onClick={previousMint}>\n                              <StyledMintSkipButtonImg\n                                src={BackwardsIcon}\n                                alt=\"\"\n                              />\n                            </StyledMintSkipButton>\n                            <StyledMintSliderIndex>\n                              <StyledMintSliderInput\n                                type=\"number\"\n                                min={1}\n                                max={ownedTokenIds.length}\n                                defaultValue={currentIndex + 1}\n                                ref={mintIdInputRef}\n                                onKeyPress={onEnterHandler}\n                                onBlur={onBlurHandler}\n                              />\n                              /{ownedTokenIds.length}\n                            </StyledMintSliderIndex>\n                            <StyledMintSkipButton onClick={nextMint}>\n                              <StyledMintSkipButtonImg\n                                src={ForwardsIcon}\n                                alt=\"\"\n                              />\n                            </StyledMintSkipButton>\n                            <StyledSelectMintModalButton\n                              onClick={onPresentSelectMintModal}\n                            >\n                              Select Mint\n                            </StyledSelectMintModalButton>\n                          </StyledMintControls>\n                        </>\n                      )}\n                  </StyledHeroImgContainer>\n                  {asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images &&\n                    asset.lsp8MetaData[currentTokenId]?.LSP4Metadata?.images\n                      .length > 1 &&\n                    ['lsp8', 'lsp4'].includes(asset.supportedInterface) && (\n                      <StyledOtherMediaContainer>\n                        {getOtherImgs &&\n                          getOtherImgs.length > 0 &&\n                          getOtherImgs?.map((item, i) =>\n                            item === undefined ? (\n                              <></>\n                            ) : (\n                              <StyledOtherImg key={i} src={item} />\n                            ),\n                          )}\n                      </StyledOtherMediaContainer>\n                    )}\n                  {asset.supportedInterface === 'lsp4' &&\n                    asset.lsp8MetaData[currentTokenId].LSP4Metadata.assets.map(\n                      (item) => {\n                        if (item.fileType === 'mp4') {\n                          return (\n                            <StyledVideo\n                              src={Utils.convertImageURL(item.url)}\n                              controls\n                            />\n                          );\n                        }\n                      },\n                    )}\n                  {['lsp8', 'erc721'].includes(asset.supportedInterface) &&\n                    (asset.lsp8MetaData[currentTokenId]?.animation_url ? (\n                      <StyledVideo\n                        src={Utils.convertImageURL(\n                          asset.lsp8MetaData[currentTokenId].animation_url,\n                        )}\n                        controls\n                      />\n                    ) : (\n                      <></>\n                    ))}\n                </StyledMediaContainer>\n                <StyledAssetDetailContainer>\n                  {isDesktop && renderContractDetailHeader}\n                  <StyledContractDescription>\n                    {asset.lsp8MetaData[0].description ||\n                      asset.lsp8MetaData[0].LSP4Metadata.description}\n                  </StyledContractDescription>\n                  {!isDesktop && (\n                    <CardInfoAccordion asset={asset} assetId={params.id} />\n                  )}\n                  {!isDesktop ? (\n                    <TabedAccordion\n                      tabs={[\n                        { name: 'Creators', content: renderCreators },\n                        { name: 'Owner', content: renderCurrentMintOwner },\n                        { name: 'Issuer', content: renderIssuer },\n                      ]}\n                    />\n                  ) : (\n                    <DesktopCreatorsAccordion\n                      creatorsContent={renderCreators}\n                      ownerContent={activeProfile && renderCurrentMintOwner}\n                      issuerContent={renderIssuer}\n                    />\n                  )}\n\n                  <StyledCardPropertiesAccordion\n                    header={\n                      <StyledAccordionTitle>Details</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardProperties>\n                      {renderCardProperties}\n                    </StyledCardProperties>\n                  </StyledCardPropertiesAccordion>\n                  {asset.supportedInterface === 'lsp8' && (\n                    <StyledCardPriceWrapper>\n                      <StyledCardPriceWrapperHeader>\n                        <StyledCardPriceLabel>Item Price</StyledCardPriceLabel>\n                      </StyledCardPriceWrapperHeader>\n\n                      {renderCardPrice}\n                    </StyledCardPriceWrapper>\n                  )}\n                  {isDesktop && (\n                    <CardInfoAccordion asset={asset} assetId={params.id} />\n                  )}\n                  {asset.supportedInterface === 'lsp8' && (\n                    <StyledMarketAccordion\n                      header={\n                        <StyledAccordionTitle>Market</StyledAccordionTitle>\n                      }\n                      enableToggle\n                    >\n                      {asset && (\n                        <CardMarket\n                          asset={asset}\n                          cardMarkets={asset?.markets}\n                          whiteListedTokens={asset?.whiteListedTokens}\n                        />\n                      )}\n                    </StyledMarketAccordion>\n                  )}\n                  {['lsp4', 'lsp8'].includes(asset.supportedInterface) && (\n                    <StyledHoldersAccordion\n                      header={\n                        <StyledAccordionTitle>\n                          Other Holders\n                        </StyledAccordionTitle>\n                      }\n                      enableToggle\n                    >\n                      {renderHolderPagination}\n                    </StyledHoldersAccordion>\n                  )}\n                </StyledAssetDetailContainer>\n              </StyledAssetDetailContent>\n            )\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useRemoveMarketForLsp8Token = (\n  cardAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [removingMarket, setRemovingMarket] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const removeMarket = async () => {\n    setRemovingMarket(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.removeMarketViaKeymanager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    } else {\n      await LSP3ProfileApi.removeMarket(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    }\n  };\n\n  return { removeMarket, removingMarket, error };\n};\n"],"sourceRoot":""}