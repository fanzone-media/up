{"version":3,"sources":["utility/content/addresses.ts","components/TransactionStateWindow/styles.ts","components/TransactionStateWindow/TransactionStateWindow.tsx","hooks/useModal/useModal.ts","hooks/useTransferLsp8Token/useTransferLsp8Token.ts","assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/usePagination/usePagination.ts","components/InputField/styles.ts","utility/permissions.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/SellCardModal/styles.ts","components/InputField/InputField.tsx","pages/AssetDetails/SellCardModal/SellCardModal.tsx","hooks/useSellLsp8Token/useSellLsp8Token.ts","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useErc20/useErc20.ts","hooks/useBuyLsp8Token/useBuyLsp8Token.ts","pages/AssetDetails/components/BuyCardButton/styles.ts","pages/AssetDetails/components/BuyCardButton/BuyCardButton.tsx","hooks/useUrlParams/useUrlParams.ts","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/TransferCardTokenIdModal/TransferCardTokenIdModal.tsx","pages/AssetDetails/SelectMintModalContent/styles.ts","pages/AssetDetails/SelectMintModalContent/SelectMintModalContent.tsx","pages/AssetDetails/AssetDetails.tsx","hooks/useRemoveMarketForLsp8Token/useRemoveMarketForLsp8Token.ts"],"names":["getDefaultAddresses","network","type","a","fetch","res","json","trimedAddress","address","slice","length","getWhiteListedTokenAddresses","polygon","mumbai","ethereum","l14","StyledProcessingWindow","styled","div","height","StyledStateContent","StyledStateIcon","img","StyledStateHeading","h2","StyledStateDescription","p","StyledTryButton","button","TransactionStateWindow","state","transactionMessages","callback","transactionStatesIcons","loading","icon","PendingIcon","successful","SuccessIcon","failed","ErrorIcon","STATUS","IDLE","src","alt","mainHeading","description","FAILED","onClick","useModal","content","key","persist","useContext","ModalContext","isOpen","onDismiss","onPresent","handlePresent","useCallback","useTransferLsp8Token","cardAddress","toAddress","tokenId","profile","useState","transferState","setTransferState","error","setError","useSigner","signer","data","transferCard","LOADING","isOwnerKeyManager","KeyManagerApi","transferCardViaKeyManager","owner","then","SUCCESSFUL","catch","LSP3ProfileApi","transferCardViaUniversalProfile","resetState","StyledProfileCard","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","StyledBalanceWrapper","StyledBalance","font","weight","regular","StyledPolygon","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","Web3","utils","toChecksumAddress","data-tip","tokenIds","data-for","makeBlockie","profileImage","name","usePagination","range","setRange","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","align","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","mint","price","toString","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","select","InputField","label","changeHandler","placeholder","value","disabled","step","onChange","SellCardModal","ownerProfile","whiteListedTokens","marketTokenAddress","amount","tokenAddress","sellForm","setSellForm","sellState","setSellState","setForSale","decimals","setCardMarketViaKeyManager","convertPrice","LSP4DigitalAssetApi","setMarketViaUniversalProfile","useSellLsp8Token","event","currentTarget","selectedTokenDecimals","selectedToken","item","marketTokenDecimals","i","whiteListedtokensAddresses","displayPrice","map","selected","symbol","variant","StyledTabsHeader","StyledTabsLabel","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","useEffect","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","status","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","setExpand","AccordionToggleIcon","StyledBuyCardModalContent","StyledInfoText","StyledPaymentText","StyledRadioGroup","StyledRadioInput","StyledRadioLabel","$checked","StyledSelectInputContainer","StyledUpAddressSelectInput","StyledUpAddressSelectLabel","StyledBuyStepsContainer","StyledBuyStep","StyledErrorMessage","BuyCardModal","useAccount","account","approveError","setApproveError","isApproved","setIsApproved","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","approve","spenderAddress","universalProfileAddress","buyer","checkBalanceOf","checkAllowance","allowance","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","approveTokenViaKeyManager","err","approveTokenViaUniversalProfile","ownerAddress","balanceOf","resetApproveState","undefined","useErc20","buyState","setBuyState","buyFromMarket","buyFromCardMarketViaKeyManager","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","useBuyLsp8Token","savedProfiles","getItems","useLocalStorage","savedProfilesAddresses","Object","keys","upAddress","setUpAddress","paymentOption","setPaymentOption","marketToken","paymentChangeHandler","target","htmlFor","isAddress","StyledCardBuyButton","BuyCardButton","useUrlParams","selectedMintMarket","market","markets","Number","token","acceptedToken","minimumAmount","ls8MetaData","image","onDismissBuyCardModal","onPresentBuyCardModal","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","CardMarket","cardMarkets","findDecimals","findSymbol","TransferCardTokenIdModal","setToAddress","e","ethers","StyledSelectMintModalContent","StyledSelectMintListHeader","StyledSelectMintListHeaderContent","StyledSelectMintList","StyledSelectMintListContent","StyledListMint","StyledListPrice","SelectMintModalContent","ownedTokenIds","onSelect","onSelectCallback","renderMintList","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","cards","ownerStatus","creators","cardError","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","mintIdInputRef","useRef","currentIndex","setCurrentIndex","marketsForOwnedTokens","currentMintMarket","removingMarket","setRemovingMarket","removeMarket","removeMarketViaKeymanager","tokenIdAsBytes32","finally","useRemoveMarketForLsp8Token","parseInt","onDismissSellCardModal","onPresentSellCardModal","indexOf","onDismissSelectMintModal","onPresentSelectMintModal","onDismissTransferCardModal","onPresentTransferCardModal","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","push","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","tier","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","cardInfo","valueType","totalSupply","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","color","href","exploreUrl","rel","OpenseaIcon","previousIndex","current","BackwardsIcon","min","max","defaultValue","ref","onKeyPress","blur","onBlur","val","nextIndex","ForwardsIcon","TransferIcon","title","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.0cb43474.chunk.js","sourcesContent":["import { BaseProvider } from '@ethersproject/providers';\nimport { NetworkName } from '../../boot/types';\nimport { Address } from '../../utils/types';\n\nexport const getDefaultAddresses = async (\n  network: NetworkName,\n  type: 'assetsAddresses' | 'profileAddresses',\n): Promise<Array<Address>> => {\n  const res = await fetch(`./api/${network}/${type}.json`);\n  return res.json();\n};\n\nexport const trimedAddress = (address: Address) =>\n  `${address.slice(0, 8)}...${address.slice(\n    address.length - 4,\n    address.length,\n  )}`;\n\nexport const getWhiteListedTokenAddresses = (network: NetworkName) => {\n  const whiteListedTokens: { [key in NetworkName]: Array<string> } = {\n    polygon: [\n      '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    ],\n    mumbai: ['0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa'],\n    ethereum: ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'],\n    l14: [''],\n  };\n\n  return whiteListedTokens[network];\n};\n","import styled from 'styled-components';\n\nexport const StyledProcessingWindow = styled.div<{ height?: 'full' }>`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: ${({ height }) => (height ? '100%' : 'calc(100% - 11em)')};\n  bottom: 0;\n  left: -0.03em;\n  border-radius: 0.625em;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const StyledStateContent = styled.div`\n  text-align: center;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledStateIcon = styled.img`\n  height: 8.5em;\n`;\n\nexport const StyledStateHeading = styled.h2`\n  margin-top: -2em;\n`;\n\nexport const StyledStateDescription = styled.p``;\n\nexport const StyledTryButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  padding: 0.3em 0;\n`;\n","import { ErrorIcon, PendingIcon, SuccessIcon } from '../../assets';\nimport { STATUS } from '../../utility';\nimport { StyledModalButton } from '../Modal/styles';\nimport {\n  StyledProcessingWindow,\n  StyledStateContent,\n  StyledStateDescription,\n  StyledStateHeading,\n  StyledStateIcon,\n  StyledTryButton,\n} from './styles';\n\ninterface IProps {\n  state: STATUS;\n  height?: 'full';\n  callback?: () => any;\n  transactionMessages: {\n    loading: {\n      mainHeading: string;\n      description?: string;\n    };\n    successful: {\n      mainHeading: string;\n      description?: string;\n    };\n    failed: {\n      mainHeading: string;\n      description?: string;\n    };\n  };\n}\n\nexport const TransactionStateWindow = ({\n  state,\n  height,\n  transactionMessages,\n  callback,\n}: IProps) => {\n  const transactionStatesIcons = {\n    loading: {\n      icon: PendingIcon,\n    },\n    successful: {\n      icon: SuccessIcon,\n    },\n    failed: {\n      icon: ErrorIcon,\n    },\n  };\n  return (\n    <>\n      {state !== STATUS.IDLE && (\n        <StyledProcessingWindow height={height}>\n          <StyledStateContent>\n            <StyledStateIcon src={transactionStatesIcons[state].icon} alt=\"\" />\n            <StyledStateHeading>\n              {transactionMessages[state].mainHeading}\n            </StyledStateHeading>\n            <StyledStateDescription>\n              {transactionMessages[state]?.description}\n            </StyledStateDescription>\n            {callback && state === STATUS.FAILED && (\n              <StyledTryButton onClick={callback}>Try again</StyledTryButton>\n            )}\n          </StyledStateContent>\n        </StyledProcessingWindow>\n      )}\n    </>\n  );\n};\n","import { useCallback, useContext } from 'react';\nimport { ModalContext, IOnPresent } from '../../context/ModalProvider';\n\nexport const useModal = (\n  ...[content, key, persist]: Parameters<IOnPresent>\n) => {\n  const { isOpen, onDismiss, onPresent } = useContext(ModalContext);\n\n  const handlePresent = useCallback(() => {\n    onPresent(content, key, persist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content, key, onPresent]);\n\n  return { handlePresent, onDismiss, isOpen };\n};\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { STATUS } from '../../utility';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n) => {\n  const [transferState, setTransferState] = useState<STATUS>(STATUS.IDLE);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const transferCard = async () => {\n    setTransferState(STATUS.LOADING);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          setTransferState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setTransferState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    transferCard,\n    transferState,\n    error,\n    resetState: () => setTransferState(STATUS.IDLE),\n  };\n};\n","export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  align?: string;\n  placeholder?: string;\n  value?: string;\n  disabled?: boolean;\n}\n\nexport const InputField = ({\n  name,\n  label,\n  type,\n  changeHandler,\n  align,\n  placeholder,\n  value,\n  disabled,\n}: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n        align={align}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n      />\n    </StyledInputContainer>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledInputGroup,\n  StyledSellCardModalContent,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellLsp8Token } from '../../../hooks/useSellLsp8Token';\nimport { getWhiteListedTokenAddresses } from '../../../utility/content/addresses';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const SellCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n  network,\n}: IProps) => {\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale, sellState } = useSellLsp8Token();\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  const whiteListedtokensAddresses = getWhiteListedTokenAddresses(network);\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'SETTING FOR SALE...',\n    },\n    successful: {\n      mainHeading: 'SUCCESSFULLY SET FOR SALE',\n    },\n    failed: {\n      mainHeading: 'SOMETHING WENT WRONG',\n    },\n  };\n\n  return (\n    <StyledSellCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={\n          price &&\n          displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n        }\n        cardImg={cardImg}\n      />\n      {whiteListedTokens && (\n        <StyledInputGroup>\n          <InputField\n            name=\"amount\"\n            label=\"Your Price\"\n            type=\"number\"\n            changeHandler={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            {whiteListedTokens?.map((item, i) => (\n              <option\n                key={i}\n                value={item.tokenAddress}\n                selected={\n                  item.tokenAddress.toLowerCase() ===\n                  whiteListedtokensAddresses[0].toLowerCase()\n                }\n              >\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n      )}\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={() =>\n            setForSale(\n              address,\n              ownerProfile,\n              mint,\n              sellForm.tokenAddress,\n              sellForm.amount,\n              selectedTokenDecimals,\n            )\n          }\n          disabled={\n            !whiteListedTokens ||\n            whiteListedTokens?.length === 0 ||\n            sellForm.amount <= 0\n          }\n        >\n          Set for sale\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={sellState}\n        transactionMessages={transactionStatesMessages}\n      />\n    </StyledSellCardModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice, STATUS } from '../../utility';\n\nexport const useSellLsp8Token = () => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [sellState, setSellState] = useState<STATUS>(STATUS.IDLE);\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n  ) => {\n    setSellState(STATUS.LOADING);\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .then(() => {\n          setSellState(STATUS.SUCCESSFUL);\n        })\n        .catch((error) => {\n          setError(error);\n          setSellState(STATUS.FAILED);\n        });\n    }\n  };\n\n  return {\n    sellState,\n    setForSale,\n    error,\n    resetState: () => setSellState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      {ownerContent && (\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Owner</StyledHeaderTitle>\n          </StyledHeader>\n          {ownerContent}\n        </StyledIssuerContainer>\n      )}\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 1rem;\n`;\n\nexport const StyledPaymentText = styled.p`\n  font-size: 0.9em;\n  font-weight: 700;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  column-gap: 0.2em;\n`;\n\nexport const StyledRadioInput = styled.input`\n  margin: auto 0;\n  position: relative;\n  visibility: hidden;\n`;\n\nexport const StyledRadioLabel = styled.label<{ $checked: boolean }>`\n  background-color: ${({ $checked }) =>\n    $checked ? 'rgba(255, 129, 1, 1)' : 'rgba(83, 83, 83, 1)'};\n  height: 3em;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 0.3em;\n  line-height: 3em;\n  text-align: center;\n\n  input[type='radio']::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    background-color: transparent;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid white;\n  }\n\n  input[type='radio']:checked::after {\n    width: 1em;\n    height: 1em;\n    border-radius: 15px;\n    left: -1px;\n    position: absolute;\n    content: '';\n    display: inline-block;\n    visibility: visible;\n    border: 0.15em solid;\n    background: radial-gradient(\n      white 0%,\n      white 40%,\n      transparent 50%,\n      transparent\n    );\n    border-color: white;\n  }\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledBuyStepsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2em;\n  margin-top: 1.5em;\n  position: relative;\n`;\n\nexport const StyledBuyStep = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 0.5em;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  color: red;\n`;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport { useBuyLsp8Token } from '../../../hooks/useBuyLsp8Token';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledBuyCardModalContent,\n  StyledBuyStep,\n  StyledBuyStepsContainer,\n  StyledErrorMessage,\n  StyledInfoText,\n  StyledPaymentText,\n  StyledRadioGroup,\n  StyledRadioInput,\n  StyledRadioLabel,\n  StyledSelectInputContainer,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from './styles';\nimport { isAddress } from 'ethers/lib/utils';\nimport {\n  StyledModalButton,\n  StyledModalButtonsWrapper,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\n\ninterface IProps {\n  onDismiss: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onDismiss,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n  network,\n}: IProps) => {\n  const { approve, isApproved, resetApproveState, approveError } = useErc20({\n    tokenAddress,\n    network,\n  });\n  const { buyFromMarket, buyState, resetState } = useBuyLsp8Token(\n    address,\n    network,\n  );\n  const { getItems } = useLocalStorage();\n  const savedProfiles = getItems(network);\n  const savedProfilesAddresses = savedProfiles\n    ? Object.keys(savedProfiles)\n    : null;\n  const [upAddress, setUpAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [paymentOption, setPaymentOption] = useState<string>('');\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUpAddress(event.currentTarget.value);\n    resetApproveState();\n  };\n\n  const paymentChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPaymentOption(event.target.value);\n    resetApproveState();\n  };\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'Purchase is being verified',\n      description:\n        'In a few moments you will know if the purchase was successful.',\n    },\n    successful: {\n      mainHeading: 'Purchase successful!',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'Purchase failed',\n      description: 'Please try again.',\n    },\n  };\n\n  return (\n    <StyledBuyCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n        cardImg={cardImg}\n      />\n      <StyledBuyStepsContainer>\n        <StyledBuyStep>\n          <StyledPaymentText>1. CHOOSE PAYMENT METHOD</StyledPaymentText>\n          <StyledRadioGroup>\n            <StyledRadioLabel htmlFor=\"up\" $checked={paymentOption === 'up'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"up\"\n                value=\"up\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Universal Profile\n            </StyledRadioLabel>\n            <StyledRadioLabel htmlFor=\"mm\" $checked={paymentOption === 'mm'}>\n              <StyledRadioInput\n                name=\"payment\"\n                type=\"radio\"\n                id=\"mm\"\n                value=\"mm\"\n                onChange={paymentChangeHandler}\n              />{' '}\n              Metamask\n            </StyledRadioLabel>\n          </StyledRadioGroup>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>\n            2. CONFIRM ADDRESS & CHECK BALANCE\n          </StyledPaymentText>\n          {paymentOption === 'up' &&\n            (savedProfilesAddresses ? (\n              <StyledSelectInputContainer>\n                <StyledUpAddressSelectLabel>\n                  UP Address\n                </StyledUpAddressSelectLabel>\n                <StyledUpAddressSelectInput>\n                  {savedProfilesAddresses.map((item) => (\n                    <option key={item} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </StyledUpAddressSelectInput>\n              </StyledSelectInputContainer>\n            ) : (\n              <InputField\n                name=\"universalProfileAddress\"\n                label=\"UP Address\"\n                type=\"text\"\n                changeHandler={changeHandler}\n                disabled={paymentOption === 'up' && isApproved}\n              />\n            ))}\n          <StyledModalButton\n            disabled={\n              ((paymentOption === 'up' || paymentOption === '') &&\n                !isAddress(upAddress)) ||\n              isApproved\n            }\n            onClick={async () =>\n              await approve(\n                address,\n                price,\n                network,\n                paymentOption === 'up' ? upAddress : undefined,\n              )\n            }\n          >\n            Check balance & Approve\n          </StyledModalButton>\n          <StyledErrorMessage>{approveError}</StyledErrorMessage>\n        </StyledBuyStep>\n        <StyledBuyStep>\n          <StyledPaymentText>3. CONFIRM PURCHASE</StyledPaymentText>\n          <StyledInfoText>\n            Do you confirm the purchase of this card mint for{' '}\n            {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n            {marketToken ? marketToken.symbol : ''}?\n          </StyledInfoText>\n        </StyledBuyStep>\n      </StyledBuyStepsContainer>\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          disabled={!isApproved}\n          onClick={async () =>\n            await buyFromMarket(\n              address,\n              price,\n              mint,\n              paymentOption === 'up' ? upAddress : undefined,\n            )\n          }\n        >\n          Buy\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        state={buyState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </StyledBuyCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [error, setError] = useState();\n  const [approveError, setApproveError] = useState<string>();\n  const [isApproved, setIsApproved] = useState<boolean>(false);\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n\n    const balance = await checkBalanceOf(buyer);\n\n    if (balance < amount) {\n      setApproveError('Not enough balance');\n      return;\n    }\n\n    const allowance = await checkAllowance(buyer, spenderAddress);\n\n    if (allowance && allowance >= amount) {\n      setIsApproved(true);\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setIsApproved(true);\n          })\n          .catch((err) => {\n            setError(err);\n          }));\n    } else {\n      await erc20Contract\n        .approve(spenderAddress, amount)\n        .then(() => {\n          setIsApproved(true);\n        })\n        .catch((err) => {\n          setError(err);\n        });\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  const resetApproveState = () => {\n    setIsApproved(false);\n    setApproveError(undefined);\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n    isApproved,\n    resetApproveState,\n    approveError,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { STATUS } from '../../utility';\n\nexport const useBuyLsp8Token = (assetAddress: string, network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [buyState, setBuyState] = useState<STATUS>(STATUS.IDLE);\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    setBuyState(STATUS.LOADING);\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .then(() => {\n            setBuyState(STATUS.SUCCESSFUL);\n          })\n          .catch((error) => {\n            setError(error);\n            setBuyState(STATUS.FAILED);\n          }));\n    }\n  };\n\n  return {\n    buyFromMarket,\n    error,\n    buyState,\n    resetState: () => setBuyState(STATUS.IDLE),\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n  width: 100%;\n`;\n","import { useMemo } from 'react';\nimport { useModal } from '../../../../hooks/useModal';\nimport { useUrlParams } from '../../../../hooks/useUrlParams';\nimport { ICard } from '../../../../services/models';\nimport { BuyCardModal } from '../../BuyCardModal';\nimport { StyledCardBuyButton } from './styles';\n\ninterface IProps {\n  asset: ICard;\n  mint: number;\n}\n\nexport const BuyCardButton = ({ asset, mint }: IProps) => {\n  const { network, tokenId } = useUrlParams();\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset.markets.find((item) => Number(item.tokenId) === mint);\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, mint]);\n\n  const {\n    handlePresent: onPresentBuyCardModal,\n    onDismiss: onDismissBuyCardModal,\n  } = useModal(\n    asset && selectedMintMarket && (\n      <BuyCardModal\n        address={asset.address}\n        mint={Number(selectedMintMarket.tokenId)}\n        price={selectedMintMarket.minimumAmount}\n        tokenAddress={selectedMintMarket.acceptedToken}\n        whiteListedTokens={asset.whiteListedTokens}\n        cardImg={asset.ls8MetaData[tokenId ? tokenId : 0]?.image}\n        onDismiss={() => {\n          onDismissBuyCardModal();\n        }}\n        network={network}\n      />\n    ),\n    'Buy Card Modal',\n    'Buy Card',\n  );\n\n  return (\n    <StyledCardBuyButton onClick={onPresentBuyCardModal}>\n      {' '}\n      Buy{' '}\n    </StyledCardBuyButton>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { BuyCardButton } from '../components/BuyCardButton';\nimport {\n  StyledCardMarket,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            {/* <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy> */}\n            <BuyCardButton asset={asset} mint={Number(market.tokenId)} />\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { Modal } from '../../../components';\nimport { InputField } from '../../../components/InputField';\nimport {\n  StyledModalButtonsWrapper,\n  StyledModalButton,\n} from '../../../components/Modal/styles';\nimport { TransactionStateWindow } from '../../../components/TransactionStateWindow';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IProfile } from '../../../services/models';\n\ninterface TransferCardTokenIdModalProps {\n  cardAddress: string;\n  tokenId: number;\n  profile: IProfile;\n  onDismiss: () => any;\n}\n\nexport const TransferCardTokenIdModal = ({\n  cardAddress,\n  tokenId,\n  profile,\n  onDismiss,\n}: TransferCardTokenIdModalProps) => {\n  const [toAddress, setToAddress] = useState<string>('');\n\n  const { transferCard, transferState, resetState } = useTransferLsp8Token(\n    cardAddress,\n    toAddress,\n    tokenId,\n    profile,\n  );\n\n  const transactionStatesMessages = {\n    loading: {\n      mainHeading: 'TRANSFERING CARD...',\n    },\n    successful: {\n      mainHeading: 'TRANSFER SUCCESSFULL',\n      description:\n        'The card will appear in your Universal Profile in the next ... hours',\n    },\n    failed: {\n      mainHeading: 'TRANSFER FAILED',\n    },\n  };\n\n  return (\n    <>\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={(e) => setToAddress(e.target.value)}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n        value={toAddress}\n      />\n      <StyledModalButtonsWrapper>\n        <StyledModalButton variant=\"gray\" onClick={onDismiss}>\n          Cancel\n        </StyledModalButton>\n        <StyledModalButton\n          onClick={transferCard}\n          disabled={!ethers.utils.isAddress(toAddress)}\n        >\n          Transfer Card\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n      <TransactionStateWindow\n        height=\"full\"\n        state={transferState}\n        transactionMessages={transactionStatesMessages}\n        callback={resetState}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectMintModalContent = styled.div`\n  max-height: 40em;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectMintListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledSelectMintListHeaderContent = styled.h4``;\n\nexport const StyledSelectMintList = styled.div`\n  overflow-y: scroll;\n`;\n\nexport const StyledSelectMintListContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 1em;\n  cursor: pointer;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledListMint = styled.p``;\n\nexport const StyledListPrice = styled.p``;\n","import { useMemo } from 'react';\nimport { IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledListMint,\n  StyledListPrice,\n  StyledSelectMintList,\n  StyledSelectMintListContent,\n  StyledSelectMintListHeader,\n  StyledSelectMintListHeaderContent,\n  StyledSelectMintModalContent,\n} from './styles';\n\ninterface IProps {\n  ownedTokenIds: number[];\n  markets: IMarket[];\n  whiteListedTokens: IWhiteListedTokens[];\n  onSelect: (index: number) => void;\n  onSelectCallback: () => void;\n}\n\nexport const SelectMintModalContent = ({\n  ownedTokenIds,\n  markets,\n  whiteListedTokens,\n  onSelect,\n  onSelectCallback,\n}: IProps) => {\n  const renderMintList = useMemo(\n    () =>\n      ownedTokenIds.map((id) => {\n        const market = markets.find((item) => Number(item.tokenId) === id);\n        const token =\n          market &&\n          whiteListedTokens.find(\n            (i) => i.tokenAddress === market.acceptedToken,\n          );\n        return (\n          <StyledSelectMintListContent\n            onClick={() => {\n              onSelect(id);\n              onSelectCallback();\n            }}\n          >\n            <StyledListMint>{id}</StyledListMint>\n            <StyledListPrice>\n              {market && token\n                ? `${displayPrice(\n                    market?.minimumAmount.toString(),\n                    token?.decimals,\n                  )} ${token.symbol}`\n                : '-'}\n            </StyledListPrice>\n          </StyledSelectMintListContent>\n        );\n      }),\n    [markets, onSelect, onSelectCallback, ownedTokenIds, whiteListedTokens],\n  );\n\n  return (\n    <StyledSelectMintModalContent>\n      <StyledSelectMintListHeader>\n        <StyledSelectMintListHeaderContent>\n          Mint\n        </StyledSelectMintListHeaderContent>\n        <StyledSelectMintListHeaderContent>\n          Price\n        </StyledSelectMintListHeaderContent>\n      </StyledSelectMintListHeader>\n      <StyledSelectMintList>{renderMintList}</StyledSelectMintList>\n    </StyledSelectMintModalContent>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n  TransferIcon,\n  OpenseaIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n  StyledMintSliderInput,\n  StyledSelectMintModalButton,\n  StyledOpenseaIcon,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\nimport { useRemoveMarketForLsp8Token } from '../../hooks/useRemoveMarketForLsp8Token';\nimport { useModal } from '../../hooks/useModal';\nimport { TransferCardTokenIdModal } from './TransferCardTokenIdModal';\nimport { SelectMintModalContent } from './SelectMintModalContent';\nimport { BuyCardButton } from './components/BuyCardButton';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const history = useHistory();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state.cards[params.network], params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector(\n    (state: RootState) => state.cards[params.network].error,\n  );\n\n  const cardStatus = useSelector(\n    (state: RootState) => state.cards[params.network].status,\n  );\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards[params.network].marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards[params.network].metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const mintIdInputRef = useRef<HTMLInputElement>(null);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const dispatch = useAppDispatch();\n\n  const { transferCard, transferState } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    ownedTokenIds ? ownedTokenIds[currentIndex] : 0,\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const { removeMarket, removingMarket } = useRemoveMarketForLsp8Token(\n    params.add,\n    parseInt(params.id),\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const {\n    handlePresent: onPresentSellCardModal,\n    onDismiss: onDismissSellCardModal,\n  } = useModal(\n    asset && ownedTokenIds && activeProfile && (\n      <SellCardModal\n        ownerProfile={activeProfile}\n        address={params.add}\n        mint={ownedTokenIds[currentIndex]}\n        price={currentMintMarket ? currentMintMarket.minimumAmount : undefined}\n        marketTokenAddress={\n          currentMintMarket ? currentMintMarket.acceptedToken : undefined\n        }\n        cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n        onDismiss={() => onDismissSellCardModal()}\n        whiteListedTokens={asset.whiteListedTokens}\n        network={params.network}\n      />\n    ),\n    'Sell Card Modal',\n    'Sell Card',\n  );\n\n  const {\n    handlePresent: onPresentSelectMintModal,\n    onDismiss: onDismissSelectMintModal,\n  } = useModal(\n    ownedTokenIds && asset && (\n      <SelectMintModalContent\n        ownedTokenIds={ownedTokenIds}\n        markets={asset.markets}\n        whiteListedTokens={asset.whiteListedTokens}\n        onSelect={(tokenId: number) => {\n          setCurrentIndex(ownedTokenIds.indexOf(Number(tokenId)));\n        }}\n        onSelectCallback={() => onDismissSelectMintModal()}\n      />\n    ),\n    'Select Mint Modal',\n    'Select Mint',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardModal,\n    onDismiss: onDismissTransferCardModal,\n  } = useModal(\n    <>\n      {activeProfile && (\n        <TransferCardTokenIdModal\n          cardAddress={params.add}\n          tokenId={parseInt(params.id)}\n          profile={activeProfile}\n          onDismiss={() => onDismissTransferCardModal()}\n        />\n      )}\n    </>,\n    'Card Transfer Modal',\n    'Transfer Card',\n  );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState(params.network));\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (nextIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (previousIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const mintChangeHelper = (mint: number) => {\n    if (ownedTokenIds && mint > 0 && mint <= ownedTokenIds.length) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[mint - 1]}`,\n      );\n      setCurrentIndex(mint - 1);\n    }\n  };\n\n  const onEnterHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    const val = Number(event.target.value);\n    mintChangeHelper(val);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            {asset && ownedTokenIds && (\n              <BuyCardButton asset={asset} mint={ownedTokenIds[currentIndex]} />\n            )}\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={onPresentSellCardModal}>\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton onClick={onPresentSellCardModal}>\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton onClick={removeMarket}>\n              {removingMarket ? 'Withdrawing from sale…' : 'Withdraw from sale'}\n            </StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transferState === STATUS.LOADING\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentUsersPermissionsSet,\n    currentMintMarket,\n    ownedTokenIds,\n    asset,\n    currentIndex,\n    onPresentSellCardModal,\n    transferCard,\n    transferState,\n    removeMarket,\n    removingMarket,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {ownedTokenIds && params.network === 'polygon' && (\n                    <a\n                      href={`https://opensea.io/assets/matic/${params.add}/${ownedTokenIds[currentIndex]}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      <StyledOpenseaIcon src={OpenseaIcon} alt=\"\" />\n                    </a>\n                  )}\n                  {wasActiveProfile && ownedTokenIds && (\n                    <>\n                      <StyledMintControls>\n                        <StyledMintSkipButton onClick={previousMint}>\n                          <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledMintSliderIndex>\n                          <StyledMintSliderInput\n                            type=\"number\"\n                            min={1}\n                            max={ownedTokenIds.length}\n                            defaultValue={currentIndex + 1}\n                            ref={mintIdInputRef}\n                            onKeyPress={onEnterHandler}\n                            onBlur={onBlurHandler}\n                          />\n                          /{ownedTokenIds.length}\n                        </StyledMintSliderIndex>\n                        <StyledMintSkipButton onClick={nextMint}>\n                          <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledSelectMintModalButton\n                          onClick={onPresentSelectMintModal}\n                        >\n                          Select Mint\n                        </StyledSelectMintModalButton>\n                      </StyledMintControls>\n                    </>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        {ownedTokenIds &&\n                          currentUsersPermissionsSet.call === '1' && (\n                            <StyledReloadPriceAction>\n                              <StyledActionIcon\n                                src={TransferIcon}\n                                alt=\"transfer\"\n                                title=\"transfer\"\n                                onClick={onPresentTransferCardModal}\n                              />\n                            </StyledReloadPriceAction>\n                          )}\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ReloadIcon}\n                            alt=\"reload\"\n                            title=\"reload\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ShareIcon}\n                            alt=\"share\"\n                            title=\"share\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={OptionIcon}\n                            alt=\"options\"\n                            title=\"options\"\n                          />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Owner', content: renderCurrentMintOwner },\n                    { name: 'Issuer', content: renderIssuer },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  ownerContent={activeProfile && renderCurrentMintOwner}\n                  issuerContent={renderIssuer}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                {asset && (\n                  <CardMarket\n                    asset={asset}\n                    cardMarkets={asset?.markets}\n                    whiteListedTokens={asset?.whiteListedTokens}\n                  />\n                )}\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useRemoveMarketForLsp8Token = (\n  cardAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [removingMarket, setRemovingMarket] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const removeMarket = async () => {\n    setRemovingMarket(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.removeMarketViaKeymanager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    } else {\n      await LSP3ProfileApi.removeMarket(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    }\n  };\n\n  return { removeMarket, removingMarket, error };\n};\n"],"sourceRoot":""}