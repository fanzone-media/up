{"version":3,"sources":["hooks/useModal/useModal.ts","hooks/useTransferLsp8Token/useTransferLsp8Token.ts","assets/polygon.svg","features/profiles/ProfileCard/styles.ts","features/profiles/ProfileCard/ProfileCard.tsx","hooks/usePagination/usePagination.ts","components/InputField/styles.ts","utility/permissions.ts","pages/AssetDetails/components/CardPriceInfoForModal/styles.ts","pages/AssetDetails/components/CardPriceInfoForModal/CardPriceInfoForModal.tsx","pages/AssetDetails/SellCardModal/styles.ts","components/InputField/InputField.tsx","pages/AssetDetails/SellCardModal/SellCardModal.tsx","hooks/useSellLsp8Token/useSellLsp8Token.ts","components/TabedAccordion/styles.ts","components/TabedAccordion/TabedAccordion.tsx","pages/AssetDetails/HoldersPagination/HoldersPagination.tsx","pages/AssetDetails/DesktopCreatorsAccordion/styles.ts","pages/AssetDetails/DesktopCreatorsAccordion/DesktopCreatorsAccordion.tsx","pages/AssetDetails/BuyCardModal/styles.ts","pages/AssetDetails/BuyCardModal/BuyCardModal.tsx","hooks/useErc20/useErc20.ts","hooks/useBuyLsp8Token/useBuyLsp8Token.ts","pages/AssetDetails/components/BuyCardButton/styles.ts","pages/AssetDetails/components/BuyCardButton/BuyCardButton.tsx","hooks/useUrlParams/useUrlParams.ts","pages/AssetDetails/CardMarket/styles.ts","pages/AssetDetails/CardMarket/CardMarket.tsx","pages/AssetDetails/TransferCardTokenIdModal/TransferCardTokenIdModal.tsx","pages/AssetDetails/SelectMintModalContent/styles.ts","pages/AssetDetails/SelectMintModalContent/SelectMintModalContent.tsx","pages/AssetDetails/AssetDetails.tsx","hooks/useRemoveMarketForLsp8Token/useRemoveMarketForLsp8Token.ts"],"names":["useModal","content","key","persist","useContext","ModalContext","isOpen","onDismiss","onPresent","handlePresent","useCallback","useTransferLsp8Token","cardAddress","toAddress","tokenId","profile","callback","useState","transfering","setTransfering","error","setError","useSigner","signer","data","transferCard","a","isOwnerKeyManager","KeyManagerApi","transferCardViaKeyManager","address","owner","then","catch","finally","LSP3ProfileApi","transferCardViaUniversalProfile","StyledProfileCard","styled","Link","theme","animation","cardrender","demo","screen","sm","StyledProfileDetailWrapper","div","StyledBalanceWrapper","StyledBalance","p","font","weight","regular","StyledPolygon","img","StyledProfileDetail","StyledProfileName","h3","bolder","StyledProfileRole","StyledProfileMedia","BgProfileCard","StyledProfileBlockie","StyledProfileImg","ProfileCard","userProfile","balance","type","tooltipId","params","useParams","getTooltipTokenIds","useMemo","ownedAssets","find","asset","assetAddress","toLowerCase","add","to","network","Web3","utils","toChecksumAddress","data-tip","tokenIds","data-for","length","src","polygon","alt","makeBlockie","profileImage","name","usePagination","range","setRange","StyledInputContainer","StyledPriceLabel","StyledPriceInput","input","align","FileInput","span","fileName","HiddenFileInputWrapper","HiddenFileInput","attrs","getAddressPermissionsOnUniversalProfile","permissionSet","addressToCheck","x","permissions","StyledCardPriceInfoContainer","StyledCardImg","StyledInfo","StyledInfoLabel","StyledInfoValue","CardPriceInfoForModal","cardImg","mint","price","slice","toString","StyledSellCardModalContent","StyledInputGroup","StyledTokenSelectorDropDown","select","StyledButtonGroup","StyledSetPriceButton","button","InputField","label","changeHandler","placeholder","value","step","onChange","SellCardModal","onClose","ownerProfile","whiteListedTokens","marketTokenAddress","amount","tokenAddress","sellForm","setSellForm","setForSale","isSelling","setIsSelling","useNetwork","decimals","setCardMarketViaKeyManager","convertPrice","LSP4DigitalAssetApi","setMarketViaUniversalProfile","useSellLsp8Token","event","currentTarget","selectedTokenDecimals","selectedToken","item","marketTokenDecimals","i","useEffect","displayPrice","map","symbol","onClick","disabled","StyledTabsHeader","StyledTabsLabel","$active","TabedAccordion","tabs","activeTab","setActiveTab","Accordion","header","tab","enableToggle","HolderPagination","holdersAddresses","dispatch","useAppDispatch","holderStatus","useSelector","state","userData","profilesRange","setProfilesRange","holders","selectAllUsersItems","filter","some","STATUS","LOADING","fetchAssetHolders","renderHolders","holder","findBalanceOf","id","getContent","dataTip","status","components","nbrOfAllComponents","setComponentsRange","StyledDesktopCreatorsAccordionWrapper","$expanded","md","StyledAccordionHeader","StyledCreatorsContainer","StyledIssuerContainer","StyledHeader","StyledHeaderTitle","StyledAccordionToggleButton","StyledAccordiomToggleIcon","DesktopCreatorsAccordion","creatorsContent","issuerContent","ownerContent","expand","setExpand","AccordionToggleIcon","StyledBuyCardModalContent","StyledInfoText","StyledToggleButtonGroup","StyledToggleButton","StyledSelectInputContainer","StyledUpAddressSelectInput","StyledUpAddressSelectLabel","StyledBuyButton","StyledCancelButton","StyledApproveButton","BuyCardModal","approve","useAccount","account","provider","useRpcProvider","erc20Contract","ERC20__factory","connect","spenderAddress","universalProfileAddress","buyer","checkBalanceOf","checkAllowance","allowance","isUniversalProfile","universalProfileCheck","fetchOwnerOfProfile","checkKeyManager","approveTokenViaKeyManager","approveTokenViaUniversalProfile","ownerAddress","balanceOf","useErc20","buyFromMarket","isBuying","setIsBuying","buyFromCardMarketViaKeyManager","buyFromCardMarketViaUniversalProfile","buyFromMarketViaEOA","useBuyLsp8Token","savedProfiles","getItems","useLocalStorage","savedProfilesAddresses","Object","keys","upAddress","setUpAddress","toggleEOABuy","setToggleEOABuy","marketToken","undefined","StyledCardBuyButton","BuyCardButton","useUrlParams","selectedMintMarket","market","markets","Number","token","acceptedToken","minimumAmount","ls8MetaData","image","onDismissBuyCardModal","onPresentBuyCardModal","StyledCardMarketContainer","StyledCardMarketTable","StyledCardMarketListHeader","StyledCardMarketListHeaderContent","h4","StyledCardMarket","StyledCardMarketMint","StyledCardMarketPrice","CardMarket","cardMarkets","findDecimals","findSymbol","TransferCardTokenIdModal","setToAddress","e","target","topMargin","ethers","isAddress","StyledSelectMintModalContent","StyledSelectMintListHeader","StyledSelectMintListHeaderContent","StyledSelectMintList","StyledSelectMintListContent","StyledListMint","StyledListPrice","SelectMintModalContent","ownedTokenIds","onSelect","onSelectCallback","renderMintList","AssetDetails","sign","transferValue","deploy","delegateCall","staticCall","call","setData","addPermissions","changePermissions","changeOwner","currentUsersPermissionsSet","setCurrentUsersPermissionsSet","history","useHistory","explorer","getChainExplorer","isDesktop","useMediaQuery","wasActiveProfile","me","activeProfile","selectUserById","allProfiles","selectUserIds","selectCardById","ownerStatus","creators","cardError","cards","cardStatus","marketsStatus","metaDataStatus","creatorsStatus","creatorStatus","mintIdInputRef","useRef","currentIndex","setCurrentIndex","marketsForOwnedTokens","currentMintMarket","removingMarket","setRemovingMarket","removeMarket","removeMarketViaKeymanager","tokenIdAsBytes32","useRemoveMarketForLsp8Token","parseInt","onDismissSellCardModal","onPresentSellCardModal","indexOf","onDismissSelectMintModal","onPresentSelectMintModal","onDismissTransferCardModal","onPresentTransferCardModal","IDLE","fetchProfileByAddress","fetchOwnerOfTokenId","fetchAllMarkets","push","fetchMetaDataForTokenId","addresses","forEach","includes","fetchAssetCreator","clearState","window","scrollTo","fetchCard","fetchOwnerAddressOfTokenId","_currentUsersPermissionsSet","propertiesImages","Tier","TierPropertyIcon","Edition","EditionPropertyIcon","CategoryPropertyIcon","SetPropertyIcon","Season","SeasonPropertyIcon","Zone","ZonePropertyIcon","League","SubzonePropertyIcon","Team","TeamPropertyIcon","cardProperties","tier","icon","edition","editionCategory","editionSet","season","zoneLabel","leagueLabel","teamLabel","cardInfo","valueType","totalSupply","renderIssuer","renderCurrentMintOwner","renderCreators","creator","Fragment","renderHolderPagination","renderCardPrice","renderCardProperties","attributes","trait_type","color","href","exploreUrl","rel","previousIndex","current","BackwardsIcon","min","max","defaultValue","ref","onBlur","val","nextIndex","ForwardsIcon","TransferIcon","title","ReloadIcon","ShareIcon","OptionIcon"],"mappings":"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","file":"static/js/5.a75c9cfc.chunk.js","sourcesContent":["import { useCallback, useContext } from 'react';\nimport { ModalContext, IOnPresent } from '../../context/ModalProvider';\n\nexport const useModal = (\n  ...[content, key, persist]: Parameters<IOnPresent>\n) => {\n  const { isOpen, onDismiss, onPresent } = useContext(ModalContext);\n\n  const handlePresent = useCallback(() => {\n    onPresent(content, key, persist);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content, key, onPresent]);\n\n  return { handlePresent, onDismiss, isOpen };\n};\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useTransferLsp8Token = (\n  cardAddress: Address,\n  toAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [transfering, setTransfering] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const transferCard = async () => {\n    setTransfering(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.transferCardViaKeyManager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    } else {\n      await LSP3ProfileApi.transferCardViaUniversalProfile(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenId : 0,\n        toAddress,\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setTransfering(false);\n        });\n    }\n  };\n\n  return { transferCard, transfering, error };\n};\n","export default __webpack_public_path__ + \"static/media/polygon.9f8343d5.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BgProfileCard } from '../../../assets';\n\nexport const StyledProfileCard = styled(Link)<{ demo?: boolean }>`\n  animation: ${({ theme }) => theme.animation.cardrender} 1s linear;\n  width: ${({ demo }) => (demo ? '165px' : '117px')};\n  border-radius: 10px;\n  position: relative;\n  transition: transform 0.2s ease-in-out;\n  border: 1px solid rgba(255, 255, 255, 0.25);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${({ theme }) => theme.screen.sm} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const StyledProfileDetailWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: ${({ demo }) => (demo ? '68px' : '53px')};\n  background-color: #212121;\n  border-radius: 0 0 10px 10px;\n  padding: 5px 10px 5px 10px;\n`;\n\nexport const StyledBalanceWrapper = styled.div<{ demo?: boolean }>`\n  display: flex;\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  position: absolute;\n  right: 0;\n  z-index: 10;\n  margin-top: ${({ demo }) => (demo ? '18px' : '14px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n`;\n\nexport const StyledBalance = styled.p<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '12px' : '8px')};\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  margin: auto;\n`;\n\nexport const StyledPolygon = styled.img<{ demo?: boolean }>`\n  position: absolute;\n  right: 0;\n  margin-top: ${({ demo }) => (demo ? '10px' : '8px')};\n  margin-right: ${({ demo }) => (demo ? '10px' : '8px')};\n  width: ${({ demo }) => (demo ? '30px' : '19px')};\n  z-index: 10;\n`;\n\nexport const StyledProfileDetail = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`;\n\nexport const StyledProfileName = styled.h3<{ demo?: boolean }>`\n  font-size: ${({ demo }) => (demo ? '18px' : '13px')};\n  font-weight: ${({ theme }) => theme.font.weight.bolder};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const StyledProfileRole = styled.p`\n  font-size: 13px;\n  color: #bcbcbc;\n`;\n\nexport const StyledProfileMedia = styled.div<{ demo?: boolean }>`\n  background: url(${BgProfileCard});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: flex;\n  z-index: 0;\n  height: ${({ demo }) => (demo ? '213px' : '121px')};\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const StyledProfileBlockie = styled.img<{ demo?: boolean }>`\n  width: ${({ demo }) => (demo ? '141px' : '89px')};\n  height: ${({ demo }) => (demo ? '141px' : '89px')};\n  border-radius: 100%;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  z-index: -1;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    height: ${({ demo }) => (demo ? '154px' : '89px')};\n    width: ${({ demo }) => (demo ? '154px' : '89px')};\n  }\n`;\n\nexport const StyledProfileImg = styled.img<{ demo?: boolean }>`\n  height: ${({ demo }) => (demo ? '121px' : '80px')};\n  width: ${({ demo }) => (demo ? '121px' : '80px')};\n  margin: auto;\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media ${({ theme }) => theme.screen.sm} {\n    width: ${({ demo }) => (demo ? '132px' : '80px')};\n    height: ${({ demo }) => (demo ? '132px' : '80px')};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { IProfile } from '../../../services/models';\nimport polygon from '../../../assets/polygon.svg';\nimport { NetworkName } from '../../../boot/types';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport {\n  StyledBalance,\n  StyledBalanceWrapper,\n  StyledPolygon,\n  StyledProfileBlockie,\n  StyledProfileCard,\n  StyledProfileDetail,\n  StyledProfileDetailWrapper,\n  StyledProfileImg,\n  StyledProfileMedia,\n  StyledProfileName,\n  StyledProfileRole,\n} from './styles';\nimport { useParams } from 'react-router-dom';\nimport Web3 from 'web3';\n\ninterface Iprops {\n  userProfile: IProfile;\n  type: string;\n  balance?: number;\n  tooltipId?: string;\n}\n\ninterface IParams {\n  network: NetworkName;\n  add: string;\n}\n\nexport const ProfileCard: React.FC<Iprops> = ({\n  userProfile,\n  balance,\n  type,\n  tooltipId,\n}: Iprops) => {\n  const params = useParams<IParams>();\n  const getTooltipTokenIds = useMemo(\n    () =>\n      type !== 'demo' &&\n      userProfile.ownedAssets.find(\n        (asset) =>\n          asset.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      ),\n    [params.add, type, userProfile.ownedAssets],\n  );\n\n  return (\n    <StyledProfileCard\n      to={\n        `/${params.network}/profile/` +\n        Web3.utils.toChecksumAddress(userProfile.address)\n      }\n      demo={type === 'demo' ? true : false}\n      data-tip={\n        type !== 'demo' && getTooltipTokenIds && getTooltipTokenIds.tokenIds\n      }\n      data-for={tooltipId}\n    >\n      <StyledBalanceWrapper demo={type === 'demo' ? true : false}>\n        <StyledBalance demo={type === 'demo' ? true : false}>\n          {type === 'demo' ? userProfile.ownedAssets.length : balance}\n        </StyledBalance>\n      </StyledBalanceWrapper>\n      <StyledPolygon\n        src={polygon}\n        alt=\"\"\n        demo={type === 'demo' ? true : false}\n      />\n      <StyledProfileMedia demo={type === 'demo' ? true : false}>\n        <StyledProfileBlockie\n          src={makeBlockie(userProfile.address)}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n        <StyledProfileImg\n          src={userProfile.profileImage}\n          alt=\"\"\n          demo={type === 'demo' ? true : false}\n        />\n      </StyledProfileMedia>\n      <StyledProfileDetailWrapper demo={type === 'demo' ? true : false}>\n        <StyledProfileDetail>\n          <StyledProfileName demo={type === 'demo' ? true : false}>\n            {' '}\n            @{userProfile.name}{' '}\n          </StyledProfileName>\n          <StyledProfileRole>FANZONE user</StyledProfileRole>\n        </StyledProfileDetail>\n      </StyledProfileDetailWrapper>\n    </StyledProfileCard>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [range, setRange] = useState<[number, number]>([0, 9]); // load first 10 by default\n\n  return {\n    range,\n    setRange,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledPriceLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledPriceInput = styled.input<{ align?: string }>`\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: ${({ align }) => (align ? align : 'end')};\n  width: 100%;\n`;\n\nexport const FileInput = styled.span<{ fileName: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  line-height: 1.5;\n  color: #555;\n  cursor: pointer;\n  background-color: rgba(49, 49, 49, 1);\n  border: 0.075rem solid #ddd;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0.2rem 0.4rem rgb(0 0 0 / 5%);\n  user-select: none;\n  overflow: hidden;\n\n  &::before {\n    position: absolute;\n    top: -0.075rem;\n    right: -0.075rem;\n    bottom: -0.075rem;\n    display: block;\n    content: 'Browse';\n    height: 2.5rem;\n    padding: 0.5rem 1rem;\n    line-height: 1.5;\n    color: #ddd;\n    background-color: #999;\n    border: 0.075rem solid #999;\n    border-radius: 0 0.3em 0.3em 0;\n  }\n\n  &::after {\n    content: ${({ fileName }) =>\n      fileName ? `'${fileName}'` : 'Choose a file…'};\n    color: #ddd;\n  }\n`;\n\nexport const HiddenFileInputWrapper = styled.div`\n  position: relative;\n  height: 2.5rem;\n\n  &:hover ${FileInput}::before {\n    background-color: #ddd;\n    color: #999;\n  }\n`;\n\nexport const HiddenFileInput = styled.input.attrs({\n  type: 'file',\n})`\n  margin: 0;\n  min-with: 14em;\n  opacity: 0;\n`;\n","import { IPermissionSet } from '../services/models';\nimport { Address } from '../utils/types';\n\nexport const getAddressPermissionsOnUniversalProfile = (\n  permissionSet: Array<IPermissionSet>,\n  addressToCheck: Address,\n): IPermissionSet | undefined => {\n  return permissionSet.find(\n    (x) =>\n      x.address.toLowerCase() === addressToCheck.toLowerCase() && x.permissions,\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledCardPriceInfoContainer = styled.div`\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledCardImg = styled.img`\n  max-width: 5em;\n`;\n\nexport const StyledInfo = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 5em auto;\n`;\n\nexport const StyledInfoLabel = styled.p`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nexport const StyledInfoValue = styled.p`\n  font-size: 0.9rem;\n`;\n","import { BigNumber } from 'ethers';\nimport React from 'react';\nimport {\n  StyledCardImg,\n  StyledCardPriceInfoContainer,\n  StyledInfo,\n  StyledInfoLabel,\n  StyledInfoValue,\n} from './styles';\n\ninterface IProps {\n  cardImg: string;\n  address: string;\n  mint?: number;\n  price?: number;\n}\n\nexport const CardPriceInfoForModal = ({\n  cardImg,\n  address,\n  mint,\n  price,\n}: IProps) => {\n  return (\n    <StyledCardPriceInfoContainer>\n      <StyledCardImg src={cardImg} alt=\"\" />\n      <StyledInfo>\n        <StyledInfoLabel>Address:</StyledInfoLabel>\n        <StyledInfoValue>\n          {address.slice(0, 8)}...\n          {address.slice(address.length - 4, address.length)}\n        </StyledInfoValue>\n        <StyledInfoLabel>Mint:</StyledInfoLabel>\n        <StyledInfoValue>{mint}</StyledInfoValue>\n        <StyledInfoLabel>Price:</StyledInfoLabel>\n        <StyledInfoValue>{price?.toString()}</StyledInfoValue>\n      </StyledInfo>\n    </StyledCardPriceInfoContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSellCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInputGroup = styled.div`\n  position: relative;\n  display: flex;\n  column-gap: 1em;\n  width: 100%;\n`;\n\nexport const StyledTokenSelectorDropDown = styled.select`\n  background: none;\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledSetPriceButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledSetPriceButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n","import {\n  StyledInputContainer,\n  StyledPriceInput,\n  StyledPriceLabel,\n} from './styles';\n\ninterface IProps {\n  name: string;\n  label: string;\n  type: string;\n  changeHandler?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  align?: string;\n  placeholder?: string;\n  value?: string;\n}\n\nexport const InputField = ({\n  name,\n  label,\n  type,\n  changeHandler,\n  align,\n  placeholder,\n  value,\n}: IProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledPriceLabel>{label}</StyledPriceLabel>\n      <StyledPriceInput\n        name={name}\n        type={type}\n        step=\"any\"\n        onChange={changeHandler}\n        align={align}\n        placeholder={placeholder}\n        value={value}\n      />\n    </StyledInputContainer>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledButtonGroup,\n  StyledInputGroup,\n  StyledSellCardModalContent,\n  StyledSetPriceButton,\n  StyledTokenSelectorDropDown,\n} from './styles';\nimport { IProfile, IWhiteListedTokens } from '../../../services/models';\nimport { InputField } from '../../../components/InputField';\nimport { displayPrice } from '../../../utility';\nimport { BigNumber, BigNumberish } from 'ethers';\nimport { useSellLsp8Token } from '../../../hooks/useSellLsp8Token';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  marketTokenAddress?: string;\n  price?: BigNumber;\n  cardImg: string;\n  ownerProfile: IProfile;\n  whiteListedTokens?: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const SellCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  ownerProfile,\n  whiteListedTokens,\n  marketTokenAddress,\n  network,\n}: IProps) => {\n  const [sellForm, setSellForm] = useState<{\n    amount: BigNumberish;\n    tokenAddress: string;\n  }>({\n    amount: 0,\n    tokenAddress:\n      whiteListedTokens && whiteListedTokens.length > 0\n        ? whiteListedTokens[0].tokenAddress\n        : '',\n  });\n  const { setForSale } = useSellLsp8Token();\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setSellForm({\n      ...sellForm,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  const selectedTokenDecimals = useMemo(() => {\n    const selectedToken =\n      whiteListedTokens &&\n      whiteListedTokens.find(\n        (item) => item.tokenAddress === sellForm.tokenAddress,\n      );\n    if (selectedToken) {\n      return selectedToken.decimals;\n    }\n    return 1;\n  }, [sellForm.tokenAddress, whiteListedTokens]);\n\n  const marketTokenDecimals =\n    whiteListedTokens &&\n    whiteListedTokens.find((i) => i.tokenAddress === marketTokenAddress)\n      ?.decimals;\n\n  useEffect(() => {}, []);\n\n  return (\n    <StyledSellCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={\n          price &&\n          displayPrice(price, marketTokenDecimals ? marketTokenDecimals : 0)\n        }\n        cardImg={cardImg}\n      />\n      {whiteListedTokens && (\n        <StyledInputGroup>\n          <InputField\n            name=\"amount\"\n            label=\"Your Price\"\n            type=\"number\"\n            changeHandler={changeHandler}\n          />\n          <StyledTokenSelectorDropDown\n            name=\"tokenAddress\"\n            onChange={changeHandler}\n          >\n            <option>Token</option>\n            {whiteListedTokens?.map((item, i) => (\n              <option key={i} value={item.tokenAddress}>\n                {item.symbol}\n              </option>\n            ))}\n          </StyledTokenSelectorDropDown>\n        </StyledInputGroup>\n      )}\n      <StyledButtonGroup>\n        <StyledSetPriceButton\n          onClick={() =>\n            setForSale(\n              address,\n              ownerProfile,\n              mint,\n              sellForm.tokenAddress,\n              sellForm.amount,\n              selectedTokenDecimals,\n            )\n          }\n          disabled={!whiteListedTokens || whiteListedTokens?.length === 0}\n        >\n          Set for sale\n        </StyledSetPriceButton>\n      </StyledButtonGroup>\n    </StyledSellCardModalContent>\n  );\n};\n","import { BigNumberish } from 'ethers';\nimport { useState } from 'react';\nimport { useNetwork, useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\nimport { IProfile } from '../../services/models';\nimport { convertPrice } from '../../utility';\n\nexport const useSellLsp8Token = () => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [isSelling, setIsSelling] = useState<boolean>(false);\n  const [{ data }] = useNetwork();\n\n  const setForSale = async (\n    assetAddress: string,\n    ownerProfile: IProfile,\n    mint: number,\n    tokenAddress: string,\n    amount: BigNumberish,\n    decimals: number,\n  ) => {\n    setIsSelling(true);\n    if (ownerProfile.isOwnerKeyManager && signer) {\n      await KeyManagerApi.setCardMarketViaKeyManager(\n        assetAddress,\n        ownerProfile.address,\n        ownerProfile.owner,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .catch((error) => {\n          setError(error);\n        })\n        .finally(() => {\n          setIsSelling(false);\n        });\n    }\n    if (!ownerProfile.isOwnerKeyManager && signer) {\n      await LSP4DigitalAssetApi.setMarketViaUniversalProfile(\n        assetAddress,\n        ownerProfile.address,\n        mint,\n        tokenAddress,\n        convertPrice(amount, decimals),\n        signer,\n      )\n        .catch((error) => {\n          setError(error);\n        })\n        .finally(() => {\n          setIsSelling(false);\n        });\n    }\n  };\n\n  return { isSelling, setForSale, error };\n};\n","import styled from 'styled-components';\n\nexport const StyledTabsHeader = styled.div`\n  display: flex;\n  column-gap: 1.5em;\n`;\n\nexport const StyledTabsLabel = styled.button<{ $active: boolean }>`\n  color: ${({ $active }) => ($active ? 'white' : 'rgba(223, 223, 223, 0.3)')};\n`;\n","import React, { ReactNode, useState } from 'react';\nimport { Accordion } from '../Accordion';\nimport { StyledTabsHeader, StyledTabsLabel } from './styles';\n\ninterface IProps {\n  tabs: {\n    name: string;\n    content: ReactNode;\n  }[];\n}\n\nexport const TabedAccordion = ({ tabs }: IProps) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  return (\n    <Accordion\n      header={\n        <StyledTabsHeader>\n          {tabs.map((tab, i) => (\n            <StyledTabsLabel\n              key={i}\n              $active={activeTab === i}\n              onClick={() => setActiveTab(i)}\n            >\n              {tab.name}\n            </StyledTabsLabel>\n          ))}\n        </StyledTabsHeader>\n      }\n      enableToggle\n    >\n      {tabs[activeTab].content}\n    </Accordion>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { useAppDispatch } from '../../../boot/store';\nimport { NetworkName, RootState } from '../../../boot/types';\nimport { Pagination } from '../../../components';\nimport {\n  fetchAssetHolders,\n  selectAllUsersItems,\n} from '../../../features/profiles';\nimport { ProfileCard } from '../../../features/profiles/ProfileCard';\nimport { usePagination } from '../../../hooks/usePagination';\nimport { STATUS } from '../../../utility';\n\ntype IParams = {\n  network: NetworkName;\n  add: string;\n};\ninterface IProps {\n  holdersAddresses: string[];\n}\n\nexport const HolderPagination = ({ holdersAddresses }: IProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams<IParams>();\n  const holderStatus = useSelector(\n    (state: RootState) => state.userData[params.network].holderStatus,\n  );\n\n  const { range: profilesRange, setRange: setProfilesRange } = usePagination();\n\n  const holders = useSelector((state: RootState) => {\n    return selectAllUsersItems(state.userData[params.network]);\n  }).filter((item) => {\n    return holdersAddresses\n      .slice(profilesRange[0], profilesRange[1] + 1)\n      .some((i) => {\n        return i === item.address;\n      });\n  });\n\n  useEffect(() => {\n    if (holderStatus === STATUS.LOADING || holdersAddresses.length === 0)\n      return;\n    dispatch(\n      fetchAssetHolders({\n        address: holdersAddresses.slice(profilesRange[0], profilesRange[1] + 1),\n        network: params.network,\n      }),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, holdersAddresses, params.network, profilesRange]);\n\n  const renderHolders = useMemo(\n    () =>\n      holders.map((holder) => {\n        const findBalanceOf = holder.ownedAssets.find(\n          (item) => item.assetAddress === params.add.toLowerCase(),\n        );\n        return (\n          <>\n            <ProfileCard\n              key={holder.address}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              userProfile={holder}\n              type=\"holder\"\n              tooltipId=\"holderTooltip\"\n            />\n            <ReactTooltip\n              id=\"holderTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        );\n      }),\n    [holders, params.add],\n  );\n\n  return (\n    <Pagination\n      status={holderStatus}\n      components={renderHolders}\n      nbrOfAllComponents={holdersAddresses.length}\n      setComponentsRange={setProfilesRange}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledDesktopCreatorsAccordionWrapper = styled.div<{\n  $expanded: boolean;\n}>`\n  display: flex;\n  height: ${({ $expanded }) => ($expanded ? '100%' : '62px')};\n  overflow: hidden;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border: 1px solid rgba(255, 255, 255, 0.15);\n    border-radius: 10px;\n    background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.08) 107.79%\n      ),\n      rgba(33, 33, 33, 0.6);\n  }\n`;\n\nexport const StyledAccordionHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 40px;\n\n  @media ${({ theme }) => theme.screen.md} {\n    border-bottom: ${({ $expanded }) =>\n      $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n  }\n`;\n\nexport const StyledCreatorsContainer = styled.div<{ $expanded: boolean }>`\n  width: 100%;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledIssuerContainer = styled.div<{ $expanded: boolean }>`\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0.06) 26.97%,\n    rgba(255, 255, 255, -0.06) 100%\n  );\n  margin-left: auto;\n  padding: 0.5em 1em;\n`;\n\nexport const StyledHeader = styled.div<{ $expanded: boolean }>`\n  display: flex;\n  height: 2.5em;\n  border-bottom: ${({ $expanded }) =>\n    $expanded ? '1px solid rgba(223, 223, 223, 0.2)' : 'none'};\n`;\n\nexport const StyledHeaderTitle = styled.h3`\n  margin: auto 0;\n`;\n\nexport const StyledCreatorsContent = styled.div``;\n\nexport const StyledAccordionToggleButton = styled.button`\n  margin: auto 0 auto auto;\n`;\n\nexport const StyledAccordiomToggleIcon = styled.img<{ $expanded: boolean }>`\n  transform: ${({ $expanded }) =>\n    $expanded ? 'rotate(0deg)' : 'rotate(180deg)'};\n`;\n","import { ReactNode, useState } from 'react';\nimport { AccordionToggleIcon } from '../../../assets';\nimport {\n  StyledAccordiomToggleIcon,\n  StyledAccordionHeader,\n  StyledAccordionToggleButton,\n  StyledCreatorsContainer,\n  StyledDesktopCreatorsAccordionWrapper,\n  StyledHeader,\n  StyledHeaderTitle,\n  StyledIssuerContainer,\n} from './styles';\n\ninterface IProps {\n  creatorsContent: ReactNode;\n  issuerContent: ReactNode;\n  ownerContent?: ReactNode;\n  enableToggle: boolean;\n}\n\nexport const DesktopCreatorsAccordion: React.FC<IProps> = ({\n  creatorsContent,\n  issuerContent,\n  ownerContent,\n  enableToggle,\n}) => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  return (\n    <StyledDesktopCreatorsAccordionWrapper $expanded={expand}>\n      <StyledCreatorsContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Creators</StyledHeaderTitle>\n        </StyledHeader>\n        {creatorsContent}\n      </StyledCreatorsContainer>\n      {ownerContent && (\n        <StyledIssuerContainer $expanded={expand}>\n          <StyledHeader $expanded={expand}>\n            <StyledHeaderTitle>Owner</StyledHeaderTitle>\n          </StyledHeader>\n          {ownerContent}\n        </StyledIssuerContainer>\n      )}\n      <StyledIssuerContainer $expanded={expand}>\n        <StyledHeader $expanded={expand}>\n          <StyledHeaderTitle>Issuer</StyledHeaderTitle>\n          {enableToggle && (\n            <StyledAccordionToggleButton onClick={() => setExpand(!expand)}>\n              <StyledAccordiomToggleIcon\n                $expanded={expand}\n                src={AccordionToggleIcon}\n                alt=\"\"\n              />\n            </StyledAccordionToggleButton>\n          )}\n        </StyledHeader>\n        {issuerContent}\n      </StyledIssuerContainer>\n      <StyledAccordionHeader $expanded={expand}></StyledAccordionHeader>\n    </StyledDesktopCreatorsAccordionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBuyCardModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 500px;\n  row-gap: 2em;\n`;\n\nexport const StyledModalHeader = styled.h3`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.font.weight.regular};\n  font-size: 1.2rem;\n`;\n\nexport const StyledInfoText = styled.p`\n  font-size: 0.9rem;\n`;\n\nexport const StyledToggleButtonGroup = styled.div`\n  border-radius: 0.5em;\n  width: max-content;\n  border: 1px solid rgba(153, 153, 153, 1);\n  margin: 0 auto;\n\n  button {\n    border-right: 1px solid rgba(153, 153, 153, 1);\n\n    :first-child {\n      border-radius: 0.4em 0 0 0.4em;\n    }\n\n    :last-child {\n      border-right: none;\n      border-radius: 0 0.4em 0.4em 0;\n    }\n  }\n`;\n\nexport const StyledToggleButton = styled.button<{ $active: boolean }>`\n  padding: 0.5em;\n  color: ${({ $active }) => ($active ? 'rgba(255, 129, 1, 1)' : 'white')};\n  background-color: ${({ $active }) =>\n    $active ? 'rgba(255, 255, 255, 0.2)' : ''};\n`;\n\nexport const StyledSelectInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectInput = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid rgba(153, 153, 153, 1);\n  border-radius: 0.3em;\n  padding: 0.5em 0.5em;\n  text-align: end;\n  width: 100%;\n`;\n\nexport const StyledUpAddressSelectLabel = styled.p`\n  position: absolute;\n  padding: 0 0.5em;\n  margin: -0.75em 0 0 0.5em;\n  background-color: rgba(49, 49, 49, 1);\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const StyledButtonGroup = styled.div``;\n\nexport const StyledBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.2em;\n  color: white;\n  width: 100%;\n  padding: 0.5em 0;\n`;\n\nexport const StyledCancelButton = styled(StyledBuyButton)`\n  background-color: rgba(76, 76, 76, 1);\n  margin-top: 0.8em;\n`;\n\nexport const StyledApproveButton = styled(StyledCancelButton)``;\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { NetworkName } from '../../../boot/types';\nimport { InputField } from '../../../components/InputField';\nimport { useErc20 } from '../../../hooks/useErc20';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport { useBuyLsp8Token } from '../../../hooks/useBuyLsp8Token';\nimport { IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { CardPriceInfoForModal } from '../components/CardPriceInfoForModal';\nimport {\n  StyledApproveButton,\n  StyledButtonGroup,\n  StyledBuyButton,\n  StyledBuyCardModalContent,\n  StyledInfoText,\n  StyledSelectInputContainer,\n  StyledToggleButton,\n  StyledToggleButtonGroup,\n  StyledUpAddressSelectInput,\n  StyledUpAddressSelectLabel,\n} from './styles';\n\ninterface IProps {\n  onClose: () => void;\n  address: string;\n  mint: number;\n  price: BigNumber;\n  cardImg: string;\n  tokenAddress: string;\n  whiteListedTokens: IWhiteListedTokens[];\n  network: NetworkName;\n}\n\nexport const BuyCardModal = ({\n  address,\n  onClose,\n  mint,\n  price,\n  cardImg,\n  tokenAddress,\n  whiteListedTokens,\n  network,\n}: IProps) => {\n  const { approve } = useErc20({ tokenAddress, network });\n  const { buyFromMarket } = useBuyLsp8Token(address, network);\n  const { getItems } = useLocalStorage();\n  const savedProfiles = getItems(network);\n  const savedProfilesAddresses = savedProfiles\n    ? Object.keys(savedProfiles)\n    : null;\n  const [upAddress, setUpAddress] = useState<string>(\n    savedProfilesAddresses && savedProfilesAddresses.length > 0\n      ? savedProfilesAddresses[0]\n      : '',\n  );\n  const [toggleEOABuy, setToggleEOABuy] = useState<boolean>(false);\n\n  const marketToken =\n    whiteListedTokens &&\n    whiteListedTokens.length > 0 &&\n    whiteListedTokens.find((i) => i.tokenAddress === tokenAddress);\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    setUpAddress(event.currentTarget.value);\n  };\n\n  return (\n    <StyledBuyCardModalContent>\n      <CardPriceInfoForModal\n        address={address}\n        mint={mint}\n        price={displayPrice(price, marketToken ? marketToken.decimals : 0)}\n        cardImg={cardImg}\n      />\n      <StyledToggleButtonGroup>\n        <StyledToggleButton\n          $active={!toggleEOABuy}\n          onClick={() => setToggleEOABuy(false)}\n        >\n          With UP\n        </StyledToggleButton>\n        <StyledToggleButton\n          $active={toggleEOABuy}\n          onClick={() => setToggleEOABuy(true)}\n        >\n          With EOA\n        </StyledToggleButton>\n      </StyledToggleButtonGroup>\n      {!toggleEOABuy &&\n        (savedProfilesAddresses ? (\n          <StyledSelectInputContainer>\n            <StyledUpAddressSelectLabel>UP Address</StyledUpAddressSelectLabel>\n            <StyledUpAddressSelectInput>\n              {savedProfilesAddresses.map((item) => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n            </StyledUpAddressSelectInput>\n          </StyledSelectInputContainer>\n        ) : (\n          <InputField\n            name=\"universalProfileAddress\"\n            label=\"UP Address\"\n            type=\"text\"\n            changeHandler={changeHandler}\n          />\n        ))}\n      <StyledApproveButton\n        onClick={async () =>\n          await approve(\n            address,\n            price,\n            network,\n            !toggleEOABuy ? upAddress : undefined,\n          )\n        }\n      >\n        Check balance & Approve\n      </StyledApproveButton>\n      <StyledInfoText>\n        Do you confirm the purchase of this card mint for{' '}\n        {displayPrice(price, marketToken ? marketToken.decimals : 0)}{' '}\n        {marketToken ? marketToken.symbol : ''}?\n      </StyledInfoText>\n      <StyledButtonGroup>\n        <StyledBuyButton\n          onClick={async () =>\n            await buyFromMarket(\n              address,\n              price,\n              mint,\n              !toggleEOABuy ? upAddress : undefined,\n            )\n          }\n        >\n          Buy\n        </StyledBuyButton>\n      </StyledButtonGroup>\n    </StyledBuyCardModalContent>\n  );\n};\n","import { BigNumber } from 'ethers';\nimport { useMemo, useState } from 'react';\nimport { useAccount, useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { ERC20__factory } from '../../submodules/fanzone-smart-contracts/typechain';\nimport { useRpcProvider } from '../useRpcProvider';\n\ninterface IProps {\n  tokenAddress: string;\n  network: NetworkName;\n}\n\nexport const useErc20 = ({ tokenAddress, network }: IProps) => {\n  const [{ data: signer }] = useSigner();\n  const [{ data: account }] = useAccount();\n  const [error, setError] = useState();\n  const provider = useRpcProvider(network);\n  const erc20Contract = useMemo(\n    () => ERC20__factory.connect(tokenAddress, signer ? signer : provider),\n    [provider, signer, tokenAddress],\n  );\n\n  const approve = async (\n    spenderAddress: string,\n    amount: BigNumber,\n    network: NetworkName,\n    universalProfileAddress?: string,\n  ) => {\n    const buyer = universalProfileAddress\n      ? universalProfileAddress\n      : account\n      ? account.address\n      : '';\n    const balance = await checkBalanceOf(buyer);\n\n    const allowance =\n      balance >= amount && (await checkAllowance(buyer, spenderAddress));\n    if (allowance && allowance >= amount) {\n      return;\n    }\n\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.approveTokenViaKeyManager(\n          owner,\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP3ProfileApi.approveTokenViaUniversalProfile(\n          universalProfileAddress,\n          spenderAddress,\n          tokenAddress,\n          amount,\n          signer,\n        ));\n    } else {\n      await erc20Contract.approve(spenderAddress, amount);\n    }\n  };\n\n  const checkAllowance = async (\n    ownerAddress: string,\n    spenderAddress: string,\n  ): Promise<BigNumber> => {\n    const allowance = await erc20Contract.allowance(\n      ownerAddress,\n      spenderAddress,\n    );\n    return allowance;\n  };\n\n  const checkBalanceOf = async (address: string): Promise<BigNumber> => {\n    const balance = await erc20Contract.balanceOf(address);\n    return balance;\n  };\n\n  return {\n    approve,\n    checkAllowance,\n    checkBalanceOf,\n  };\n};\n","import { BigNumber } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { NetworkName } from '../../boot/types';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { LSP4DigitalAssetApi } from '../../services/controllers/LSP4DigitalAsset';\n\nexport const useBuyLsp8Token = (assetAddress: string, network: NetworkName) => {\n  const [{ data: signer }] = useSigner();\n  const [error, setError] = useState();\n  const [isBuying, setIsBuying] = useState<boolean>(false);\n\n  const buyFromMarket = async (\n    assetAddress: string,\n    amount: BigNumber,\n    tokenId: number,\n    universalProfileAddress?: string,\n  ) => {\n    setIsBuying(true);\n    const universalProfileCheck =\n      universalProfileAddress &&\n      (await LSP3ProfileApi.isUniversalProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const owner =\n      universalProfileAddress &&\n      universalProfileCheck &&\n      (await LSP3ProfileApi.fetchOwnerOfProfile(\n        universalProfileAddress,\n        network,\n      ));\n    const keyManagerCheck =\n      owner && (await LSP3ProfileApi.checkKeyManager(owner, network));\n    if (keyManagerCheck && owner && universalProfileAddress) {\n      signer &&\n        (await KeyManagerApi.buyFromCardMarketViaKeyManager(\n          assetAddress,\n          owner,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .catch((error) => {\n            setError(error);\n          })\n          .finally(() => {\n            setIsBuying(false);\n          }));\n    }\n    if (owner && universalProfileAddress) {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromCardMarketViaUniversalProfile(\n          assetAddress,\n          universalProfileAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .catch((error) => {\n            setError(error);\n          })\n          .finally(() => {\n            setIsBuying(false);\n          }));\n    } else {\n      signer &&\n        (await LSP4DigitalAssetApi.buyFromMarketViaEOA(\n          assetAddress,\n          tokenId,\n          amount,\n          signer,\n        )\n          .catch((error) => {\n            setError(error);\n          })\n          .finally(() => {\n            setIsBuying(false);\n          }));\n    }\n  };\n\n  return { buyFromMarket, error, isBuying };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardBuyButton = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n  width: 100%;\n`;\n","import { useMemo } from 'react';\nimport { useModal } from '../../../../hooks/useModal';\nimport { useUrlParams } from '../../../../hooks/useUrlParams';\nimport { ICard } from '../../../../services/models';\nimport { BuyCardModal } from '../../BuyCardModal';\nimport { StyledCardBuyButton } from './styles';\n\ninterface IProps {\n  asset: ICard;\n  mint: number;\n}\n\nexport const BuyCardButton = ({ asset, mint }: IProps) => {\n  const { network, tokenId } = useUrlParams();\n\n  const selectedMintMarket = useMemo(() => {\n    const market = asset.markets.find((item) => Number(item.tokenId) === mint);\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, mint]);\n\n  const {\n    handlePresent: onPresentBuyCardModal,\n    onDismiss: onDismissBuyCardModal,\n  } = useModal(\n    asset && selectedMintMarket && (\n      <BuyCardModal\n        address={asset.address}\n        mint={Number(selectedMintMarket.tokenId)}\n        price={selectedMintMarket.minimumAmount}\n        tokenAddress={selectedMintMarket.acceptedToken}\n        whiteListedTokens={asset.whiteListedTokens}\n        cardImg={asset.ls8MetaData[tokenId ? tokenId : 0]?.image}\n        onClose={() => {\n          onDismissBuyCardModal();\n        }}\n        network={network}\n      />\n    ),\n    'Buy Card Modal',\n    'Buy Card',\n  );\n\n  return (\n    <StyledCardBuyButton onClick={onPresentBuyCardModal}>\n      {' '}\n      Buy{' '}\n    </StyledCardBuyButton>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { NetworkName } from '../../boot/types';\n\ninterface IParams {\n  network: NetworkName;\n  address: string;\n  tokenId: string;\n}\n\nexport const useUrlParams = () => {\n  const params = useParams<IParams>();\n\n  return {\n    network: params.network,\n    address: params.address,\n    tokenId: params.tokenId,\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledCardMarketContainer = styled.div`\n  padding: 2em 0;\n  display: flex;\n`;\n\nexport const StyledCardMarketTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledCardMarketListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledCardMarketListHeaderContent = styled.h4``;\n\nexport const StyledCardMarket = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1em;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledCardMarketMint = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketPrice = styled.p`\n  margin: auto 0;\n`;\n\nexport const StyledCardMarketBuy = styled.button`\n  background-color: rgba(255, 129, 1, 1);\n  border-radius: 0.3em;\n  padding: 0.3em 0;\n`;\n","import { ICard, IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport { BuyCardButton } from '../components/BuyCardButton';\nimport {\n  StyledCardMarket,\n  StyledCardMarketContainer,\n  StyledCardMarketListHeader,\n  StyledCardMarketListHeaderContent,\n  StyledCardMarketMint,\n  StyledCardMarketPrice,\n  StyledCardMarketTable,\n} from './styles';\n\ninterface IProps {\n  asset: ICard;\n  cardMarkets?: IMarket[];\n  whiteListedTokens?: IWhiteListedTokens[];\n}\n\nexport const CardMarket = ({\n  asset,\n  cardMarkets,\n  whiteListedTokens,\n}: IProps) => {\n  const findDecimals = (tokenAddress: string) => {\n    const decimals =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.decimals;\n    return decimals ? decimals : 0;\n  };\n\n  const findSymbol = (tokenAddress: string) => {\n    const symbol =\n      whiteListedTokens &&\n      whiteListedTokens.find((item) => item.tokenAddress === tokenAddress)\n        ?.symbol;\n    return symbol ? symbol : '';\n  };\n\n  return cardMarkets && cardMarkets.length > 0 && whiteListedTokens ? (\n    <StyledCardMarketContainer>\n      {/* {asset && <MetaCard digitalCard={asset} type=\"\" />} */}\n      <StyledCardMarketTable>\n        <StyledCardMarketListHeader>\n          <StyledCardMarketListHeaderContent>\n            Mint\n          </StyledCardMarketListHeaderContent>\n          <StyledCardMarketListHeaderContent>\n            Price\n          </StyledCardMarketListHeaderContent>\n        </StyledCardMarketListHeader>\n        {cardMarkets.map((market) => (\n          <StyledCardMarket>\n            <StyledCardMarketMint>\n              {Number(market.tokenId)}\n            </StyledCardMarketMint>\n            <StyledCardMarketPrice>\n              {displayPrice(\n                market.minimumAmount,\n                findDecimals(market.acceptedToken),\n              )}{' '}\n              {findSymbol(market.acceptedToken)}\n            </StyledCardMarketPrice>\n            {/* <StyledCardMarketBuy\n              onClick={() => onBuyClick(Number(market.tokenId))}\n            >\n              Buy\n            </StyledCardMarketBuy> */}\n            <BuyCardButton asset={asset} mint={Number(market.tokenId)} />\n          </StyledCardMarket>\n        ))}\n      </StyledCardMarketTable>\n    </StyledCardMarketContainer>\n  ) : (\n    <p>No markets available</p>\n  );\n};\n","import { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { Modal } from '../../../components';\nimport { InputField } from '../../../components/InputField';\nimport {\n  StyledModalButtonsWrapper,\n  StyledModalButton,\n} from '../../../components/Modal/styles';\nimport { useTransferLsp8Token } from '../../../hooks/useTransferLsp8Token';\nimport { IProfile } from '../../../services/models';\n\ninterface TransferCardTokenIdModalProps {\n  cardAddress: string;\n  tokenId: number;\n  profile: IProfile;\n  onDismiss: () => any;\n}\n\nexport const TransferCardTokenIdModal = ({\n  cardAddress,\n  tokenId,\n  profile,\n  onDismiss,\n}: TransferCardTokenIdModalProps) => {\n  const [toAddress, setToAddress] = useState<string>('');\n\n  const { transferCard, transfering } = useTransferLsp8Token(\n    cardAddress,\n    toAddress,\n    tokenId,\n    profile,\n    onDismiss,\n  );\n\n  return (\n    <Modal>\n      <InputField\n        name=\"receiver's address\"\n        label=\"Receiver's address\"\n        type=\"text\"\n        changeHandler={(e) => setToAddress(e.target.value)}\n        align=\"start\"\n        placeholder=\"0x123456789…\"\n        value={toAddress}\n      />\n      <StyledModalButtonsWrapper topMargin>\n        <StyledModalButton\n          onClick={transferCard}\n          disabled={!ethers.utils.isAddress(toAddress)}\n        >\n          {transfering ? 'Transfering Card…' : 'Transfer Card'}\n        </StyledModalButton>\n      </StyledModalButtonsWrapper>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSelectMintModalContent = styled.div`\n  max-height: 40em;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSelectMintListHeader = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background: rgba(255, 255, 255, 0.15);\n  padding: 0.5em;\n  border-radius: 0.5em;\n  margin-bottom: 1.5em;\n`;\n\nexport const StyledSelectMintListHeaderContent = styled.h4``;\n\nexport const StyledSelectMintList = styled.div`\n  overflow-y: scroll;\n`;\n\nexport const StyledSelectMintListContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 1em;\n  cursor: pointer;\n\n  &:nth-child(even) {\n    border-radius: 0.5em;\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.06) 45.66%,\n      rgba(255, 255, 255, 0) 97.77%\n    );\n  }\n`;\n\nexport const StyledListMint = styled.p``;\n\nexport const StyledListPrice = styled.p``;\n","import { useMemo } from 'react';\nimport { IMarket, IWhiteListedTokens } from '../../../services/models';\nimport { displayPrice } from '../../../utility';\nimport {\n  StyledListMint,\n  StyledListPrice,\n  StyledSelectMintList,\n  StyledSelectMintListContent,\n  StyledSelectMintListHeader,\n  StyledSelectMintListHeaderContent,\n  StyledSelectMintModalContent,\n} from './styles';\n\ninterface IProps {\n  ownedTokenIds: number[];\n  markets: IMarket[];\n  whiteListedTokens: IWhiteListedTokens[];\n  onSelect: (index: number) => void;\n  onSelectCallback: () => void;\n}\n\nexport const SelectMintModalContent = ({\n  ownedTokenIds,\n  markets,\n  whiteListedTokens,\n  onSelect,\n  onSelectCallback,\n}: IProps) => {\n  const renderMintList = useMemo(\n    () =>\n      ownedTokenIds.map((id) => {\n        const market = markets.find((item) => Number(item.tokenId) === id);\n        const token =\n          market &&\n          whiteListedTokens.find(\n            (i) => i.tokenAddress === market.acceptedToken,\n          );\n        return (\n          <StyledSelectMintListContent\n            onClick={() => {\n              onSelect(id);\n              onSelectCallback();\n            }}\n          >\n            <StyledListMint>{id}</StyledListMint>\n            <StyledListPrice>\n              {market && token\n                ? `${displayPrice(\n                    market?.minimumAmount.toString(),\n                    token?.decimals,\n                  )} ${token.symbol}`\n                : '-'}\n            </StyledListPrice>\n          </StyledSelectMintListContent>\n        );\n      }),\n    [markets, onSelect, onSelectCallback, ownedTokenIds, whiteListedTokens],\n  );\n\n  return (\n    <StyledSelectMintModalContent>\n      <StyledSelectMintListHeader>\n        <StyledSelectMintListHeaderContent>\n          Mint\n        </StyledSelectMintListHeaderContent>\n        <StyledSelectMintListHeaderContent>\n          Price\n        </StyledSelectMintListHeaderContent>\n      </StyledSelectMintListHeader>\n      <StyledSelectMintList>{renderMintList}</StyledSelectMintList>\n    </StyledSelectMintModalContent>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  BackwardsIcon,\n  CategoryPropertyIcon,\n  EditionPropertyIcon,\n  ForwardsIcon,\n  OptionIcon,\n  ReloadIcon,\n  SeasonPropertyIcon,\n  SetPropertyIcon,\n  ShareIcon,\n  SubzonePropertyIcon,\n  TeamPropertyIcon,\n  TierPropertyIcon,\n  ZonePropertyIcon,\n  TransferIcon,\n} from '../../assets';\nimport { useSelector } from 'react-redux';\nimport { NetworkName, RootState } from '../../boot/types';\nimport {\n  clearState,\n  fetchAllMarkets,\n  fetchCard,\n  fetchMetaDataForTokenId,\n  selectCardById,\n} from '../../features/cards';\nimport { useEffect } from 'react';\nimport {\n  fetchAssetCreator,\n  fetchOwnerAddressOfTokenId,\n  fetchOwnerOfTokenId,\n  fetchProfileByAddress,\n  selectAllUsersItems,\n  selectUserById,\n  selectUserIds,\n} from '../../features/profiles';\nimport { useMemo } from 'react';\nimport {\n  StyledAssetDetailContent,\n  StyledCardError,\n  StyledLoader,\n  StyledLoadingHolder,\n  StyledAssetDetailsContentWrapper,\n  StyledCardInfoWrapper,\n  StyledCardPriceWrapper,\n  StyledCardInfo,\n  StyledCardMainDetails,\n  StyledMedia,\n  StyledMediaWrapper,\n  StyledCardPriceWrapperHeader,\n  StyledCardPriceLabel,\n  StyledQuickActions,\n  StyledReloadPriceAction,\n  StyledActionIcon,\n  StyledCardPriceValue,\n  StyledCardPriceValueWrapper,\n  StyledActionsButtonWrapper,\n  StyledCardInfoContainer,\n  StyledCardInfoLabel,\n  StyledCardInfoValue,\n  StyledCardInfoAccordion,\n  StyledCardPropertiesAccordion,\n  StyledCardProperties,\n  StyledCardPropertyIconWrapper,\n  StyledCardPropertyContainer,\n  StyledCardPropertyIcon,\n  StyledCardProperty,\n  StyledCardPropertyLabel,\n  StyledCardPropertyValue,\n  StyledHoldersAccordion,\n  StyledMarketAccordion,\n  StyledMintControls,\n  StyledMintSkipButton,\n  StyledMintSkipButtonImg,\n  StyledExplorerIcon,\n  StyledMintSliderIndex,\n  StyledChangePriceButton,\n  StyledWithdrawButton,\n  StyledSetPriceButton,\n  StyledTabContent,\n  StyledNoProfileLabel,\n  StyledMintSliderInput,\n  StyledSelectMintModalButton,\n} from './styles';\nimport { useAppDispatch } from '../../boot/store';\nimport { displayPrice, getChainExplorer, STATUS } from '../../utility';\nimport { SellCardModal } from './SellCardModal';\nimport { TabedAccordion } from '../../components/TabedAccordion';\nimport { StyledAccordionTitle } from '../../components/Accordion/styles';\nimport { ProfileCard } from '../../features/profiles/ProfileCard';\nimport ReactTooltip from 'react-tooltip';\nimport { IPermissionSet, IProfile } from '../../services/models';\nimport { HolderPagination } from './HoldersPagination';\nimport { getAddressPermissionsOnUniversalProfile } from '../../utility/permissions';\nimport { useAccount } from 'wagmi';\nimport { DesktopCreatorsAccordion } from './DesktopCreatorsAccordion';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { theme } from '../../boot/styles';\nimport { CardMarket } from './CardMarket';\nimport { useTransferLsp8Token } from '../../hooks/useTransferLsp8Token';\nimport { useRemoveMarketForLsp8Token } from '../../hooks/useRemoveMarketForLsp8Token';\nimport { useModal } from '../../hooks/useModal';\nimport { TransferCardTokenIdModal } from './TransferCardTokenIdModal';\nimport { SelectMintModalContent } from './SelectMintModalContent';\nimport { BuyCardButton } from './components/BuyCardButton';\n\ninterface IPrams {\n  add: string;\n  network: NetworkName;\n  id: string;\n}\n\nconst AssetDetails: React.FC = () => {\n  const [currentUsersPermissionsSet, setCurrentUsersPermissionsSet] = useState<\n    IPermissionSet['permissions']\n  >({\n    sign: '0',\n    transferValue: '0',\n    deploy: '0',\n    delegateCall: '0',\n    staticCall: '0',\n    call: '0',\n    setData: '0',\n    addPermissions: '0',\n    changePermissions: '0',\n    changeOwner: '0',\n  });\n  const params = useParams<IPrams>();\n\n  const history = useHistory();\n\n  const explorer = getChainExplorer(params.network);\n\n  const isDesktop = useMediaQuery(theme.screen.md);\n\n  const wasActiveProfile = useSelector((state: RootState) => state.userData.me);\n\n  const activeProfile = useSelector(\n    (state: RootState) =>\n      wasActiveProfile &&\n      selectUserById(state.userData[params.network], wasActiveProfile),\n  );\n\n  const allProfiles = useSelector((state: RootState) =>\n    selectUserIds(state.userData[params.network]),\n  );\n\n  const asset = useSelector((state: RootState) =>\n    selectCardById(state, params.add),\n  );\n\n  const owner = useSelector((state: RootState) =>\n    selectUserById(\n      state.userData[params.network],\n      asset?.owner ? asset.owner : '',\n    ),\n  );\n\n  const [{ data: account }] = useAccount();\n\n  const ownerStatus = useSelector(\n    (state: RootState) => state.userData[params.network].status,\n  );\n\n  const creators = useSelector((state: RootState) =>\n    selectAllUsersItems(state.userData[params.network]),\n  )?.filter((item) => {\n    return asset?.creators.some((i) => {\n      return i === item.address && item.network === params.network;\n    });\n  });\n\n  const cardError = useSelector((state: RootState) => state.cards.error);\n\n  const cardStatus = useSelector((state: RootState) => state.cards.status);\n\n  const marketsStatus = useSelector(\n    (state: RootState) => state.cards.marketsStatus,\n  );\n\n  const metaDataStatus = useSelector(\n    (state: RootState) => state.cards.metaDataStatus,\n  );\n\n  const creatorsStatus = useSelector(\n    (state: RootState) => state.userData[params.network].creatorStatus,\n  );\n\n  const mintIdInputRef = useRef<HTMLInputElement>(null);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const ownedTokenIds = useMemo(\n    () =>\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress.toLowerCase() === params.add.toLowerCase(),\n      )?.tokenIds,\n    [activeProfile, params.add],\n  );\n\n  const marketsForOwnedTokens = useMemo(\n    () =>\n      ownedTokenIds &&\n      asset?.markets.filter((item) => {\n        return ownedTokenIds.some((i) => {\n          return i === Number(item.tokenId);\n        });\n      }),\n    [asset?.markets, ownedTokenIds],\n  );\n\n  const currentMintMarket = useMemo(() => {\n    const market =\n      marketsForOwnedTokens &&\n      ownedTokenIds &&\n      marketsForOwnedTokens.find(\n        (item) => Number(item.tokenId) === ownedTokenIds[currentIndex],\n      );\n    const token =\n      market &&\n      asset &&\n      asset.whiteListedTokens.find(\n        (i) => i.tokenAddress === market.acceptedToken,\n      );\n    return (\n      market && {\n        ...market,\n        decimals: token && token.decimals,\n        symbol: token && token.symbol,\n      }\n    );\n  }, [asset, currentIndex, marketsForOwnedTokens, ownedTokenIds]);\n\n  const dispatch = useAppDispatch();\n\n  const { transferCard, transfering } = useTransferLsp8Token(\n    params.add,\n    account ? account.address : '',\n    ownedTokenIds ? ownedTokenIds[currentIndex] : 0,\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const { removeMarket, removingMarket } = useRemoveMarketForLsp8Token(\n    params.add,\n    parseInt(params.id),\n    activeProfile ? activeProfile : ({} as IProfile),\n  );\n\n  const {\n    handlePresent: onPresentSellCardModal,\n    onDismiss: onDismissSellCardModal,\n  } = useModal(\n    asset && ownedTokenIds && activeProfile && (\n      <SellCardModal\n        ownerProfile={activeProfile}\n        address={params.add}\n        mint={ownedTokenIds[currentIndex]}\n        price={currentMintMarket ? currentMintMarket.minimumAmount : undefined}\n        marketTokenAddress={\n          currentMintMarket ? currentMintMarket.acceptedToken : undefined\n        }\n        cardImg={asset.ls8MetaData[params.id ? params.id : 0]?.image}\n        onClose={() => onDismissSellCardModal()}\n        whiteListedTokens={asset.whiteListedTokens}\n        network={params.network}\n      />\n    ),\n    'Sell Card Modal',\n    'Sell Card',\n  );\n\n  const {\n    handlePresent: onPresentSelectMintModal,\n    onDismiss: onDismissSelectMintModal,\n  } = useModal(\n    ownedTokenIds && asset && (\n      <SelectMintModalContent\n        ownedTokenIds={ownedTokenIds}\n        markets={asset.markets}\n        whiteListedTokens={asset.whiteListedTokens}\n        onSelect={(tokenId: number) => {\n          setCurrentIndex(ownedTokenIds.indexOf(Number(tokenId)));\n        }}\n        onSelectCallback={() => onDismissSelectMintModal()}\n      />\n    ),\n    'Select Mint Modal',\n    'Select Mint',\n  );\n\n  const {\n    handlePresent: onPresentTransferCardModal,\n    onDismiss: onDismissTransferCardModal,\n  } = useModal(\n    <>\n      {activeProfile && (\n        <TransferCardTokenIdModal\n          cardAddress={params.add}\n          tokenId={parseInt(params.id)}\n          profile={activeProfile}\n          onDismiss={() => onDismissTransferCardModal()}\n        />\n      )}\n    </>,\n    'Card Transfer Modal',\n    'Transfer Card',\n  );\n\n  useMemo(() => {\n    if (!asset || owner || ownerStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchProfileByAddress({\n        address: asset.owner,\n        network: params.network,\n      }),\n    );\n  }, [asset, dispatch, owner, ownerStatus, params.network]);\n\n  useMemo(() => {\n    if (activeProfile) return;\n\n    wasActiveProfile &&\n      dispatch(\n        fetchOwnerOfTokenId({\n          address: wasActiveProfile,\n          network: params.network,\n        }),\n      );\n  }, [activeProfile, dispatch, params.network, wasActiveProfile]);\n\n  //getAllMarkets\n  useMemo(() => {\n    if (!asset || marketsStatus !== STATUS.IDLE) return;\n\n    dispatch(\n      fetchAllMarkets({ assetAddress: params.add, network: params.network }),\n    );\n  }, [asset, dispatch, marketsStatus, params.add, params.network]);\n\n  useMemo(() => {\n    if (!params.id || !ownedTokenIds) return;\n    setCurrentIndex(ownedTokenIds.indexOf(Number(params.id)));\n  }, [ownedTokenIds, params.id]);\n\n  useMemo(() => {\n    if (!params.id && ownedTokenIds) {\n      history.push(\n        `/${params.network}/asset/${params.add}/${ownedTokenIds[currentIndex]}`,\n      );\n    }\n  }, [\n    currentIndex,\n    history,\n    ownedTokenIds,\n    params.add,\n    params.id,\n    params.network,\n  ]);\n\n  useMemo(() => {\n    if (\n      wasActiveProfile &&\n      ownedTokenIds &&\n      ownedTokenIds.length > 0 &&\n      asset &&\n      !(`${ownedTokenIds[currentIndex].toString()}` in asset.ls8MetaData) &&\n      metaDataStatus !== STATUS.LOADING\n    ) {\n      dispatch(\n        fetchMetaDataForTokenId({\n          assetAddress: params.add,\n          network: params.network,\n          tokenId: ownedTokenIds[currentIndex],\n        }),\n      );\n    }\n  }, [\n    asset,\n    currentIndex,\n    dispatch,\n    metaDataStatus,\n    ownedTokenIds,\n    params.add,\n    params.network,\n    wasActiveProfile,\n  ]);\n\n  useMemo(() => {\n    if (!asset || creatorsStatus === STATUS.LOADING) return;\n    let addresses: string[] = [];\n    asset.creators.forEach((item) => {\n      if (!allProfiles?.includes(item)) {\n        addresses.push(item);\n      }\n    });\n    if (addresses.length > 0) {\n      dispatch(\n        fetchAssetCreator({ address: addresses, network: params.network }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asset, allProfiles, dispatch, params.network]);\n\n  useEffect(() => {\n    dispatch(clearState());\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (asset || cardStatus !== STATUS.IDLE) return;\n    dispatch(\n      fetchCard({\n        address: params.add,\n        network: params.network,\n        tokenId: params.id,\n      }),\n    );\n  }, [asset, cardStatus, dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!params.id || !params.add) return;\n    dispatch(\n      fetchOwnerAddressOfTokenId({\n        assetAddress: params.add,\n        tokenId: params.id,\n        network: params.network,\n      }),\n    );\n  }, [dispatch, params.add, params.id, params.network]);\n\n  useEffect(() => {\n    if (!activeProfile || !account) return;\n    const _currentUsersPermissionsSet = getAddressPermissionsOnUniversalProfile(\n      activeProfile.permissionSet,\n      account.address,\n    );\n    if (_currentUsersPermissionsSet !== undefined)\n      setCurrentUsersPermissionsSet(_currentUsersPermissionsSet.permissions);\n  }, [owner, account, activeProfile]);\n\n  const propertiesImages: { [key: string]: string } = useMemo(\n    () => ({\n      Tier: TierPropertyIcon,\n      Edition: EditionPropertyIcon,\n      'Edition Category': CategoryPropertyIcon,\n      'Edition Set': SetPropertyIcon,\n      Season: SeasonPropertyIcon,\n      Zone: ZonePropertyIcon,\n      League: SubzonePropertyIcon,\n      Team: TeamPropertyIcon,\n    }),\n    [],\n  );\n\n  const cardProperties = useMemo(\n    () => [\n      {\n        label: 'Tier',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.tier,\n        icon: TierPropertyIcon,\n      },\n      {\n        label: 'Edition',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.edition,\n        icon: EditionPropertyIcon,\n      },\n      {\n        label: 'Category',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionCategory,\n        icon: CategoryPropertyIcon,\n      },\n      {\n        label: 'Set',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.editionSet,\n        icon: SetPropertyIcon,\n      },\n      {\n        label: 'Season',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.season,\n        icon: SeasonPropertyIcon,\n      },\n      {\n        label: 'Zone',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.zoneLabel,\n        icon: ZonePropertyIcon,\n      },\n      {\n        label: 'League',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.leagueLabel,\n        icon: SubzonePropertyIcon,\n      },\n      {\n        label: 'Team',\n        value:\n          asset?.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n            ?.teamLabel,\n        icon: TeamPropertyIcon,\n      },\n    ],\n    [asset, currentIndex, ownedTokenIds],\n  );\n\n  const cardInfo: {\n    label: string;\n    value: string;\n    valueType?: string;\n  }[] = [\n    {\n      label: 'Contract Address',\n      value: asset ? asset.address : '',\n      valueType: 'address',\n    },\n    {\n      label: 'Mint',\n      value: ownedTokenIds ? ownedTokenIds[currentIndex].toString() : '',\n    },\n    {\n      label: 'Total amount of Tokens',\n      value: asset ? asset.totalSupply.toString() : '',\n    },\n    { label: 'Token Standard', value: 'LSP8' },\n    { label: 'Network', value: asset ? asset.network : '' },\n    { label: 'Score', value: '' },\n    {\n      label: 'Current owner',\n      value: wasActiveProfile ? wasActiveProfile : '',\n      valueType: 'address',\n    },\n  ];\n\n  const nextMint = () => {\n    const nextIndex = currentIndex + 1;\n    if (!ownedTokenIds || nextIndex >= ownedTokenIds.length) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (nextIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[nextIndex]}`,\n    );\n    setCurrentIndex(nextIndex);\n  };\n\n  const previousMint = () => {\n    const previousIndex = currentIndex - 1;\n    if (!ownedTokenIds || previousIndex < 0) return;\n    if (mintIdInputRef.current) {\n      mintIdInputRef.current.value = (previousIndex + 1).toString();\n    }\n    history.push(\n      `/${params.network}/asset/${params.add}/${ownedTokenIds[previousIndex]}`,\n    );\n    setCurrentIndex(previousIndex);\n  };\n\n  const renderIssuer = useMemo(() => {\n    const findBalanceOf =\n      owner &&\n      owner.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {asset?.address === params.add && owner?.address === asset.owner && (\n          <>\n            <ProfileCard\n              userProfile={owner}\n              balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!owner && (\n          <StyledNoProfileLabel>Issuer not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [asset?.address, asset?.owner, params.add, owner]);\n\n  const renderCurrentMintOwner = useMemo(() => {\n    const findBalanceOf =\n      activeProfile &&\n      activeProfile.ownedAssets.find(\n        (item) => item.assetAddress === params.add.toLowerCase(),\n      );\n    return (\n      <StyledTabContent>\n        {activeProfile && (\n          <>\n            <ProfileCard\n              userProfile={activeProfile}\n              balance={findBalanceOf ? findBalanceOf.balance : 0}\n              type=\"owner\"\n              tooltipId=\"ownerTooltip\"\n            />\n            <ReactTooltip\n              id=\"ownerTooltip\"\n              getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n            ></ReactTooltip>\n          </>\n        )}\n        {!activeProfile && (\n          <StyledNoProfileLabel>Owner not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    );\n  }, [activeProfile, params.add]);\n\n  const renderCreators = useMemo(\n    () => (\n      <StyledTabContent>\n        {creators?.map((creator: IProfile) => {\n          const findBalanceOf = creator.ownedAssets.find(\n            (item) => item.assetAddress === params.add.toLowerCase(),\n          );\n          return (\n            <React.Fragment key={creator.address}>\n              <ProfileCard\n                userProfile={creator}\n                balance={findBalanceOf?.balance ? findBalanceOf.balance : 0}\n                type=\"creator\"\n                tooltipId=\"designerTooltip\"\n              />\n              <ReactTooltip\n                id=\"designerTooltip\"\n                getContent={(dataTip) => <span>Token Ids: {dataTip}</span>}\n              ></ReactTooltip>\n            </React.Fragment>\n          );\n        })}\n        {creators.length === 0 && (\n          <StyledNoProfileLabel>Creators not found</StyledNoProfileLabel>\n        )}\n      </StyledTabContent>\n    ),\n    [creators, params.add],\n  );\n\n  const renderHolderPagination = useMemo(() => {\n    if (!asset) return;\n    return <HolderPagination holdersAddresses={asset.holders} />;\n  }, [asset]);\n\n  const renderCardPrice = useMemo(() => {\n    if (\n      (!currentUsersPermissionsSet ||\n        currentUsersPermissionsSet.call === '0') &&\n      currentMintMarket\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            {asset && ownedTokenIds && (\n              <BuyCardButton asset={asset} mint={ownedTokenIds[currentIndex]} />\n            )}\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n\n    if (\n      !currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>-</StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={onPresentSellCardModal}>\n              Set price\n            </StyledSetPriceButton>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transfering\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n    if (\n      currentMintMarket &&\n      ownedTokenIds &&\n      currentUsersPermissionsSet.call === '1'\n    ) {\n      return (\n        <>\n          <StyledCardPriceValueWrapper>\n            <StyledCardPriceValue>\n              {currentMintMarket.minimumAmount &&\n                currentMintMarket.decimals &&\n                displayPrice(\n                  currentMintMarket.minimumAmount,\n                  currentMintMarket.decimals,\n                ).toString()}{' '}\n              {currentMintMarket.symbol}\n            </StyledCardPriceValue>\n          </StyledCardPriceValueWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledChangePriceButton onClick={onPresentSellCardModal}>\n              Change price\n            </StyledChangePriceButton>\n            <StyledWithdrawButton onClick={removeMarket}>\n              {removingMarket ? 'Withdrawing from sale…' : 'Withdraw from sale'}\n            </StyledWithdrawButton>\n          </StyledActionsButtonWrapper>\n          <StyledActionsButtonWrapper>\n            <StyledSetPriceButton onClick={transferCard}>\n              {transfering\n                ? 'Transfering to metamask account…'\n                : 'Transfer to metamask account'}\n            </StyledSetPriceButton>\n          </StyledActionsButtonWrapper>\n        </>\n      );\n    }\n  }, [\n    currentUsersPermissionsSet,\n    currentMintMarket,\n    ownedTokenIds,\n    asset,\n    currentIndex,\n    onPresentSellCardModal,\n    transferCard,\n    transfering,\n    removeMarket,\n    removingMarket,\n  ]);\n\n  const renderCardProperties = useMemo(() => {\n    if (\n      asset &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        ?.attributes &&\n      asset.ls8MetaData[ownedTokenIds ? ownedTokenIds[currentIndex] : 0]\n        .attributes.length > 0\n    ) {\n      return asset?.ls8MetaData[\n        ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n      ].attributes.map((item) => {\n        if ('trait_type' in item) {\n          return (\n            <StyledCardPropertyContainer key={item.trait_type}>\n              <StyledCardPropertyIconWrapper>\n                <StyledCardPropertyIcon\n                  src={propertiesImages[item.trait_type]}\n                  alt=\"\"\n                />\n              </StyledCardPropertyIconWrapper>\n              <StyledCardProperty>\n                <StyledCardPropertyLabel>\n                  {item.trait_type}\n                </StyledCardPropertyLabel>\n                <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n              </StyledCardProperty>\n            </StyledCardPropertyContainer>\n          );\n        }\n        return null;\n      });\n    } else {\n      return cardProperties.map((item) => (\n        <StyledCardPropertyContainer key={item.label}>\n          <StyledCardPropertyIconWrapper>\n            <StyledCardPropertyIcon src={item.icon} alt=\"\" />\n          </StyledCardPropertyIconWrapper>\n          <StyledCardProperty>\n            <StyledCardPropertyLabel>{item.label}</StyledCardPropertyLabel>\n            <StyledCardPropertyValue>{item.value}</StyledCardPropertyValue>\n          </StyledCardProperty>\n        </StyledCardPropertyContainer>\n      ));\n    }\n  }, [asset, cardProperties, currentIndex, ownedTokenIds, propertiesImages]);\n\n  return (\n    <StyledAssetDetailsContentWrapper>\n      {cardStatus === 'loading' ? (\n        <StyledLoadingHolder>\n          <StyledLoader color=\"#ed7a2d\" />\n        </StyledLoadingHolder>\n      ) : (\n        <>\n          {cardError && cardStatus === 'failed' ? (\n            <>\n              <StyledCardError>Asset not found</StyledCardError>\n            </>\n          ) : (\n            <StyledAssetDetailContent>\n              <StyledCardMainDetails>\n                <StyledMediaWrapper>\n                  {asset && (\n                    <StyledMedia\n                      src={\n                        asset.ls8MetaData[\n                          ownedTokenIds ? ownedTokenIds[currentIndex] : 0\n                        ]?.image\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                  <a\n                    href={explorer && explorer.exploreUrl + asset?.address}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <StyledExplorerIcon src={explorer?.icon} alt=\"\" />\n                  </a>\n                  {wasActiveProfile && ownedTokenIds && (\n                    <>\n                      <StyledMintControls>\n                        <StyledMintSkipButton onClick={previousMint}>\n                          <StyledMintSkipButtonImg src={BackwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledMintSliderIndex>\n                          <StyledMintSliderInput\n                            type=\"number\"\n                            min={1}\n                            max={ownedTokenIds.length}\n                            defaultValue={currentIndex + 1}\n                            ref={mintIdInputRef}\n                            onBlur={(\n                              event: React.FocusEvent<HTMLInputElement>,\n                            ) => {\n                              const val = Number(event.target.value);\n                              if (val > 0 && val <= ownedTokenIds.length) {\n                                history.push(\n                                  `/${params.network}/asset/${params.add}/${\n                                    ownedTokenIds[val - 1]\n                                  }`,\n                                );\n                                setCurrentIndex(val - 1);\n                              }\n                            }}\n                          />\n                          /{ownedTokenIds.length}\n                        </StyledMintSliderIndex>\n                        <StyledMintSkipButton onClick={nextMint}>\n                          <StyledMintSkipButtonImg src={ForwardsIcon} alt=\"\" />\n                        </StyledMintSkipButton>\n                        <StyledSelectMintModalButton\n                          onClick={onPresentSelectMintModal}\n                        >\n                          Select Mint\n                        </StyledSelectMintModalButton>\n                      </StyledMintControls>\n                    </>\n                  )}\n                </StyledMediaWrapper>\n                <StyledCardInfoWrapper>\n                  <StyledCardPriceWrapper>\n                    <StyledCardPriceWrapperHeader>\n                      <StyledCardPriceLabel>Current Price</StyledCardPriceLabel>\n                      <StyledQuickActions>\n                        {ownedTokenIds &&\n                          currentUsersPermissionsSet.call === '1' && (\n                            <StyledReloadPriceAction>\n                              <StyledActionIcon\n                                src={TransferIcon}\n                                alt=\"transfer\"\n                                title=\"transfer\"\n                                onClick={onPresentTransferCardModal}\n                              />\n                            </StyledReloadPriceAction>\n                          )}\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ReloadIcon}\n                            alt=\"reload\"\n                            title=\"reload\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={ShareIcon}\n                            alt=\"share\"\n                            title=\"share\"\n                          />\n                        </StyledReloadPriceAction>\n                        <StyledReloadPriceAction>\n                          <StyledActionIcon\n                            src={OptionIcon}\n                            alt=\"options\"\n                            title=\"options\"\n                          />\n                        </StyledReloadPriceAction>\n                      </StyledQuickActions>\n                    </StyledCardPriceWrapperHeader>\n                    {renderCardPrice}\n                  </StyledCardPriceWrapper>\n                  <StyledCardInfoAccordion\n                    header={\n                      <StyledAccordionTitle>Card Info</StyledAccordionTitle>\n                    }\n                    enableToggle\n                  >\n                    <StyledCardInfo>\n                      {cardInfo.map((item) => (\n                        <StyledCardInfoContainer key={item.label}>\n                          <StyledCardInfoLabel>\n                            {item.label}\n                          </StyledCardInfoLabel>\n                          <StyledCardInfoValue>\n                            {item.valueType === 'address'\n                              ? `${item.value.slice(0, 8)}...${item.value.slice(\n                                  item.value.length - 4,\n                                  item.value.length,\n                                )}`\n                              : item.value}\n                          </StyledCardInfoValue>\n                        </StyledCardInfoContainer>\n                      ))}\n                    </StyledCardInfo>\n                  </StyledCardInfoAccordion>\n                </StyledCardInfoWrapper>\n              </StyledCardMainDetails>\n              {!isDesktop ? (\n                <TabedAccordion\n                  tabs={[\n                    { name: 'Creators', content: renderCreators },\n                    { name: 'Owner', content: renderCurrentMintOwner },\n                    { name: 'Issuer', content: renderIssuer },\n                  ]}\n                />\n              ) : (\n                <DesktopCreatorsAccordion\n                  creatorsContent={renderCreators}\n                  ownerContent={activeProfile && renderCurrentMintOwner}\n                  issuerContent={renderIssuer}\n                  enableToggle\n                />\n              )}\n              <StyledCardPropertiesAccordion\n                header={<StyledAccordionTitle>Details</StyledAccordionTitle>}\n                enableToggle\n              >\n                <StyledCardProperties>\n                  {renderCardProperties}\n                </StyledCardProperties>\n              </StyledCardPropertiesAccordion>\n              <StyledMarketAccordion\n                header={<StyledAccordionTitle>Market</StyledAccordionTitle>}\n                enableToggle\n              >\n                {asset && (\n                  <CardMarket\n                    asset={asset}\n                    cardMarkets={asset?.markets}\n                    whiteListedTokens={asset?.whiteListedTokens}\n                  />\n                )}\n              </StyledMarketAccordion>\n              <StyledHoldersAccordion\n                header={\n                  <StyledAccordionTitle>Other Holders</StyledAccordionTitle>\n                }\n                enableToggle\n              >\n                {renderHolderPagination}\n              </StyledHoldersAccordion>\n            </StyledAssetDetailContent>\n          )}\n        </>\n      )}\n    </StyledAssetDetailsContentWrapper>\n  );\n};\n\nexport default AssetDetails;\n","import { Signer } from 'ethers';\nimport { useState } from 'react';\nimport { useSigner } from 'wagmi';\nimport { KeyManagerApi } from '../../services/controllers/KeyManager';\nimport { LSP3ProfileApi } from '../../services/controllers/LSP3Profile';\nimport { IOwnedAssets } from '../../services/models';\nimport { tokenIdAsBytes32 } from '../../utils/cardToken';\nimport { Address } from '../../utils/types';\n\n// @Todo fix type\ninterface IProfile {\n  address: Address;\n  owner: Address;\n  isOwnerKeyManager: boolean;\n  ownedAssets: IOwnedAssets[];\n}\n\nexport const useRemoveMarketForLsp8Token = (\n  cardAddress: Address,\n  tokenId: number | null,\n  profile: IProfile,\n  callback?: () => any,\n) => {\n  const [removingMarket, setRemovingMarket] = useState(false);\n  const [error, setError] = useState();\n  const [{ data: signer }] = useSigner();\n\n  const removeMarket = async () => {\n    setRemovingMarket(true);\n    if (profile.isOwnerKeyManager) {\n      await KeyManagerApi.removeMarketViaKeymanager(\n        cardAddress,\n        profile.address,\n        profile.owner,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    } else {\n      await LSP3ProfileApi.removeMarket(\n        cardAddress,\n        profile.address,\n        tokenId ? tokenIdAsBytes32(tokenId) : tokenIdAsBytes32(0),\n        signer as Signer,\n      )\n        .then(() => {\n          callback && callback();\n        })\n        .catch((error: any) => {\n          setError(error);\n        })\n        .finally(() => {\n          setRemovingMarket(false);\n        });\n    }\n  };\n\n  return { removeMarket, removingMarket, error };\n};\n"],"sourceRoot":""}